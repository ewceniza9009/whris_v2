#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace whris_v2.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hris_mavill")]
	public partial class whrisDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__MigrationHistory(__MigrationHistory instance);
    partial void Update__MigrationHistory(__MigrationHistory instance);
    partial void Delete__MigrationHistory(__MigrationHistory instance);
    partial void InsertTrnPayrollOtherIncomeLine(TrnPayrollOtherIncomeLine instance);
    partial void UpdateTrnPayrollOtherIncomeLine(TrnPayrollOtherIncomeLine instance);
    partial void DeleteTrnPayrollOtherIncomeLine(TrnPayrollOtherIncomeLine instance);
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertMstBranch(MstBranch instance);
    partial void UpdateMstBranch(MstBranch instance);
    partial void DeleteMstBranch(MstBranch instance);
    partial void InsertMstCitizenship(MstCitizenship instance);
    partial void UpdateMstCitizenship(MstCitizenship instance);
    partial void DeleteMstCitizenship(MstCitizenship instance);
    partial void InsertMstCompany(MstCompany instance);
    partial void UpdateMstCompany(MstCompany instance);
    partial void DeleteMstCompany(MstCompany instance);
    partial void InsertMstDayType(MstDayType instance);
    partial void UpdateMstDayType(MstDayType instance);
    partial void DeleteMstDayType(MstDayType instance);
    partial void InsertMstDayTypeDay(MstDayTypeDay instance);
    partial void UpdateMstDayTypeDay(MstDayTypeDay instance);
    partial void DeleteMstDayTypeDay(MstDayTypeDay instance);
    partial void InsertMstDepartment(MstDepartment instance);
    partial void UpdateMstDepartment(MstDepartment instance);
    partial void DeleteMstDepartment(MstDepartment instance);
    partial void InsertMstDivision(MstDivision instance);
    partial void UpdateMstDivision(MstDivision instance);
    partial void DeleteMstDivision(MstDivision instance);
    partial void InsertMstEmployee(MstEmployee instance);
    partial void UpdateMstEmployee(MstEmployee instance);
    partial void DeleteMstEmployee(MstEmployee instance);
    partial void InsertMstEmployeeLoan(MstEmployeeLoan instance);
    partial void UpdateMstEmployeeLoan(MstEmployeeLoan instance);
    partial void DeleteMstEmployeeLoan(MstEmployeeLoan instance);
    partial void InsertMstEmployeeMemo(MstEmployeeMemo instance);
    partial void UpdateMstEmployeeMemo(MstEmployeeMemo instance);
    partial void DeleteMstEmployeeMemo(MstEmployeeMemo instance);
    partial void InsertMstEmployeeShiftCode(MstEmployeeShiftCode instance);
    partial void UpdateMstEmployeeShiftCode(MstEmployeeShiftCode instance);
    partial void DeleteMstEmployeeShiftCode(MstEmployeeShiftCode instance);
    partial void InsertMstLeave(MstLeave instance);
    partial void UpdateMstLeave(MstLeave instance);
    partial void DeleteMstLeave(MstLeave instance);
    partial void InsertMstMandatoryTable(MstMandatoryTable instance);
    partial void UpdateMstMandatoryTable(MstMandatoryTable instance);
    partial void DeleteMstMandatoryTable(MstMandatoryTable instance);
    partial void InsertMstMonth(MstMonth instance);
    partial void UpdateMstMonth(MstMonth instance);
    partial void DeleteMstMonth(MstMonth instance);
    partial void InsertMstOtherDeduction(MstOtherDeduction instance);
    partial void UpdateMstOtherDeduction(MstOtherDeduction instance);
    partial void DeleteMstOtherDeduction(MstOtherDeduction instance);
    partial void InsertMstOtherIncome(MstOtherIncome instance);
    partial void UpdateMstOtherIncome(MstOtherIncome instance);
    partial void DeleteMstOtherIncome(MstOtherIncome instance);
    partial void InsertMstPayrollGroup(MstPayrollGroup instance);
    partial void UpdateMstPayrollGroup(MstPayrollGroup instance);
    partial void DeleteMstPayrollGroup(MstPayrollGroup instance);
    partial void InsertMstPayrollType(MstPayrollType instance);
    partial void UpdateMstPayrollType(MstPayrollType instance);
    partial void DeleteMstPayrollType(MstPayrollType instance);
    partial void InsertMstPeriod(MstPeriod instance);
    partial void UpdateMstPeriod(MstPeriod instance);
    partial void DeleteMstPeriod(MstPeriod instance);
    partial void InsertMstPosition(MstPosition instance);
    partial void UpdateMstPosition(MstPosition instance);
    partial void DeleteMstPosition(MstPosition instance);
    partial void InsertMstReligion(MstReligion instance);
    partial void UpdateMstReligion(MstReligion instance);
    partial void DeleteMstReligion(MstReligion instance);
    partial void InsertMstShiftCode(MstShiftCode instance);
    partial void UpdateMstShiftCode(MstShiftCode instance);
    partial void DeleteMstShiftCode(MstShiftCode instance);
    partial void InsertMstShiftCodeDay(MstShiftCodeDay instance);
    partial void UpdateMstShiftCodeDay(MstShiftCodeDay instance);
    partial void DeleteMstShiftCodeDay(MstShiftCodeDay instance);
    partial void InsertMstTableHDMF(MstTableHDMF instance);
    partial void UpdateMstTableHDMF(MstTableHDMF instance);
    partial void DeleteMstTableHDMF(MstTableHDMF instance);
    partial void InsertMstTablePHIC(MstTablePHIC instance);
    partial void UpdateMstTablePHIC(MstTablePHIC instance);
    partial void DeleteMstTablePHIC(MstTablePHIC instance);
    partial void InsertMstTableSSS(MstTableSSS instance);
    partial void UpdateMstTableSSS(MstTableSSS instance);
    partial void DeleteMstTableSSS(MstTableSSS instance);
    partial void InsertMstTableWTaxMonthly(MstTableWTaxMonthly instance);
    partial void UpdateMstTableWTaxMonthly(MstTableWTaxMonthly instance);
    partial void DeleteMstTableWTaxMonthly(MstTableWTaxMonthly instance);
    partial void InsertMstTableWTaxSemiMonthly(MstTableWTaxSemiMonthly instance);
    partial void UpdateMstTableWTaxSemiMonthly(MstTableWTaxSemiMonthly instance);
    partial void DeleteMstTableWTaxSemiMonthly(MstTableWTaxSemiMonthly instance);
    partial void InsertMstTableWTaxYearly(MstTableWTaxYearly instance);
    partial void UpdateMstTableWTaxYearly(MstTableWTaxYearly instance);
    partial void DeleteMstTableWTaxYearly(MstTableWTaxYearly instance);
    partial void InsertMstTaxCode(MstTaxCode instance);
    partial void UpdateMstTaxCode(MstTaxCode instance);
    partial void DeleteMstTaxCode(MstTaxCode instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserForm(MstUserForm instance);
    partial void UpdateMstUserForm(MstUserForm instance);
    partial void DeleteMstUserForm(MstUserForm instance);
    partial void InsertMstUserPayrollGroup(MstUserPayrollGroup instance);
    partial void UpdateMstUserPayrollGroup(MstUserPayrollGroup instance);
    partial void DeleteMstUserPayrollGroup(MstUserPayrollGroup instance);
    partial void InsertMstZipCode(MstZipCode instance);
    partial void UpdateMstZipCode(MstZipCode instance);
    partial void DeleteMstZipCode(MstZipCode instance);
    partial void InsertSysForm(SysForm instance);
    partial void UpdateSysForm(SysForm instance);
    partial void DeleteSysForm(SysForm instance);
    partial void InsertTrnChangeShift(TrnChangeShift instance);
    partial void UpdateTrnChangeShift(TrnChangeShift instance);
    partial void DeleteTrnChangeShift(TrnChangeShift instance);
    partial void InsertTrnChangeShiftDraft(TrnChangeShiftDraft instance);
    partial void UpdateTrnChangeShiftDraft(TrnChangeShiftDraft instance);
    partial void DeleteTrnChangeShiftDraft(TrnChangeShiftDraft instance);
    partial void InsertTrnChangeShiftLine(TrnChangeShiftLine instance);
    partial void UpdateTrnChangeShiftLine(TrnChangeShiftLine instance);
    partial void DeleteTrnChangeShiftLine(TrnChangeShiftLine instance);
    partial void InsertTrnDTR(TrnDTR instance);
    partial void UpdateTrnDTR(TrnDTR instance);
    partial void DeleteTrnDTR(TrnDTR instance);
    partial void InsertTrnDTRLine(TrnDTRLine instance);
    partial void UpdateTrnDTRLine(TrnDTRLine instance);
    partial void DeleteTrnDTRLine(TrnDTRLine instance);
    partial void InsertTrnDTRLog(TrnDTRLog instance);
    partial void UpdateTrnDTRLog(TrnDTRLog instance);
    partial void DeleteTrnDTRLog(TrnDTRLog instance);
    partial void InsertTrnLastWithholdingTax(TrnLastWithholdingTax instance);
    partial void UpdateTrnLastWithholdingTax(TrnLastWithholdingTax instance);
    partial void DeleteTrnLastWithholdingTax(TrnLastWithholdingTax instance);
    partial void InsertTrnLastWithholdingTaxLine(TrnLastWithholdingTaxLine instance);
    partial void UpdateTrnLastWithholdingTaxLine(TrnLastWithholdingTaxLine instance);
    partial void DeleteTrnLastWithholdingTaxLine(TrnLastWithholdingTaxLine instance);
    partial void InsertTrnLeaveApplication(TrnLeaveApplication instance);
    partial void UpdateTrnLeaveApplication(TrnLeaveApplication instance);
    partial void DeleteTrnLeaveApplication(TrnLeaveApplication instance);
    partial void InsertTrnLeaveApplicationDraft(TrnLeaveApplicationDraft instance);
    partial void UpdateTrnLeaveApplicationDraft(TrnLeaveApplicationDraft instance);
    partial void DeleteTrnLeaveApplicationDraft(TrnLeaveApplicationDraft instance);
    partial void InsertTrnLeaveApplicationLine(TrnLeaveApplicationLine instance);
    partial void UpdateTrnLeaveApplicationLine(TrnLeaveApplicationLine instance);
    partial void DeleteTrnLeaveApplicationLine(TrnLeaveApplicationLine instance);
    partial void InsertTrnLeaveLedger(TrnLeaveLedger instance);
    partial void UpdateTrnLeaveLedger(TrnLeaveLedger instance);
    partial void DeleteTrnLeaveLedger(TrnLeaveLedger instance);
    partial void InsertTrnLoanLedger(TrnLoanLedger instance);
    partial void UpdateTrnLoanLedger(TrnLoanLedger instance);
    partial void DeleteTrnLoanLedger(TrnLoanLedger instance);
    partial void InsertTrnOverTime(TrnOverTime instance);
    partial void UpdateTrnOverTime(TrnOverTime instance);
    partial void DeleteTrnOverTime(TrnOverTime instance);
    partial void InsertTrnOverTimeDraft(TrnOverTimeDraft instance);
    partial void UpdateTrnOverTimeDraft(TrnOverTimeDraft instance);
    partial void DeleteTrnOverTimeDraft(TrnOverTimeDraft instance);
    partial void InsertTrnOverTimeLine(TrnOverTimeLine instance);
    partial void UpdateTrnOverTimeLine(TrnOverTimeLine instance);
    partial void DeleteTrnOverTimeLine(TrnOverTimeLine instance);
    partial void InsertTrnPayroll(TrnPayroll instance);
    partial void UpdateTrnPayroll(TrnPayroll instance);
    partial void DeleteTrnPayroll(TrnPayroll instance);
    partial void InsertTrnPayrollLine(TrnPayrollLine instance);
    partial void UpdateTrnPayrollLine(TrnPayrollLine instance);
    partial void DeleteTrnPayrollLine(TrnPayrollLine instance);
    partial void InsertTrnPayrollOtherDeduction(TrnPayrollOtherDeduction instance);
    partial void UpdateTrnPayrollOtherDeduction(TrnPayrollOtherDeduction instance);
    partial void DeleteTrnPayrollOtherDeduction(TrnPayrollOtherDeduction instance);
    partial void InsertTrnPayrollOtherDeductionLine(TrnPayrollOtherDeductionLine instance);
    partial void UpdateTrnPayrollOtherDeductionLine(TrnPayrollOtherDeductionLine instance);
    partial void DeleteTrnPayrollOtherDeductionLine(TrnPayrollOtherDeductionLine instance);
    partial void InsertTrnPayrollOtherIncome(TrnPayrollOtherIncome instance);
    partial void UpdateTrnPayrollOtherIncome(TrnPayrollOtherIncome instance);
    partial void DeleteTrnPayrollOtherIncome(TrnPayrollOtherIncome instance);
    #endregion
		
		public whrisDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["hris_mavillConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public whrisDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public whrisDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public whrisDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public whrisDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistories
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<TrnPayrollOtherIncomeLine> TrnPayrollOtherIncomeLines
		{
			get
			{
				return this.GetTable<TrnPayrollOtherIncomeLine>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<MstBranch> MstBranches
		{
			get
			{
				return this.GetTable<MstBranch>();
			}
		}
		
		public System.Data.Linq.Table<MstCitizenship> MstCitizenships
		{
			get
			{
				return this.GetTable<MstCitizenship>();
			}
		}
		
		public System.Data.Linq.Table<MstCompany> MstCompanies
		{
			get
			{
				return this.GetTable<MstCompany>();
			}
		}
		
		public System.Data.Linq.Table<MstDayType> MstDayTypes
		{
			get
			{
				return this.GetTable<MstDayType>();
			}
		}
		
		public System.Data.Linq.Table<MstDayTypeDay> MstDayTypeDays
		{
			get
			{
				return this.GetTable<MstDayTypeDay>();
			}
		}
		
		public System.Data.Linq.Table<MstDepartment> MstDepartments
		{
			get
			{
				return this.GetTable<MstDepartment>();
			}
		}
		
		public System.Data.Linq.Table<MstDivision> MstDivisions
		{
			get
			{
				return this.GetTable<MstDivision>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployee> MstEmployees
		{
			get
			{
				return this.GetTable<MstEmployee>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployeeLoan> MstEmployeeLoans
		{
			get
			{
				return this.GetTable<MstEmployeeLoan>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployeeMemo> MstEmployeeMemos
		{
			get
			{
				return this.GetTable<MstEmployeeMemo>();
			}
		}
		
		public System.Data.Linq.Table<MstEmployeeShiftCode> MstEmployeeShiftCodes
		{
			get
			{
				return this.GetTable<MstEmployeeShiftCode>();
			}
		}
		
		public System.Data.Linq.Table<MstLeave> MstLeaves
		{
			get
			{
				return this.GetTable<MstLeave>();
			}
		}
		
		public System.Data.Linq.Table<MstMandatoryTable> MstMandatoryTables
		{
			get
			{
				return this.GetTable<MstMandatoryTable>();
			}
		}
		
		public System.Data.Linq.Table<MstMonth> MstMonths
		{
			get
			{
				return this.GetTable<MstMonth>();
			}
		}
		
		public System.Data.Linq.Table<MstOtherDeduction> MstOtherDeductions
		{
			get
			{
				return this.GetTable<MstOtherDeduction>();
			}
		}
		
		public System.Data.Linq.Table<MstOtherIncome> MstOtherIncomes
		{
			get
			{
				return this.GetTable<MstOtherIncome>();
			}
		}
		
		public System.Data.Linq.Table<MstPayrollGroup> MstPayrollGroups
		{
			get
			{
				return this.GetTable<MstPayrollGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstPayrollType> MstPayrollTypes
		{
			get
			{
				return this.GetTable<MstPayrollType>();
			}
		}
		
		public System.Data.Linq.Table<MstPeriod> MstPeriods
		{
			get
			{
				return this.GetTable<MstPeriod>();
			}
		}
		
		public System.Data.Linq.Table<MstPosition> MstPositions
		{
			get
			{
				return this.GetTable<MstPosition>();
			}
		}
		
		public System.Data.Linq.Table<MstReligion> MstReligions
		{
			get
			{
				return this.GetTable<MstReligion>();
			}
		}
		
		public System.Data.Linq.Table<MstShiftCode> MstShiftCodes
		{
			get
			{
				return this.GetTable<MstShiftCode>();
			}
		}
		
		public System.Data.Linq.Table<MstShiftCodeDay> MstShiftCodeDays
		{
			get
			{
				return this.GetTable<MstShiftCodeDay>();
			}
		}
		
		public System.Data.Linq.Table<MstTableHDMF> MstTableHDMFs
		{
			get
			{
				return this.GetTable<MstTableHDMF>();
			}
		}
		
		public System.Data.Linq.Table<MstTablePHIC> MstTablePHICs
		{
			get
			{
				return this.GetTable<MstTablePHIC>();
			}
		}
		
		public System.Data.Linq.Table<MstTableSSS> MstTableSSSes
		{
			get
			{
				return this.GetTable<MstTableSSS>();
			}
		}
		
		public System.Data.Linq.Table<MstTableWTaxMonthly> MstTableWTaxMonthlies
		{
			get
			{
				return this.GetTable<MstTableWTaxMonthly>();
			}
		}
		
		public System.Data.Linq.Table<MstTableWTaxSemiMonthly> MstTableWTaxSemiMonthlies
		{
			get
			{
				return this.GetTable<MstTableWTaxSemiMonthly>();
			}
		}
		
		public System.Data.Linq.Table<MstTableWTaxYearly> MstTableWTaxYearlies
		{
			get
			{
				return this.GetTable<MstTableWTaxYearly>();
			}
		}
		
		public System.Data.Linq.Table<MstTaxCode> MstTaxCodes
		{
			get
			{
				return this.GetTable<MstTaxCode>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserForm> MstUserForms
		{
			get
			{
				return this.GetTable<MstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<MstUserPayrollGroup> MstUserPayrollGroups
		{
			get
			{
				return this.GetTable<MstUserPayrollGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstZipCode> MstZipCodes
		{
			get
			{
				return this.GetTable<MstZipCode>();
			}
		}
		
		public System.Data.Linq.Table<SysForm> SysForms
		{
			get
			{
				return this.GetTable<SysForm>();
			}
		}
		
		public System.Data.Linq.Table<TrnChangeShift> TrnChangeShifts
		{
			get
			{
				return this.GetTable<TrnChangeShift>();
			}
		}
		
		public System.Data.Linq.Table<TrnChangeShiftDraft> TrnChangeShiftDrafts
		{
			get
			{
				return this.GetTable<TrnChangeShiftDraft>();
			}
		}
		
		public System.Data.Linq.Table<TrnChangeShiftLine> TrnChangeShiftLines
		{
			get
			{
				return this.GetTable<TrnChangeShiftLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDTR> TrnDTRs
		{
			get
			{
				return this.GetTable<TrnDTR>();
			}
		}
		
		public System.Data.Linq.Table<TrnDTRLine> TrnDTRLines
		{
			get
			{
				return this.GetTable<TrnDTRLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDTRLog> TrnDTRLogs
		{
			get
			{
				return this.GetTable<TrnDTRLog>();
			}
		}
		
		public System.Data.Linq.Table<TrnLastWithholdingTax> TrnLastWithholdingTaxes
		{
			get
			{
				return this.GetTable<TrnLastWithholdingTax>();
			}
		}
		
		public System.Data.Linq.Table<TrnLastWithholdingTaxLine> TrnLastWithholdingTaxLines
		{
			get
			{
				return this.GetTable<TrnLastWithholdingTaxLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnLeaveApplication> TrnLeaveApplications
		{
			get
			{
				return this.GetTable<TrnLeaveApplication>();
			}
		}
		
		public System.Data.Linq.Table<TrnLeaveApplicationDraft> TrnLeaveApplicationDrafts
		{
			get
			{
				return this.GetTable<TrnLeaveApplicationDraft>();
			}
		}
		
		public System.Data.Linq.Table<TrnLeaveApplicationLine> TrnLeaveApplicationLines
		{
			get
			{
				return this.GetTable<TrnLeaveApplicationLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnLeaveLedger> TrnLeaveLedgers
		{
			get
			{
				return this.GetTable<TrnLeaveLedger>();
			}
		}
		
		public System.Data.Linq.Table<TrnLoanLedger> TrnLoanLedgers
		{
			get
			{
				return this.GetTable<TrnLoanLedger>();
			}
		}
		
		public System.Data.Linq.Table<TrnOverTime> TrnOverTimes
		{
			get
			{
				return this.GetTable<TrnOverTime>();
			}
		}
		
		public System.Data.Linq.Table<TrnOverTimeDraft> TrnOverTimeDrafts
		{
			get
			{
				return this.GetTable<TrnOverTimeDraft>();
			}
		}
		
		public System.Data.Linq.Table<TrnOverTimeLine> TrnOverTimeLines
		{
			get
			{
				return this.GetTable<TrnOverTimeLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this.GetTable<TrnPayroll>();
			}
		}
		
		public System.Data.Linq.Table<TrnPayrollLine> TrnPayrollLines
		{
			get
			{
				return this.GetTable<TrnPayrollLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions
		{
			get
			{
				return this.GetTable<TrnPayrollOtherDeduction>();
			}
		}
		
		public System.Data.Linq.Table<TrnPayrollOtherDeductionLine> TrnPayrollOtherDeductionLines
		{
			get
			{
				return this.GetTable<TrnPayrollOtherDeductionLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnPayrollOtherIncome> TrnPayrollOtherIncomes
		{
			get
			{
				return this.GetTable<TrnPayrollOtherIncome>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__MigrationHistory]")]
	public partial class @__MigrationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnContextKeyChanging(string value);
    partial void OnContextKeyChanged();
    partial void OnModelChanging(System.Data.Linq.Binary value);
    partial void OnModelChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__MigrationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this.OnContextKeyChanging(value);
					this.SendPropertyChanging();
					this._ContextKey = value;
					this.SendPropertyChanged("ContextKey");
					this.OnContextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPayrollOtherIncomeLine")]
	public partial class TrnPayrollOtherIncomeLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PayrollOtherIncomeId;
		
		private int _EmployeeId;
		
		private int _OtherIncomeId;
		
		private decimal _Amount;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstOtherIncome> _MstOtherIncome;
		
		private EntityRef<TrnPayrollOtherIncome> _TrnPayrollOtherIncome;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollOtherIncomeIdChanging(int value);
    partial void OnPayrollOtherIncomeIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnOtherIncomeIdChanging(int value);
    partial void OnOtherIncomeIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnPayrollOtherIncomeLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstOtherIncome = default(EntityRef<MstOtherIncome>);
			this._TrnPayrollOtherIncome = default(EntityRef<TrnPayrollOtherIncome>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollOtherIncomeId", DbType="Int NOT NULL")]
		public int PayrollOtherIncomeId
		{
			get
			{
				return this._PayrollOtherIncomeId;
			}
			set
			{
				if ((this._PayrollOtherIncomeId != value))
				{
					if (this._TrnPayrollOtherIncome.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollOtherIncomeIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollOtherIncomeId = value;
					this.SendPropertyChanged("PayrollOtherIncomeId");
					this.OnPayrollOtherIncomeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncomeId", DbType="Int NOT NULL")]
		public int OtherIncomeId
		{
			get
			{
				return this._OtherIncomeId;
			}
			set
			{
				if ((this._OtherIncomeId != value))
				{
					if (this._MstOtherIncome.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherIncomeIdChanging(value);
					this.SendPropertyChanging();
					this._OtherIncomeId = value;
					this.SendPropertyChanged("OtherIncomeId");
					this.OnOtherIncomeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnPayrollOtherIncomeLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnPayrollOtherIncomeLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomeLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstOtherIncome_TrnPayrollOtherIncomeLine", Storage="_MstOtherIncome", ThisKey="OtherIncomeId", OtherKey="Id", IsForeignKey=true)]
		public MstOtherIncome MstOtherIncome
		{
			get
			{
				return this._MstOtherIncome.Entity;
			}
			set
			{
				MstOtherIncome previousValue = this._MstOtherIncome.Entity;
				if (((previousValue != value) 
							|| (this._MstOtherIncome.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstOtherIncome.Entity = null;
						previousValue.TrnPayrollOtherIncomeLines.Remove(this);
					}
					this._MstOtherIncome.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomeLines.Add(this);
						this._OtherIncomeId = value.Id;
					}
					else
					{
						this._OtherIncomeId = default(int);
					}
					this.SendPropertyChanged("MstOtherIncome");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherIncome_TrnPayrollOtherIncomeLine", Storage="_TrnPayrollOtherIncome", ThisKey="PayrollOtherIncomeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPayrollOtherIncome TrnPayrollOtherIncome
		{
			get
			{
				return this._TrnPayrollOtherIncome.Entity;
			}
			set
			{
				TrnPayrollOtherIncome previousValue = this._TrnPayrollOtherIncome.Entity;
				if (((previousValue != value) 
							|| (this._TrnPayrollOtherIncome.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPayrollOtherIncome.Entity = null;
						previousValue.TrnPayrollOtherIncomeLines.Remove(this);
					}
					this._TrnPayrollOtherIncome.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomeLines.Add(this);
						this._PayrollOtherIncomeId = value.Id;
					}
					else
					{
						this._PayrollOtherIncomeId = default(int);
					}
					this.SendPropertyChanged("TrnPayrollOtherIncome");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCode;
		
		private string _Account;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<MstOtherDeduction> _MstOtherDeductions;
		
		private EntitySet<MstOtherIncome> _MstOtherIncomes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    #endregion
		
		public MstAccount()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstOtherDeductions = new EntitySet<MstOtherDeduction>(new Action<MstOtherDeduction>(this.attach_MstOtherDeductions), new Action<MstOtherDeduction>(this.detach_MstOtherDeductions));
			this._MstOtherIncomes = new EntitySet<MstOtherIncome>(new Action<MstOtherIncome>(this.attach_MstOtherIncomes), new Action<MstOtherIncome>(this.detach_MstOtherIncomes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstOtherDeduction", Storage="_MstOtherDeductions", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstOtherDeduction> MstOtherDeductions
		{
			get
			{
				return this._MstOtherDeductions;
			}
			set
			{
				this._MstOtherDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstOtherIncome", Storage="_MstOtherIncomes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstOtherIncome> MstOtherIncomes
		{
			get
			{
				return this._MstOtherIncomes;
			}
			set
			{
				this._MstOtherIncomes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstOtherDeductions(MstOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstOtherDeductions(MstOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstOtherIncomes(MstOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstOtherIncomes(MstOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBranch")]
	public partial class MstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Branch;
		
		private int _CompanyId;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntityRef<MstCompany> _MstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public MstBranch()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstCompany = default(EntityRef<MstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCitizenship")]
	public partial class MstCitizenship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Citizenship;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCitizenshipChanging(string value);
    partial void OnCitizenshipChanged();
    #endregion
		
		public MstCitizenship()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citizenship", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Citizenship
		{
			get
			{
				return this._Citizenship;
			}
			set
			{
				if ((this._Citizenship != value))
				{
					this.OnCitizenshipChanging(value);
					this.SendPropertyChanging();
					this._Citizenship = value;
					this.SendPropertyChanged("Citizenship");
					this.OnCitizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCitizenship_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="CitizenshipId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstCitizenship = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstCitizenship = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCompany")]
	public partial class MstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _Address;
		
		private string _SSSNumber;
		
		private string _PHICNumber;
		
		private string _HDMFNumber;
		
		private string _TIN;
		
		private System.Nullable<int> _PayrollGroupId;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstBranch> _MstBranches;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSSSNumberChanging(string value);
    partial void OnSSSNumberChanged();
    partial void OnPHICNumberChanging(string value);
    partial void OnPHICNumberChanged();
    partial void OnHDMFNumberChanging(string value);
    partial void OnHDMFNumberChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnPayrollGroupIdChanging(System.Nullable<int> value);
    partial void OnPayrollGroupIdChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstCompany()
		{
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SSSNumber
		{
			get
			{
				return this._SSSNumber;
			}
			set
			{
				if ((this._SSSNumber != value))
				{
					this.OnSSSNumberChanging(value);
					this.SendPropertyChanging();
					this._SSSNumber = value;
					this.SendPropertyChanged("SSSNumber");
					this.OnSSSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHICNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PHICNumber
		{
			get
			{
				return this._PHICNumber;
			}
			set
			{
				if ((this._PHICNumber != value))
				{
					this.OnPHICNumberChanging(value);
					this.SendPropertyChanging();
					this._PHICNumber = value;
					this.SendPropertyChanged("PHICNumber");
					this.OnPHICNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HDMFNumber
		{
			get
			{
				return this._HDMFNumber;
			}
			set
			{
				if ((this._HDMFNumber != value))
				{
					this.OnHDMFNumberChanging(value);
					this.SendPropertyChanging();
					this._HDMFNumber = value;
					this.SendPropertyChanged("HDMFNumber");
					this.OnHDMFNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int")]
		public System.Nullable<int> PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDayType")]
	public partial class MstDayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DayType;
		
		private decimal _WorkingDays;
		
		private decimal _RestdayDays;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstDayTypeDay> _MstDayTypeDays;
		
		private EntitySet<TrnDTRLine> _TrnDTRLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDayTypeChanging(string value);
    partial void OnDayTypeChanged();
    partial void OnWorkingDaysChanging(decimal value);
    partial void OnWorkingDaysChanged();
    partial void OnRestdayDaysChanging(decimal value);
    partial void OnRestdayDaysChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstDayType()
		{
			this._MstDayTypeDays = new EntitySet<MstDayTypeDay>(new Action<MstDayTypeDay>(this.attach_MstDayTypeDays), new Action<MstDayTypeDay>(this.detach_MstDayTypeDays));
			this._TrnDTRLines = new EntitySet<TrnDTRLine>(new Action<TrnDTRLine>(this.attach_TrnDTRLines), new Action<TrnDTRLine>(this.detach_TrnDTRLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DayType
		{
			get
			{
				return this._DayType;
			}
			set
			{
				if ((this._DayType != value))
				{
					this.OnDayTypeChanging(value);
					this.SendPropertyChanging();
					this._DayType = value;
					this.SendPropertyChanged("DayType");
					this.OnDayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingDays", DbType="Decimal(18,4) NOT NULL")]
		public decimal WorkingDays
		{
			get
			{
				return this._WorkingDays;
			}
			set
			{
				if ((this._WorkingDays != value))
				{
					this.OnWorkingDaysChanging(value);
					this.SendPropertyChanging();
					this._WorkingDays = value;
					this.SendPropertyChanged("WorkingDays");
					this.OnWorkingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestdayDays", DbType="Decimal(18,4) NOT NULL")]
		public decimal RestdayDays
		{
			get
			{
				return this._RestdayDays;
			}
			set
			{
				if ((this._RestdayDays != value))
				{
					this.OnRestdayDaysChanging(value);
					this.SendPropertyChanging();
					this._RestdayDays = value;
					this.SendPropertyChanged("RestdayDays");
					this.OnRestdayDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDayType_MstDayTypeDay", Storage="_MstDayTypeDays", ThisKey="Id", OtherKey="DayTypeId")]
		public EntitySet<MstDayTypeDay> MstDayTypeDays
		{
			get
			{
				return this._MstDayTypeDays;
			}
			set
			{
				this._MstDayTypeDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDayType_TrnDTRLine", Storage="_TrnDTRLines", ThisKey="Id", OtherKey="DayTypeId")]
		public EntitySet<TrnDTRLine> TrnDTRLines
		{
			get
			{
				return this._TrnDTRLines;
			}
			set
			{
				this._TrnDTRLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstDayTypeDays(MstDayTypeDay entity)
		{
			this.SendPropertyChanging();
			entity.MstDayType = this;
		}
		
		private void detach_MstDayTypeDays(MstDayTypeDay entity)
		{
			this.SendPropertyChanging();
			entity.MstDayType = null;
		}
		
		private void attach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.MstDayType = this;
		}
		
		private void detach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.MstDayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDayTypeDay")]
	public partial class MstDayTypeDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DayTypeId;
		
		private int _BranchId;
		
		private System.DateTime _Date;
		
		private System.DateTime _DateAfter;
		
		private System.DateTime _DateBefore;
		
		private bool _ExcludedInFixed;
		
		private string _Remarks;
		
		private bool _WithAbsentInFixed;
		
		private EntityRef<MstDayType> _MstDayType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDayTypeIdChanging(int value);
    partial void OnDayTypeIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDateAfterChanging(System.DateTime value);
    partial void OnDateAfterChanged();
    partial void OnDateBeforeChanging(System.DateTime value);
    partial void OnDateBeforeChanged();
    partial void OnExcludedInFixedChanging(bool value);
    partial void OnExcludedInFixedChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnWithAbsentInFixedChanging(bool value);
    partial void OnWithAbsentInFixedChanged();
    #endregion
		
		public MstDayTypeDay()
		{
			this._MstDayType = default(EntityRef<MstDayType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayTypeId", DbType="Int NOT NULL")]
		public int DayTypeId
		{
			get
			{
				return this._DayTypeId;
			}
			set
			{
				if ((this._DayTypeId != value))
				{
					if (this._MstDayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DayTypeId = value;
					this.SendPropertyChanged("DayTypeId");
					this.OnDayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAfter", DbType="DateTime NOT NULL")]
		public System.DateTime DateAfter
		{
			get
			{
				return this._DateAfter;
			}
			set
			{
				if ((this._DateAfter != value))
				{
					this.OnDateAfterChanging(value);
					this.SendPropertyChanging();
					this._DateAfter = value;
					this.SendPropertyChanged("DateAfter");
					this.OnDateAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBefore", DbType="DateTime NOT NULL")]
		public System.DateTime DateBefore
		{
			get
			{
				return this._DateBefore;
			}
			set
			{
				if ((this._DateBefore != value))
				{
					this.OnDateBeforeChanging(value);
					this.SendPropertyChanging();
					this._DateBefore = value;
					this.SendPropertyChanged("DateBefore");
					this.OnDateBeforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludedInFixed", DbType="Bit NOT NULL")]
		public bool ExcludedInFixed
		{
			get
			{
				return this._ExcludedInFixed;
			}
			set
			{
				if ((this._ExcludedInFixed != value))
				{
					this.OnExcludedInFixedChanging(value);
					this.SendPropertyChanging();
					this._ExcludedInFixed = value;
					this.SendPropertyChanged("ExcludedInFixed");
					this.OnExcludedInFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithAbsentInFixed", DbType="Bit NOT NULL")]
		public bool WithAbsentInFixed
		{
			get
			{
				return this._WithAbsentInFixed;
			}
			set
			{
				if ((this._WithAbsentInFixed != value))
				{
					this.OnWithAbsentInFixedChanging(value);
					this.SendPropertyChanging();
					this._WithAbsentInFixed = value;
					this.SendPropertyChanged("WithAbsentInFixed");
					this.OnWithAbsentInFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDayType_MstDayTypeDay", Storage="_MstDayType", ThisKey="DayTypeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstDayType MstDayType
		{
			get
			{
				return this._MstDayType.Entity;
			}
			set
			{
				MstDayType previousValue = this._MstDayType.Entity;
				if (((previousValue != value) 
							|| (this._MstDayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDayType.Entity = null;
						previousValue.MstDayTypeDays.Remove(this);
					}
					this._MstDayType.Entity = value;
					if ((value != null))
					{
						value.MstDayTypeDays.Add(this);
						this._DayTypeId = value.Id;
					}
					else
					{
						this._DayTypeId = default(int);
					}
					this.SendPropertyChanged("MstDayType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDepartment")]
	public partial class MstDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Department;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public MstDepartment()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDepartment_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstDepartment = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDivision")]
	public partial class MstDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Division;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    #endregion
		
		public MstDivision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployee")]
	public partial class MstEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IdNumber;
		
		private int _BiometricIdNumber;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _ExtensionName;
		
		private string _FullName;
		
		private string _Address;
		
		private int _ZipCodeId;
		
		private string _PhoneNumber;
		
		private string _CellphoneNumber;
		
		private string _EmailAddress;
		
		private System.DateTime _DateOfBirth;
		
		private string _PlaceOfBirth;
		
		private System.Nullable<int> _PlaceOfBirthZipCodeId;
		
		private System.DateTime _DateHired;
		
		private System.Nullable<System.DateTime> _DateResigned;
		
		private string _Sex;
		
		private string _CivilStatus;
		
		private int _CitizenshipId;
		
		private int _ReligionId;
		
		private decimal _Height;
		
		private decimal _Weight;
		
		private string _GSISNumber;
		
		private string _SSSNumber;
		
		private string _HDMFNumber;
		
		private string _PHICNumber;
		
		private string _TIN;
		
		private int _TaxCodeId;
		
		private string _ATMAccountNumber;
		
		private int _CompanyId;
		
		private int _BranchId;
		
		private int _DepartmentId;
		
		private int _DivisionId;
		
		private int _PositionId;
		
		private int _PayrollGroupId;
		
		private int _AccountId;
		
		private int _PayrollTypeId;
		
		private int _ShiftCodeId;
		
		private int _FixNumberOfDays;
		
		private int _FixNumberOfHours;
		
		private decimal _MonthlyRate;
		
		private decimal _PayrollRate;
		
		private decimal _DailyRate;
		
		private decimal _AbsentDailyRate;
		
		private decimal _HourlyRate;
		
		private decimal _NightHourlyRate;
		
		private decimal _OvertimeHourlyRate;
		
		private decimal _OvertimeNightHourlyRate;
		
		private decimal _TardyHourlyRate;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private string _TaxTable;
		
		private System.Nullable<decimal> _HDMFAddOn;
		
		private System.Nullable<decimal> _SSSAddOn;
		
		private string _HDMFType;
		
		private bool _SSSIsGrossAmount;
		
		private bool _IsMinimumWageEarner;
		
		private EntitySet<TrnPayrollOtherIncomeLine> _TrnPayrollOtherIncomeLines;
		
		private EntitySet<MstEmployeeLoan> _MstEmployeeLoans;
		
		private EntitySet<MstEmployeeMemo> _MstEmployeeMemos;
		
		private EntitySet<MstEmployeeShiftCode> _MstEmployeeShiftCodes;
		
		private EntitySet<TrnChangeShiftLine> _TrnChangeShiftLines;
		
		private EntitySet<TrnDTRLine> _TrnDTRLines;
		
		private EntitySet<TrnDTRLog> _TrnDTRLogs;
		
		private EntitySet<TrnLastWithholdingTaxLine> _TrnLastWithholdingTaxLines;
		
		private EntitySet<TrnLeaveApplicationLine> _TrnLeaveApplicationLines;
		
		private EntitySet<TrnLeaveLedger> _TrnLeaveLedgers;
		
		private EntitySet<TrnOverTimeLine> _TrnOverTimeLines;
		
		private EntitySet<TrnPayrollLine> _TrnPayrollLines;
		
		private EntitySet<TrnPayrollOtherDeductionLine> _TrnPayrollOtherDeductionLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstCitizenship> _MstCitizenship;
		
		private EntityRef<MstCompany> _MstCompany;
		
		private EntityRef<MstDepartment> _MstDepartment;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPayrollType> _MstPayrollType;
		
		private EntityRef<MstPosition> _MstPosition;
		
		private EntityRef<MstReligion> _MstReligion;
		
		private EntityRef<MstShiftCode> _MstShiftCode;
		
		private EntityRef<MstTaxCode> _MstTaxCode;
		
		private EntityRef<MstZipCode> _MstZipCode;
		
		private EntityRef<MstZipCode> _MstZipCode1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdNumberChanging(string value);
    partial void OnIdNumberChanged();
    partial void OnBiometricIdNumberChanging(int value);
    partial void OnBiometricIdNumberChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnExtensionNameChanging(string value);
    partial void OnExtensionNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeIdChanging(int value);
    partial void OnZipCodeIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCellphoneNumberChanging(string value);
    partial void OnCellphoneNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnPlaceOfBirthChanging(string value);
    partial void OnPlaceOfBirthChanged();
    partial void OnPlaceOfBirthZipCodeIdChanging(System.Nullable<int> value);
    partial void OnPlaceOfBirthZipCodeIdChanged();
    partial void OnDateHiredChanging(System.DateTime value);
    partial void OnDateHiredChanged();
    partial void OnDateResignedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateResignedChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnCivilStatusChanging(string value);
    partial void OnCivilStatusChanged();
    partial void OnCitizenshipIdChanging(int value);
    partial void OnCitizenshipIdChanged();
    partial void OnReligionIdChanging(int value);
    partial void OnReligionIdChanged();
    partial void OnHeightChanging(decimal value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnGSISNumberChanging(string value);
    partial void OnGSISNumberChanged();
    partial void OnSSSNumberChanging(string value);
    partial void OnSSSNumberChanged();
    partial void OnHDMFNumberChanging(string value);
    partial void OnHDMFNumberChanged();
    partial void OnPHICNumberChanging(string value);
    partial void OnPHICNumberChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnTaxCodeIdChanging(int value);
    partial void OnTaxCodeIdChanged();
    partial void OnATMAccountNumberChanging(string value);
    partial void OnATMAccountNumberChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnPositionIdChanging(int value);
    partial void OnPositionIdChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnPayrollTypeIdChanging(int value);
    partial void OnPayrollTypeIdChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    partial void OnFixNumberOfDaysChanging(int value);
    partial void OnFixNumberOfDaysChanged();
    partial void OnFixNumberOfHoursChanging(int value);
    partial void OnFixNumberOfHoursChanged();
    partial void OnMonthlyRateChanging(decimal value);
    partial void OnMonthlyRateChanged();
    partial void OnPayrollRateChanging(decimal value);
    partial void OnPayrollRateChanged();
    partial void OnDailyRateChanging(decimal value);
    partial void OnDailyRateChanged();
    partial void OnAbsentDailyRateChanging(decimal value);
    partial void OnAbsentDailyRateChanged();
    partial void OnHourlyRateChanging(decimal value);
    partial void OnHourlyRateChanged();
    partial void OnNightHourlyRateChanging(decimal value);
    partial void OnNightHourlyRateChanged();
    partial void OnOvertimeHourlyRateChanging(decimal value);
    partial void OnOvertimeHourlyRateChanged();
    partial void OnOvertimeNightHourlyRateChanging(decimal value);
    partial void OnOvertimeNightHourlyRateChanged();
    partial void OnTardyHourlyRateChanging(decimal value);
    partial void OnTardyHourlyRateChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnTaxTableChanging(string value);
    partial void OnTaxTableChanged();
    partial void OnHDMFAddOnChanging(System.Nullable<decimal> value);
    partial void OnHDMFAddOnChanged();
    partial void OnSSSAddOnChanging(System.Nullable<decimal> value);
    partial void OnSSSAddOnChanged();
    partial void OnHDMFTypeChanging(string value);
    partial void OnHDMFTypeChanged();
    partial void OnSSSIsGrossAmountChanging(bool value);
    partial void OnSSSIsGrossAmountChanged();
    partial void OnIsMinimumWageEarnerChanging(bool value);
    partial void OnIsMinimumWageEarnerChanged();
    #endregion
		
		public MstEmployee()
		{
			this._TrnPayrollOtherIncomeLines = new EntitySet<TrnPayrollOtherIncomeLine>(new Action<TrnPayrollOtherIncomeLine>(this.attach_TrnPayrollOtherIncomeLines), new Action<TrnPayrollOtherIncomeLine>(this.detach_TrnPayrollOtherIncomeLines));
			this._MstEmployeeLoans = new EntitySet<MstEmployeeLoan>(new Action<MstEmployeeLoan>(this.attach_MstEmployeeLoans), new Action<MstEmployeeLoan>(this.detach_MstEmployeeLoans));
			this._MstEmployeeMemos = new EntitySet<MstEmployeeMemo>(new Action<MstEmployeeMemo>(this.attach_MstEmployeeMemos), new Action<MstEmployeeMemo>(this.detach_MstEmployeeMemos));
			this._MstEmployeeShiftCodes = new EntitySet<MstEmployeeShiftCode>(new Action<MstEmployeeShiftCode>(this.attach_MstEmployeeShiftCodes), new Action<MstEmployeeShiftCode>(this.detach_MstEmployeeShiftCodes));
			this._TrnChangeShiftLines = new EntitySet<TrnChangeShiftLine>(new Action<TrnChangeShiftLine>(this.attach_TrnChangeShiftLines), new Action<TrnChangeShiftLine>(this.detach_TrnChangeShiftLines));
			this._TrnDTRLines = new EntitySet<TrnDTRLine>(new Action<TrnDTRLine>(this.attach_TrnDTRLines), new Action<TrnDTRLine>(this.detach_TrnDTRLines));
			this._TrnDTRLogs = new EntitySet<TrnDTRLog>(new Action<TrnDTRLog>(this.attach_TrnDTRLogs), new Action<TrnDTRLog>(this.detach_TrnDTRLogs));
			this._TrnLastWithholdingTaxLines = new EntitySet<TrnLastWithholdingTaxLine>(new Action<TrnLastWithholdingTaxLine>(this.attach_TrnLastWithholdingTaxLines), new Action<TrnLastWithholdingTaxLine>(this.detach_TrnLastWithholdingTaxLines));
			this._TrnLeaveApplicationLines = new EntitySet<TrnLeaveApplicationLine>(new Action<TrnLeaveApplicationLine>(this.attach_TrnLeaveApplicationLines), new Action<TrnLeaveApplicationLine>(this.detach_TrnLeaveApplicationLines));
			this._TrnLeaveLedgers = new EntitySet<TrnLeaveLedger>(new Action<TrnLeaveLedger>(this.attach_TrnLeaveLedgers), new Action<TrnLeaveLedger>(this.detach_TrnLeaveLedgers));
			this._TrnOverTimeLines = new EntitySet<TrnOverTimeLine>(new Action<TrnOverTimeLine>(this.attach_TrnOverTimeLines), new Action<TrnOverTimeLine>(this.detach_TrnOverTimeLines));
			this._TrnPayrollLines = new EntitySet<TrnPayrollLine>(new Action<TrnPayrollLine>(this.attach_TrnPayrollLines), new Action<TrnPayrollLine>(this.detach_TrnPayrollLines));
			this._TrnPayrollOtherDeductionLines = new EntitySet<TrnPayrollOtherDeductionLine>(new Action<TrnPayrollOtherDeductionLine>(this.attach_TrnPayrollOtherDeductionLines), new Action<TrnPayrollOtherDeductionLine>(this.detach_TrnPayrollOtherDeductionLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstCitizenship = default(EntityRef<MstCitizenship>);
			this._MstCompany = default(EntityRef<MstCompany>);
			this._MstDepartment = default(EntityRef<MstDepartment>);
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPayrollType = default(EntityRef<MstPayrollType>);
			this._MstPosition = default(EntityRef<MstPosition>);
			this._MstReligion = default(EntityRef<MstReligion>);
			this._MstShiftCode = default(EntityRef<MstShiftCode>);
			this._MstTaxCode = default(EntityRef<MstTaxCode>);
			this._MstZipCode = default(EntityRef<MstZipCode>);
			this._MstZipCode1 = default(EntityRef<MstZipCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiometricIdNumber", DbType="Int NOT NULL")]
		public int BiometricIdNumber
		{
			get
			{
				return this._BiometricIdNumber;
			}
			set
			{
				if ((this._BiometricIdNumber != value))
				{
					this.OnBiometricIdNumberChanging(value);
					this.SendPropertyChanging();
					this._BiometricIdNumber = value;
					this.SendPropertyChanged("BiometricIdNumber");
					this.OnBiometricIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionName", DbType="NVarChar(50)")]
		public string ExtensionName
		{
			get
			{
				return this._ExtensionName;
			}
			set
			{
				if ((this._ExtensionName != value))
				{
					this.OnExtensionNameChanging(value);
					this.SendPropertyChanging();
					this._ExtensionName = value;
					this.SendPropertyChanged("ExtensionName");
					this.OnExtensionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCodeId", DbType="Int NOT NULL")]
		public int ZipCodeId
		{
			get
			{
				return this._ZipCodeId;
			}
			set
			{
				if ((this._ZipCodeId != value))
				{
					if (this._MstZipCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZipCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ZipCodeId = value;
					this.SendPropertyChanged("ZipCodeId");
					this.OnZipCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellphoneNumber", DbType="NVarChar(50)")]
		public string CellphoneNumber
		{
			get
			{
				return this._CellphoneNumber;
			}
			set
			{
				if ((this._CellphoneNumber != value))
				{
					this.OnCellphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellphoneNumber = value;
					this.SendPropertyChanged("CellphoneNumber");
					this.OnCellphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfBirth", DbType="NVarChar(MAX)")]
		public string PlaceOfBirth
		{
			get
			{
				return this._PlaceOfBirth;
			}
			set
			{
				if ((this._PlaceOfBirth != value))
				{
					this.OnPlaceOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfBirth = value;
					this.SendPropertyChanged("PlaceOfBirth");
					this.OnPlaceOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfBirthZipCodeId", DbType="Int")]
		public System.Nullable<int> PlaceOfBirthZipCodeId
		{
			get
			{
				return this._PlaceOfBirthZipCodeId;
			}
			set
			{
				if ((this._PlaceOfBirthZipCodeId != value))
				{
					if (this._MstZipCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceOfBirthZipCodeIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfBirthZipCodeId = value;
					this.SendPropertyChanged("PlaceOfBirthZipCodeId");
					this.OnPlaceOfBirthZipCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateHired", DbType="DateTime NOT NULL")]
		public System.DateTime DateHired
		{
			get
			{
				return this._DateHired;
			}
			set
			{
				if ((this._DateHired != value))
				{
					this.OnDateHiredChanging(value);
					this.SendPropertyChanging();
					this._DateHired = value;
					this.SendPropertyChanged("DateHired");
					this.OnDateHiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateResigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateResigned
		{
			get
			{
				return this._DateResigned;
			}
			set
			{
				if ((this._DateResigned != value))
				{
					this.OnDateResignedChanging(value);
					this.SendPropertyChanging();
					this._DateResigned = value;
					this.SendPropertyChanged("DateResigned");
					this.OnDateResignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitizenshipId", DbType="Int NOT NULL")]
		public int CitizenshipId
		{
			get
			{
				return this._CitizenshipId;
			}
			set
			{
				if ((this._CitizenshipId != value))
				{
					if (this._MstCitizenship.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCitizenshipIdChanging(value);
					this.SendPropertyChanging();
					this._CitizenshipId = value;
					this.SendPropertyChanged("CitizenshipId");
					this.OnCitizenshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReligionId", DbType="Int NOT NULL")]
		public int ReligionId
		{
			get
			{
				return this._ReligionId;
			}
			set
			{
				if ((this._ReligionId != value))
				{
					if (this._MstReligion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReligionIdChanging(value);
					this.SendPropertyChanging();
					this._ReligionId = value;
					this.SendPropertyChanged("ReligionId");
					this.OnReligionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(18,5) NOT NULL")]
		public decimal Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSISNumber", DbType="NVarChar(50)")]
		public string GSISNumber
		{
			get
			{
				return this._GSISNumber;
			}
			set
			{
				if ((this._GSISNumber != value))
				{
					this.OnGSISNumberChanging(value);
					this.SendPropertyChanging();
					this._GSISNumber = value;
					this.SendPropertyChanged("GSISNumber");
					this.OnGSISNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSNumber", DbType="NVarChar(50)")]
		public string SSSNumber
		{
			get
			{
				return this._SSSNumber;
			}
			set
			{
				if ((this._SSSNumber != value))
				{
					this.OnSSSNumberChanging(value);
					this.SendPropertyChanging();
					this._SSSNumber = value;
					this.SendPropertyChanged("SSSNumber");
					this.OnSSSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFNumber", DbType="NVarChar(50)")]
		public string HDMFNumber
		{
			get
			{
				return this._HDMFNumber;
			}
			set
			{
				if ((this._HDMFNumber != value))
				{
					this.OnHDMFNumberChanging(value);
					this.SendPropertyChanging();
					this._HDMFNumber = value;
					this.SendPropertyChanged("HDMFNumber");
					this.OnHDMFNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHICNumber", DbType="NVarChar(50)")]
		public string PHICNumber
		{
			get
			{
				return this._PHICNumber;
			}
			set
			{
				if ((this._PHICNumber != value))
				{
					this.OnPHICNumberChanging(value);
					this.SendPropertyChanging();
					this._PHICNumber = value;
					this.SendPropertyChanged("PHICNumber");
					this.OnPHICNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50)")]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeId", DbType="Int NOT NULL")]
		public int TaxCodeId
		{
			get
			{
				return this._TaxCodeId;
			}
			set
			{
				if ((this._TaxCodeId != value))
				{
					if (this._MstTaxCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeId = value;
					this.SendPropertyChanged("TaxCodeId");
					this.OnTaxCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATMAccountNumber", DbType="NVarChar(50)")]
		public string ATMAccountNumber
		{
			get
			{
				return this._ATMAccountNumber;
			}
			set
			{
				if ((this._ATMAccountNumber != value))
				{
					this.OnATMAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._ATMAccountNumber = value;
					this.SendPropertyChanged("ATMAccountNumber");
					this.OnATMAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._MstDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL")]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int NOT NULL")]
		public int PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					if (this._MstPosition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollTypeId", DbType="Int NOT NULL")]
		public int PayrollTypeId
		{
			get
			{
				return this._PayrollTypeId;
			}
			set
			{
				if ((this._PayrollTypeId != value))
				{
					if (this._MstPayrollType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollTypeId = value;
					this.SendPropertyChanged("PayrollTypeId");
					this.OnPayrollTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					if (this._MstShiftCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixNumberOfDays", DbType="Int NOT NULL")]
		public int FixNumberOfDays
		{
			get
			{
				return this._FixNumberOfDays;
			}
			set
			{
				if ((this._FixNumberOfDays != value))
				{
					this.OnFixNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._FixNumberOfDays = value;
					this.SendPropertyChanged("FixNumberOfDays");
					this.OnFixNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixNumberOfHours", DbType="Int NOT NULL")]
		public int FixNumberOfHours
		{
			get
			{
				return this._FixNumberOfHours;
			}
			set
			{
				if ((this._FixNumberOfHours != value))
				{
					this.OnFixNumberOfHoursChanging(value);
					this.SendPropertyChanging();
					this._FixNumberOfHours = value;
					this.SendPropertyChanged("FixNumberOfHours");
					this.OnFixNumberOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal MonthlyRate
		{
			get
			{
				return this._MonthlyRate;
			}
			set
			{
				if ((this._MonthlyRate != value))
				{
					this.OnMonthlyRateChanging(value);
					this.SendPropertyChanging();
					this._MonthlyRate = value;
					this.SendPropertyChanged("MonthlyRate");
					this.OnMonthlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal PayrollRate
		{
			get
			{
				return this._PayrollRate;
			}
			set
			{
				if ((this._PayrollRate != value))
				{
					this.OnPayrollRateChanging(value);
					this.SendPropertyChanging();
					this._PayrollRate = value;
					this.SendPropertyChanged("PayrollRate");
					this.OnPayrollRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DailyRate
		{
			get
			{
				return this._DailyRate;
			}
			set
			{
				if ((this._DailyRate != value))
				{
					this.OnDailyRateChanging(value);
					this.SendPropertyChanging();
					this._DailyRate = value;
					this.SendPropertyChanged("DailyRate");
					this.OnDailyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsentDailyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal AbsentDailyRate
		{
			get
			{
				return this._AbsentDailyRate;
			}
			set
			{
				if ((this._AbsentDailyRate != value))
				{
					this.OnAbsentDailyRateChanging(value);
					this.SendPropertyChanging();
					this._AbsentDailyRate = value;
					this.SendPropertyChanged("AbsentDailyRate");
					this.OnAbsentDailyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal HourlyRate
		{
			get
			{
				return this._HourlyRate;
			}
			set
			{
				if ((this._HourlyRate != value))
				{
					this.OnHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._HourlyRate = value;
					this.SendPropertyChanged("HourlyRate");
					this.OnHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal NightHourlyRate
		{
			get
			{
				return this._NightHourlyRate;
			}
			set
			{
				if ((this._NightHourlyRate != value))
				{
					this.OnNightHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._NightHourlyRate = value;
					this.SendPropertyChanged("NightHourlyRate");
					this.OnNightHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeHourlyRate
		{
			get
			{
				return this._OvertimeHourlyRate;
			}
			set
			{
				if ((this._OvertimeHourlyRate != value))
				{
					this.OnOvertimeHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._OvertimeHourlyRate = value;
					this.SendPropertyChanged("OvertimeHourlyRate");
					this.OnOvertimeHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeNightHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeNightHourlyRate
		{
			get
			{
				return this._OvertimeNightHourlyRate;
			}
			set
			{
				if ((this._OvertimeNightHourlyRate != value))
				{
					this.OnOvertimeNightHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._OvertimeNightHourlyRate = value;
					this.SendPropertyChanged("OvertimeNightHourlyRate");
					this.OnOvertimeNightHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TardyHourlyRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TardyHourlyRate
		{
			get
			{
				return this._TardyHourlyRate;
			}
			set
			{
				if ((this._TardyHourlyRate != value))
				{
					this.OnTardyHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._TardyHourlyRate = value;
					this.SendPropertyChanged("TardyHourlyRate");
					this.OnTardyHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxTable", DbType="NVarChar(50)")]
		public string TaxTable
		{
			get
			{
				return this._TaxTable;
			}
			set
			{
				if ((this._TaxTable != value))
				{
					this.OnTaxTableChanging(value);
					this.SendPropertyChanging();
					this._TaxTable = value;
					this.SendPropertyChanged("TaxTable");
					this.OnTaxTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFAddOn", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> HDMFAddOn
		{
			get
			{
				return this._HDMFAddOn;
			}
			set
			{
				if ((this._HDMFAddOn != value))
				{
					this.OnHDMFAddOnChanging(value);
					this.SendPropertyChanging();
					this._HDMFAddOn = value;
					this.SendPropertyChanged("HDMFAddOn");
					this.OnHDMFAddOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSAddOn", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> SSSAddOn
		{
			get
			{
				return this._SSSAddOn;
			}
			set
			{
				if ((this._SSSAddOn != value))
				{
					this.OnSSSAddOnChanging(value);
					this.SendPropertyChanging();
					this._SSSAddOn = value;
					this.SendPropertyChanged("SSSAddOn");
					this.OnSSSAddOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HDMFType
		{
			get
			{
				return this._HDMFType;
			}
			set
			{
				if ((this._HDMFType != value))
				{
					this.OnHDMFTypeChanging(value);
					this.SendPropertyChanging();
					this._HDMFType = value;
					this.SendPropertyChanged("HDMFType");
					this.OnHDMFTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSIsGrossAmount", DbType="Bit NOT NULL")]
		public bool SSSIsGrossAmount
		{
			get
			{
				return this._SSSIsGrossAmount;
			}
			set
			{
				if ((this._SSSIsGrossAmount != value))
				{
					this.OnSSSIsGrossAmountChanging(value);
					this.SendPropertyChanging();
					this._SSSIsGrossAmount = value;
					this.SendPropertyChanged("SSSIsGrossAmount");
					this.OnSSSIsGrossAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMinimumWageEarner", DbType="Bit NOT NULL")]
		public bool IsMinimumWageEarner
		{
			get
			{
				return this._IsMinimumWageEarner;
			}
			set
			{
				if ((this._IsMinimumWageEarner != value))
				{
					this.OnIsMinimumWageEarnerChanging(value);
					this.SendPropertyChanging();
					this._IsMinimumWageEarner = value;
					this.SendPropertyChanged("IsMinimumWageEarner");
					this.OnIsMinimumWageEarnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnPayrollOtherIncomeLine", Storage="_TrnPayrollOtherIncomeLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnPayrollOtherIncomeLine> TrnPayrollOtherIncomeLines
		{
			get
			{
				return this._TrnPayrollOtherIncomeLines;
			}
			set
			{
				this._TrnPayrollOtherIncomeLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeLoan", Storage="_MstEmployeeLoans", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeLoan> MstEmployeeLoans
		{
			get
			{
				return this._MstEmployeeLoans;
			}
			set
			{
				this._MstEmployeeLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeMemo", Storage="_MstEmployeeMemos", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeMemo> MstEmployeeMemos
		{
			get
			{
				return this._MstEmployeeMemos;
			}
			set
			{
				this._MstEmployeeMemos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeShiftCode", Storage="_MstEmployeeShiftCodes", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<MstEmployeeShiftCode> MstEmployeeShiftCodes
		{
			get
			{
				return this._MstEmployeeShiftCodes;
			}
			set
			{
				this._MstEmployeeShiftCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnChangeShiftLine", Storage="_TrnChangeShiftLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnChangeShiftLine> TrnChangeShiftLines
		{
			get
			{
				return this._TrnChangeShiftLines;
			}
			set
			{
				this._TrnChangeShiftLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnDTRLine", Storage="_TrnDTRLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnDTRLine> TrnDTRLines
		{
			get
			{
				return this._TrnDTRLines;
			}
			set
			{
				this._TrnDTRLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnDTRLog", Storage="_TrnDTRLogs", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnDTRLog> TrnDTRLogs
		{
			get
			{
				return this._TrnDTRLogs;
			}
			set
			{
				this._TrnDTRLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnLastWithholdingTaxLine", Storage="_TrnLastWithholdingTaxLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnLastWithholdingTaxLine> TrnLastWithholdingTaxLines
		{
			get
			{
				return this._TrnLastWithholdingTaxLines;
			}
			set
			{
				this._TrnLastWithholdingTaxLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnLeaveApplicationLine", Storage="_TrnLeaveApplicationLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnLeaveApplicationLine> TrnLeaveApplicationLines
		{
			get
			{
				return this._TrnLeaveApplicationLines;
			}
			set
			{
				this._TrnLeaveApplicationLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnLeaveLedger", Storage="_TrnLeaveLedgers", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnLeaveLedger> TrnLeaveLedgers
		{
			get
			{
				return this._TrnLeaveLedgers;
			}
			set
			{
				this._TrnLeaveLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnOverTimeLine", Storage="_TrnOverTimeLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnOverTimeLine> TrnOverTimeLines
		{
			get
			{
				return this._TrnOverTimeLines;
			}
			set
			{
				this._TrnOverTimeLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnPayrollLine", Storage="_TrnPayrollLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnPayrollLine> TrnPayrollLines
		{
			get
			{
				return this._TrnPayrollLines;
			}
			set
			{
				this._TrnPayrollLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnPayrollOtherDeductionLine", Storage="_TrnPayrollOtherDeductionLines", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<TrnPayrollOtherDeductionLine> TrnPayrollOtherDeductionLines
		{
			get
			{
				return this._TrnPayrollOtherDeductionLines;
			}
			set
			{
				this._TrnPayrollOtherDeductionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstEmployee", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstEmployee", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCitizenship_MstEmployee", Storage="_MstCitizenship", ThisKey="CitizenshipId", OtherKey="Id", IsForeignKey=true)]
		public MstCitizenship MstCitizenship
		{
			get
			{
				return this._MstCitizenship.Entity;
			}
			set
			{
				MstCitizenship previousValue = this._MstCitizenship.Entity;
				if (((previousValue != value) 
							|| (this._MstCitizenship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCitizenship.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstCitizenship.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._CitizenshipId = value.Id;
					}
					else
					{
						this._CitizenshipId = default(int);
					}
					this.SendPropertyChanged("MstCitizenship");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstEmployee", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDepartment_MstEmployee", Storage="_MstDepartment", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public MstDepartment MstDepartment
		{
			get
			{
				return this._MstDepartment.Entity;
			}
			set
			{
				MstDepartment previousValue = this._MstDepartment.Entity;
				if (((previousValue != value) 
							|| (this._MstDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDepartment.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstDepartment.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("MstDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_MstEmployee", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollType_MstEmployee", Storage="_MstPayrollType", ThisKey="PayrollTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollType MstPayrollType
		{
			get
			{
				return this._MstPayrollType.Entity;
			}
			set
			{
				MstPayrollType previousValue = this._MstPayrollType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollType.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstPayrollType.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._PayrollTypeId = value.Id;
					}
					else
					{
						this._PayrollTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayrollType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPosition_MstEmployee", Storage="_MstPosition", ThisKey="PositionId", OtherKey="Id", IsForeignKey=true)]
		public MstPosition MstPosition
		{
			get
			{
				return this._MstPosition.Entity;
			}
			set
			{
				MstPosition previousValue = this._MstPosition.Entity;
				if (((previousValue != value) 
							|| (this._MstPosition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPosition.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstPosition.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._PositionId = value.Id;
					}
					else
					{
						this._PositionId = default(int);
					}
					this.SendPropertyChanged("MstPosition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstReligion_MstEmployee", Storage="_MstReligion", ThisKey="ReligionId", OtherKey="Id", IsForeignKey=true)]
		public MstReligion MstReligion
		{
			get
			{
				return this._MstReligion.Entity;
			}
			set
			{
				MstReligion previousValue = this._MstReligion.Entity;
				if (((previousValue != value) 
							|| (this._MstReligion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstReligion.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstReligion.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._ReligionId = value.Id;
					}
					else
					{
						this._ReligionId = default(int);
					}
					this.SendPropertyChanged("MstReligion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_MstEmployee", Storage="_MstShiftCode", ThisKey="ShiftCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstShiftCode MstShiftCode
		{
			get
			{
				return this._MstShiftCode.Entity;
			}
			set
			{
				MstShiftCode previousValue = this._MstShiftCode.Entity;
				if (((previousValue != value) 
							|| (this._MstShiftCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstShiftCode.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstShiftCode.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._ShiftCodeId = value.Id;
					}
					else
					{
						this._ShiftCodeId = default(int);
					}
					this.SendPropertyChanged("MstShiftCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_MstEmployee", Storage="_MstTaxCode", ThisKey="TaxCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxCode MstTaxCode
		{
			get
			{
				return this._MstTaxCode.Entity;
			}
			set
			{
				MstTaxCode previousValue = this._MstTaxCode.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxCode.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstTaxCode.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._TaxCodeId = value.Id;
					}
					else
					{
						this._TaxCodeId = default(int);
					}
					this.SendPropertyChanged("MstTaxCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee", Storage="_MstZipCode", ThisKey="ZipCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstZipCode MstZipCode
		{
			get
			{
				return this._MstZipCode.Entity;
			}
			set
			{
				MstZipCode previousValue = this._MstZipCode.Entity;
				if (((previousValue != value) 
							|| (this._MstZipCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstZipCode.Entity = null;
						previousValue.MstEmployees.Remove(this);
					}
					this._MstZipCode.Entity = value;
					if ((value != null))
					{
						value.MstEmployees.Add(this);
						this._ZipCodeId = value.Id;
					}
					else
					{
						this._ZipCodeId = default(int);
					}
					this.SendPropertyChanged("MstZipCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee1", Storage="_MstZipCode1", ThisKey="PlaceOfBirthZipCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstZipCode MstZipCode1
		{
			get
			{
				return this._MstZipCode1.Entity;
			}
			set
			{
				MstZipCode previousValue = this._MstZipCode1.Entity;
				if (((previousValue != value) 
							|| (this._MstZipCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstZipCode1.Entity = null;
						previousValue.MstEmployees1.Remove(this);
					}
					this._MstZipCode1.Entity = value;
					if ((value != null))
					{
						value.MstEmployees1.Add(this);
						this._PlaceOfBirthZipCodeId = value.Id;
					}
					else
					{
						this._PlaceOfBirthZipCodeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstZipCode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrollOtherIncomeLines(TrnPayrollOtherIncomeLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnPayrollOtherIncomeLines(TrnPayrollOtherIncomeLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_MstEmployeeMemos(MstEmployeeMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeMemos(MstEmployeeMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_MstEmployeeShiftCodes(MstEmployeeShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_MstEmployeeShiftCodes(MstEmployeeShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnChangeShiftLines(TrnChangeShiftLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnChangeShiftLines(TrnChangeShiftLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnDTRLogs(TrnDTRLog entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnDTRLogs(TrnDTRLog entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnLastWithholdingTaxLines(TrnLastWithholdingTaxLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnLastWithholdingTaxLines(TrnLastWithholdingTaxLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnLeaveApplicationLines(TrnLeaveApplicationLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnLeaveApplicationLines(TrnLeaveApplicationLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnOverTimeLines(TrnOverTimeLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnOverTimeLines(TrnOverTimeLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnPayrollLines(TrnPayrollLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnPayrollLines(TrnPayrollLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
		
		private void attach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = this;
		}
		
		private void detach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeLoan")]
	public partial class MstEmployeeLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _OtherDeductionId;
		
		private System.Nullable<int> _LoanNumber;
		
		private decimal _LoanAmount;
		
		private decimal _MonthlyAmortization;
		
		private int _NumberOfMonths;
		
		private System.DateTime _DateStart;
		
		private decimal _TotalPayment;
		
		private decimal _Balance;
		
		private bool _IsPaid;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private string _Remarks;
		
		private EntitySet<TrnPayrollOtherDeductionLine> _TrnPayrollOtherDeductionLines;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstOtherDeduction> _MstOtherDeduction;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnOtherDeductionIdChanging(int value);
    partial void OnOtherDeductionIdChanged();
    partial void OnLoanNumberChanging(System.Nullable<int> value);
    partial void OnLoanNumberChanged();
    partial void OnLoanAmountChanging(decimal value);
    partial void OnLoanAmountChanged();
    partial void OnMonthlyAmortizationChanging(decimal value);
    partial void OnMonthlyAmortizationChanged();
    partial void OnNumberOfMonthsChanging(int value);
    partial void OnNumberOfMonthsChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnTotalPaymentChanging(decimal value);
    partial void OnTotalPaymentChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public MstEmployeeLoan()
		{
			this._TrnPayrollOtherDeductionLines = new EntitySet<TrnPayrollOtherDeductionLine>(new Action<TrnPayrollOtherDeductionLine>(this.attach_TrnPayrollOtherDeductionLines), new Action<TrnPayrollOtherDeductionLine>(this.detach_TrnPayrollOtherDeductionLines));
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstOtherDeduction = default(EntityRef<MstOtherDeduction>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDeductionId", DbType="Int NOT NULL")]
		public int OtherDeductionId
		{
			get
			{
				return this._OtherDeductionId;
			}
			set
			{
				if ((this._OtherDeductionId != value))
				{
					if (this._MstOtherDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._OtherDeductionId = value;
					this.SendPropertyChanged("OtherDeductionId");
					this.OnOtherDeductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="Int")]
		public System.Nullable<int> LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyAmortization", DbType="Decimal(18,5) NOT NULL")]
		public decimal MonthlyAmortization
		{
			get
			{
				return this._MonthlyAmortization;
			}
			set
			{
				if ((this._MonthlyAmortization != value))
				{
					this.OnMonthlyAmortizationChanging(value);
					this.SendPropertyChanging();
					this._MonthlyAmortization = value;
					this.SendPropertyChanged("MonthlyAmortization");
					this.OnMonthlyAmortizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMonths", DbType="Int NOT NULL")]
		public int NumberOfMonths
		{
			get
			{
				return this._NumberOfMonths;
			}
			set
			{
				if ((this._NumberOfMonths != value))
				{
					this.OnNumberOfMonthsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMonths = value;
					this.SendPropertyChanged("NumberOfMonths");
					this.OnNumberOfMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayment", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPayment
		{
			get
			{
				return this._TotalPayment;
			}
			set
			{
				if ((this._TotalPayment != value))
				{
					this.OnTotalPaymentChanging(value);
					this.SendPropertyChanging();
					this._TotalPayment = value;
					this.SendPropertyChanged("TotalPayment");
					this.OnTotalPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,5) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployeeLoan_TrnPayrollOtherDeductionLine", Storage="_TrnPayrollOtherDeductionLines", ThisKey="Id", OtherKey="EmployeeLoanId")]
		public EntitySet<TrnPayrollOtherDeductionLine> TrnPayrollOtherDeductionLines
		{
			get
			{
				return this._TrnPayrollOtherDeductionLines;
			}
			set
			{
				this._TrnPayrollOtherDeductionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeLoan", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeLoans.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeLoans.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstOtherDeduction_MstEmployeeLoan", Storage="_MstOtherDeduction", ThisKey="OtherDeductionId", OtherKey="Id", IsForeignKey=true)]
		public MstOtherDeduction MstOtherDeduction
		{
			get
			{
				return this._MstOtherDeduction.Entity;
			}
			set
			{
				MstOtherDeduction previousValue = this._MstOtherDeduction.Entity;
				if (((previousValue != value) 
							|| (this._MstOtherDeduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstOtherDeduction.Entity = null;
						previousValue.MstEmployeeLoans.Remove(this);
					}
					this._MstOtherDeduction.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeLoans.Add(this);
						this._OtherDeductionId = value.Id;
					}
					else
					{
						this._OtherDeductionId = default(int);
					}
					this.SendPropertyChanged("MstOtherDeduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstEmployeeLoan", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstEmployeeLoans.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeLoans.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstEmployeeLoan1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstEmployeeLoans1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeLoans1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployeeLoan = this;
		}
		
		private void detach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstEmployeeLoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeMemo")]
	public partial class MstEmployeeMemo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private System.DateTime _MemoDate;
		
		private string _MemoSubject;
		
		private string _MemoContent;
		
		private int _PreparedBy;
		
		private int _ApprovedBy;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnMemoDateChanging(System.DateTime value);
    partial void OnMemoDateChanged();
    partial void OnMemoSubjectChanging(string value);
    partial void OnMemoSubjectChanged();
    partial void OnMemoContentChanging(string value);
    partial void OnMemoContentChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    #endregion
		
		public MstEmployeeMemo()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoDate", DbType="DateTime NOT NULL")]
		public System.DateTime MemoDate
		{
			get
			{
				return this._MemoDate;
			}
			set
			{
				if ((this._MemoDate != value))
				{
					this.OnMemoDateChanging(value);
					this.SendPropertyChanging();
					this._MemoDate = value;
					this.SendPropertyChanged("MemoDate");
					this.OnMemoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoSubject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MemoSubject
		{
			get
			{
				return this._MemoSubject;
			}
			set
			{
				if ((this._MemoSubject != value))
				{
					this.OnMemoSubjectChanging(value);
					this.SendPropertyChanging();
					this._MemoSubject = value;
					this.SendPropertyChanged("MemoSubject");
					this.OnMemoSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoContent", DbType="NVarChar(MAX)")]
		public string MemoContent
		{
			get
			{
				return this._MemoContent;
			}
			set
			{
				if ((this._MemoContent != value))
				{
					this.OnMemoContentChanging(value);
					this.SendPropertyChanging();
					this._MemoContent = value;
					this.SendPropertyChanged("MemoContent");
					this.OnMemoContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeMemo", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeMemos.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeMemos.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstEmployeeShiftCode")]
	public partial class MstEmployeeShiftCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _ShiftCodeId;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstShiftCode> _MstShiftCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    #endregion
		
		public MstEmployeeShiftCode()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstShiftCode = default(EntityRef<MstShiftCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					if (this._MstShiftCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_MstEmployeeShiftCode", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.MstEmployeeShiftCodes.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeShiftCodes.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_MstEmployeeShiftCode", Storage="_MstShiftCode", ThisKey="ShiftCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstShiftCode MstShiftCode
		{
			get
			{
				return this._MstShiftCode.Entity;
			}
			set
			{
				MstShiftCode previousValue = this._MstShiftCode.Entity;
				if (((previousValue != value) 
							|| (this._MstShiftCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstShiftCode.Entity = null;
						previousValue.MstEmployeeShiftCodes.Remove(this);
					}
					this._MstShiftCode.Entity = value;
					if ((value != null))
					{
						value.MstEmployeeShiftCodes.Add(this);
						this._ShiftCodeId = value.Id;
					}
					else
					{
						this._ShiftCodeId = default(int);
					}
					this.SendPropertyChanged("MstShiftCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstLeave")]
	public partial class MstLeave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Leave;
		
		private string _LeaveType;
		
		private EntitySet<TrnLeaveApplicationLine> _TrnLeaveApplicationLines;
		
		private EntitySet<TrnLeaveLedger> _TrnLeaveLedgers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLeaveChanging(string value);
    partial void OnLeaveChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    #endregion
		
		public MstLeave()
		{
			this._TrnLeaveApplicationLines = new EntitySet<TrnLeaveApplicationLine>(new Action<TrnLeaveApplicationLine>(this.attach_TrnLeaveApplicationLines), new Action<TrnLeaveApplicationLine>(this.detach_TrnLeaveApplicationLines));
			this._TrnLeaveLedgers = new EntitySet<TrnLeaveLedger>(new Action<TrnLeaveLedger>(this.attach_TrnLeaveLedgers), new Action<TrnLeaveLedger>(this.detach_TrnLeaveLedgers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leave", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Leave
		{
			get
			{
				return this._Leave;
			}
			set
			{
				if ((this._Leave != value))
				{
					this.OnLeaveChanging(value);
					this.SendPropertyChanging();
					this._Leave = value;
					this.SendPropertyChanged("Leave");
					this.OnLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstLeave_TrnLeaveApplicationLine", Storage="_TrnLeaveApplicationLines", ThisKey="Id", OtherKey="LeaveId")]
		public EntitySet<TrnLeaveApplicationLine> TrnLeaveApplicationLines
		{
			get
			{
				return this._TrnLeaveApplicationLines;
			}
			set
			{
				this._TrnLeaveApplicationLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstLeave_TrnLeaveLedger", Storage="_TrnLeaveLedgers", ThisKey="Id", OtherKey="LeaveId")]
		public EntitySet<TrnLeaveLedger> TrnLeaveLedgers
		{
			get
			{
				return this._TrnLeaveLedgers;
			}
			set
			{
				this._TrnLeaveLedgers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnLeaveApplicationLines(TrnLeaveApplicationLine entity)
		{
			this.SendPropertyChanging();
			entity.MstLeave = this;
		}
		
		private void detach_TrnLeaveApplicationLines(TrnLeaveApplicationLine entity)
		{
			this.SendPropertyChanging();
			entity.MstLeave = null;
		}
		
		private void attach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.MstLeave = this;
		}
		
		private void detach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.MstLeave = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstMandatoryTable")]
	public partial class MstMandatoryTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MandatoryDeduction;
		
		private decimal _AmountStart;
		
		private decimal _AmountEnd;
		
		private decimal _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMandatoryDeductionChanging(string value);
    partial void OnMandatoryDeductionChanged();
    partial void OnAmountStartChanging(decimal value);
    partial void OnAmountStartChanged();
    partial void OnAmountEndChanging(decimal value);
    partial void OnAmountEndChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    #endregion
		
		public MstMandatoryTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MandatoryDeduction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MandatoryDeduction
		{
			get
			{
				return this._MandatoryDeduction;
			}
			set
			{
				if ((this._MandatoryDeduction != value))
				{
					this.OnMandatoryDeductionChanging(value);
					this.SendPropertyChanging();
					this._MandatoryDeduction = value;
					this.SendPropertyChanged("MandatoryDeduction");
					this.OnMandatoryDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountStart", DbType="Decimal(18,4) NOT NULL")]
		public decimal AmountStart
		{
			get
			{
				return this._AmountStart;
			}
			set
			{
				if ((this._AmountStart != value))
				{
					this.OnAmountStartChanging(value);
					this.SendPropertyChanging();
					this._AmountStart = value;
					this.SendPropertyChanged("AmountStart");
					this.OnAmountStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEnd", DbType="Decimal(18,4) NOT NULL")]
		public decimal AmountEnd
		{
			get
			{
				return this._AmountEnd;
			}
			set
			{
				if ((this._AmountEnd != value))
				{
					this.OnAmountEndChanging(value);
					this.SendPropertyChanging();
					this._AmountEnd = value;
					this.SendPropertyChanged("AmountEnd");
					this.OnAmountEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstMonth")]
	public partial class MstMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Month;
		
		private int _Quarter;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnQuarterChanging(int value);
    partial void OnQuarterChanged();
    #endregion
		
		public MstMonth()
		{
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quarter", DbType="Int NOT NULL")]
		public int Quarter
		{
			get
			{
				return this._Quarter;
			}
			set
			{
				if ((this._Quarter != value))
				{
					this.OnQuarterChanging(value);
					this.SendPropertyChanging();
					this._Quarter = value;
					this.SendPropertyChanged("Quarter");
					this.OnQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstMonth_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="MonthId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstMonth = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstMonth = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstOtherDeduction")]
	public partial class MstOtherDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _OtherDeduction;
		
		private bool _LoanType;
		
		private int _AccountId;
		
		private decimal _Amount;
		
		private EntitySet<MstEmployeeLoan> _MstEmployeeLoans;
		
		private EntitySet<TrnPayrollOtherDeductionLine> _TrnPayrollOtherDeductionLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOtherDeductionChanging(string value);
    partial void OnOtherDeductionChanged();
    partial void OnLoanTypeChanging(bool value);
    partial void OnLoanTypeChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public MstOtherDeduction()
		{
			this._MstEmployeeLoans = new EntitySet<MstEmployeeLoan>(new Action<MstEmployeeLoan>(this.attach_MstEmployeeLoans), new Action<MstEmployeeLoan>(this.detach_MstEmployeeLoans));
			this._TrnPayrollOtherDeductionLines = new EntitySet<TrnPayrollOtherDeductionLine>(new Action<TrnPayrollOtherDeductionLine>(this.attach_TrnPayrollOtherDeductionLines), new Action<TrnPayrollOtherDeductionLine>(this.detach_TrnPayrollOtherDeductionLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDeduction", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OtherDeduction
		{
			get
			{
				return this._OtherDeduction;
			}
			set
			{
				if ((this._OtherDeduction != value))
				{
					this.OnOtherDeductionChanging(value);
					this.SendPropertyChanging();
					this._OtherDeduction = value;
					this.SendPropertyChanged("OtherDeduction");
					this.OnOtherDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanType", DbType="Bit NOT NULL")]
		public bool LoanType
		{
			get
			{
				return this._LoanType;
			}
			set
			{
				if ((this._LoanType != value))
				{
					this.OnLoanTypeChanging(value);
					this.SendPropertyChanging();
					this._LoanType = value;
					this.SendPropertyChanged("LoanType");
					this.OnLoanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstOtherDeduction_MstEmployeeLoan", Storage="_MstEmployeeLoans", ThisKey="Id", OtherKey="OtherDeductionId")]
		public EntitySet<MstEmployeeLoan> MstEmployeeLoans
		{
			get
			{
				return this._MstEmployeeLoans;
			}
			set
			{
				this._MstEmployeeLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstOtherDeduction_TrnPayrollOtherDeductionLine", Storage="_TrnPayrollOtherDeductionLines", ThisKey="Id", OtherKey="OtherDeductionId")]
		public EntitySet<TrnPayrollOtherDeductionLine> TrnPayrollOtherDeductionLines
		{
			get
			{
				return this._TrnPayrollOtherDeductionLines;
			}
			set
			{
				this._TrnPayrollOtherDeductionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstOtherDeduction", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstOtherDeductions.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstOtherDeductions.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstOtherDeduction = this;
		}
		
		private void detach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstOtherDeduction = null;
		}
		
		private void attach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstOtherDeduction = this;
		}
		
		private void detach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstOtherDeduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstOtherIncome")]
	public partial class MstOtherIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _OtherIncome;
		
		private bool _Taxable;
		
		private decimal _TaxCeiling;
		
		private bool _IncludeMandatory;
		
		private int _AccountId;
		
		private decimal _Amount;
		
		private EntitySet<TrnPayrollOtherIncomeLine> _TrnPayrollOtherIncomeLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOtherIncomeChanging(string value);
    partial void OnOtherIncomeChanged();
    partial void OnTaxableChanging(bool value);
    partial void OnTaxableChanged();
    partial void OnTaxCeilingChanging(decimal value);
    partial void OnTaxCeilingChanged();
    partial void OnIncludeMandatoryChanging(bool value);
    partial void OnIncludeMandatoryChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public MstOtherIncome()
		{
			this._TrnPayrollOtherIncomeLines = new EntitySet<TrnPayrollOtherIncomeLine>(new Action<TrnPayrollOtherIncomeLine>(this.attach_TrnPayrollOtherIncomeLines), new Action<TrnPayrollOtherIncomeLine>(this.detach_TrnPayrollOtherIncomeLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncome", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OtherIncome
		{
			get
			{
				return this._OtherIncome;
			}
			set
			{
				if ((this._OtherIncome != value))
				{
					this.OnOtherIncomeChanging(value);
					this.SendPropertyChanging();
					this._OtherIncome = value;
					this.SendPropertyChanged("OtherIncome");
					this.OnOtherIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taxable", DbType="Bit NOT NULL")]
		public bool Taxable
		{
			get
			{
				return this._Taxable;
			}
			set
			{
				if ((this._Taxable != value))
				{
					this.OnTaxableChanging(value);
					this.SendPropertyChanging();
					this._Taxable = value;
					this.SendPropertyChanged("Taxable");
					this.OnTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCeiling", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxCeiling
		{
			get
			{
				return this._TaxCeiling;
			}
			set
			{
				if ((this._TaxCeiling != value))
				{
					this.OnTaxCeilingChanging(value);
					this.SendPropertyChanging();
					this._TaxCeiling = value;
					this.SendPropertyChanged("TaxCeiling");
					this.OnTaxCeilingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeMandatory", DbType="Bit NOT NULL")]
		public bool IncludeMandatory
		{
			get
			{
				return this._IncludeMandatory;
			}
			set
			{
				if ((this._IncludeMandatory != value))
				{
					this.OnIncludeMandatoryChanging(value);
					this.SendPropertyChanging();
					this._IncludeMandatory = value;
					this.SendPropertyChanged("IncludeMandatory");
					this.OnIncludeMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstOtherIncome_TrnPayrollOtherIncomeLine", Storage="_TrnPayrollOtherIncomeLines", ThisKey="Id", OtherKey="OtherIncomeId")]
		public EntitySet<TrnPayrollOtherIncomeLine> TrnPayrollOtherIncomeLines
		{
			get
			{
				return this._TrnPayrollOtherIncomeLines;
			}
			set
			{
				this._TrnPayrollOtherIncomeLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstOtherIncome", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstOtherIncomes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstOtherIncomes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrollOtherIncomeLines(TrnPayrollOtherIncomeLine entity)
		{
			this.SendPropertyChanging();
			entity.MstOtherIncome = this;
		}
		
		private void detach_TrnPayrollOtherIncomeLines(TrnPayrollOtherIncomeLine entity)
		{
			this.SendPropertyChanging();
			entity.MstOtherIncome = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayrollGroup")]
	public partial class MstPayrollGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayrollGroup;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<MstUserPayrollGroup> _MstUserPayrollGroups;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts;
		
		private EntitySet<TrnDTR> _TrnDTRs;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications;
		
		private EntitySet<TrnOverTime> _TrnOverTimes;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollGroupChanging(string value);
    partial void OnPayrollGroupChanged();
    #endregion
		
		public MstPayrollGroup()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstUserPayrollGroups = new EntitySet<MstUserPayrollGroup>(new Action<MstUserPayrollGroup>(this.attach_MstUserPayrollGroups), new Action<MstUserPayrollGroup>(this.detach_MstUserPayrollGroups));
			this._TrnChangeShifts = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts), new Action<TrnChangeShift>(this.detach_TrnChangeShifts));
			this._TrnDTRs = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs), new Action<TrnDTR>(this.detach_TrnDTRs));
			this._TrnLastWithholdingTaxes = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes));
			this._TrnLeaveApplications = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications));
			this._TrnOverTimes = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes), new Action<TrnOverTime>(this.detach_TrnOverTimes));
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			this._TrnPayrollOtherDeductions = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions));
			this._TrnPayrollOtherIncomes = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayrollGroup
		{
			get
			{
				return this._PayrollGroup;
			}
			set
			{
				if ((this._PayrollGroup != value))
				{
					this.OnPayrollGroupChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroup = value;
					this.SendPropertyChanged("PayrollGroup");
					this.OnPayrollGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_MstUserPayrollGroup", Storage="_MstUserPayrollGroups", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<MstUserPayrollGroup> MstUserPayrollGroups
		{
			get
			{
				return this._MstUserPayrollGroups;
			}
			set
			{
				this._MstUserPayrollGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnChangeShift", Storage="_TrnChangeShifts", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnChangeShift> TrnChangeShifts
		{
			get
			{
				return this._TrnChangeShifts;
			}
			set
			{
				this._TrnChangeShifts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnDTR", Storage="_TrnDTRs", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnDTR> TrnDTRs
		{
			get
			{
				return this._TrnDTRs;
			}
			set
			{
				this._TrnDTRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnLastWithholdingTax", Storage="_TrnLastWithholdingTaxes", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes
		{
			get
			{
				return this._TrnLastWithholdingTaxes;
			}
			set
			{
				this._TrnLastWithholdingTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnLeaveApplication", Storage="_TrnLeaveApplications", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications
		{
			get
			{
				return this._TrnLeaveApplications;
			}
			set
			{
				this._TrnLeaveApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnOverTime", Storage="_TrnOverTimes", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnOverTime> TrnOverTimes
		{
			get
			{
				return this._TrnOverTimes;
			}
			set
			{
				this._TrnOverTimes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnPayrollOtherDeduction", Storage="_TrnPayrollOtherDeductions", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions
		{
			get
			{
				return this._TrnPayrollOtherDeductions;
			}
			set
			{
				this._TrnPayrollOtherDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnPayrollOtherIncome", Storage="_TrnPayrollOtherIncomes", ThisKey="Id", OtherKey="PayrollGroupId")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes
		{
			get
			{
				return this._TrnPayrollOtherIncomes;
			}
			set
			{
				this._TrnPayrollOtherIncomes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_MstUserPayrollGroups(MstUserPayrollGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_MstUserPayrollGroups(MstUserPayrollGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnChangeShifts(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnChangeShifts(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnLastWithholdingTaxes(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnLastWithholdingTaxes(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnOverTimes(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnOverTimes(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnPayrollOtherDeductions(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnPayrollOtherDeductions(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
		
		private void attach_TrnPayrollOtherIncomes(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = this;
		}
		
		private void detach_TrnPayrollOtherIncomes(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayrollType")]
	public partial class MstPayrollType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayrollType;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<TrnPayrollLine> _TrnPayrollLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollTypeChanging(string value);
    partial void OnPayrollTypeChanged();
    #endregion
		
		public MstPayrollType()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._TrnPayrollLines = new EntitySet<TrnPayrollLine>(new Action<TrnPayrollLine>(this.attach_TrnPayrollLines), new Action<TrnPayrollLine>(this.detach_TrnPayrollLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayrollType
		{
			get
			{
				return this._PayrollType;
			}
			set
			{
				if ((this._PayrollType != value))
				{
					this.OnPayrollTypeChanging(value);
					this.SendPropertyChanging();
					this._PayrollType = value;
					this.SendPropertyChanged("PayrollType");
					this.OnPayrollTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollType_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="PayrollTypeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollType_TrnPayrollLine", Storage="_TrnPayrollLines", ThisKey="Id", OtherKey="PayrollTypeId")]
		public EntitySet<TrnPayrollLine> TrnPayrollLines
		{
			get
			{
				return this._TrnPayrollLines;
			}
			set
			{
				this._TrnPayrollLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollType = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollType = null;
		}
		
		private void attach_TrnPayrollLines(TrnPayrollLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollType = this;
		}
		
		private void detach_TrnPayrollLines(TrnPayrollLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayrollType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPeriod")]
	public partial class MstPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Period;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts;
		
		private EntitySet<TrnDTR> _TrnDTRs;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications;
		
		private EntitySet<TrnLeaveLedger> _TrnLeaveLedgers;
		
		private EntitySet<TrnOverTime> _TrnOverTimes;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    #endregion
		
		public MstPeriod()
		{
			this._TrnChangeShifts = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts), new Action<TrnChangeShift>(this.detach_TrnChangeShifts));
			this._TrnDTRs = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs), new Action<TrnDTR>(this.detach_TrnDTRs));
			this._TrnLastWithholdingTaxes = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes));
			this._TrnLeaveApplications = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications));
			this._TrnLeaveLedgers = new EntitySet<TrnLeaveLedger>(new Action<TrnLeaveLedger>(this.attach_TrnLeaveLedgers), new Action<TrnLeaveLedger>(this.detach_TrnLeaveLedgers));
			this._TrnOverTimes = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes), new Action<TrnOverTime>(this.detach_TrnOverTimes));
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			this._TrnPayrollOtherDeductions = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions));
			this._TrnPayrollOtherIncomes = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnChangeShift", Storage="_TrnChangeShifts", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnChangeShift> TrnChangeShifts
		{
			get
			{
				return this._TrnChangeShifts;
			}
			set
			{
				this._TrnChangeShifts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDTR", Storage="_TrnDTRs", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnDTR> TrnDTRs
		{
			get
			{
				return this._TrnDTRs;
			}
			set
			{
				this._TrnDTRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnLastWithholdingTax", Storage="_TrnLastWithholdingTaxes", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes
		{
			get
			{
				return this._TrnLastWithholdingTaxes;
			}
			set
			{
				this._TrnLastWithholdingTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnLeaveApplication", Storage="_TrnLeaveApplications", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications
		{
			get
			{
				return this._TrnLeaveApplications;
			}
			set
			{
				this._TrnLeaveApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnLeaveLedger", Storage="_TrnLeaveLedgers", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnLeaveLedger> TrnLeaveLedgers
		{
			get
			{
				return this._TrnLeaveLedgers;
			}
			set
			{
				this._TrnLeaveLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnOverTime", Storage="_TrnOverTimes", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnOverTime> TrnOverTimes
		{
			get
			{
				return this._TrnOverTimes;
			}
			set
			{
				this._TrnOverTimes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPayrollOtherDeduction", Storage="_TrnPayrollOtherDeductions", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions
		{
			get
			{
				return this._TrnPayrollOtherDeductions;
			}
			set
			{
				this._TrnPayrollOtherDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPayrollOtherIncome", Storage="_TrnPayrollOtherIncomes", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes
		{
			get
			{
				return this._TrnPayrollOtherIncomes;
			}
			set
			{
				this._TrnPayrollOtherIncomes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnChangeShifts(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnChangeShifts(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnLastWithholdingTaxes(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnLastWithholdingTaxes(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnOverTimes(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnOverTimes(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnPayrollOtherDeductions(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnPayrollOtherDeductions(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnPayrollOtherIncomes(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnPayrollOtherIncomes(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPosition")]
	public partial class MstPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Position;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public MstPosition()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPosition_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="PositionId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPosition = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstPosition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstReligion")]
	public partial class MstReligion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Religion;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    #endregion
		
		public MstReligion()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstReligion_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="ReligionId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstReligion = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstReligion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstShiftCode")]
	public partial class MstShiftCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ShiftCode;
		
		private string _Remarks;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<MstEmployeeShiftCode> _MstEmployeeShiftCodes;
		
		private EntitySet<MstShiftCodeDay> _MstShiftCodeDays;
		
		private EntitySet<TrnChangeShiftLine> _TrnChangeShiftLines;
		
		private EntitySet<TrnDTRLine> _TrnDTRLines;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShiftCodeChanging(string value);
    partial void OnShiftCodeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstShiftCode()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstEmployeeShiftCodes = new EntitySet<MstEmployeeShiftCode>(new Action<MstEmployeeShiftCode>(this.attach_MstEmployeeShiftCodes), new Action<MstEmployeeShiftCode>(this.detach_MstEmployeeShiftCodes));
			this._MstShiftCodeDays = new EntitySet<MstShiftCodeDay>(new Action<MstShiftCodeDay>(this.attach_MstShiftCodeDays), new Action<MstShiftCodeDay>(this.detach_MstShiftCodeDays));
			this._TrnChangeShiftLines = new EntitySet<TrnChangeShiftLine>(new Action<TrnChangeShiftLine>(this.attach_TrnChangeShiftLines), new Action<TrnChangeShiftLine>(this.detach_TrnChangeShiftLines));
			this._TrnDTRLines = new EntitySet<TrnDTRLine>(new Action<TrnDTRLine>(this.attach_TrnDTRLines), new Action<TrnDTRLine>(this.detach_TrnDTRLines));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this.OnShiftCodeChanging(value);
					this.SendPropertyChanging();
					this._ShiftCode = value;
					this.SendPropertyChanged("ShiftCode");
					this.OnShiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="ShiftCodeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_MstEmployeeShiftCode", Storage="_MstEmployeeShiftCodes", ThisKey="Id", OtherKey="ShiftCodeId")]
		public EntitySet<MstEmployeeShiftCode> MstEmployeeShiftCodes
		{
			get
			{
				return this._MstEmployeeShiftCodes;
			}
			set
			{
				this._MstEmployeeShiftCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_MstShiftCodeDay", Storage="_MstShiftCodeDays", ThisKey="Id", OtherKey="ShiftCodeId")]
		public EntitySet<MstShiftCodeDay> MstShiftCodeDays
		{
			get
			{
				return this._MstShiftCodeDays;
			}
			set
			{
				this._MstShiftCodeDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_TrnChangeShiftLine", Storage="_TrnChangeShiftLines", ThisKey="Id", OtherKey="ShiftCodeId")]
		public EntitySet<TrnChangeShiftLine> TrnChangeShiftLines
		{
			get
			{
				return this._TrnChangeShiftLines;
			}
			set
			{
				this._TrnChangeShiftLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_TrnDTRLine", Storage="_TrnDTRLines", ThisKey="Id", OtherKey="ShiftCodeId")]
		public EntitySet<TrnDTRLine> TrnDTRLines
		{
			get
			{
				return this._TrnDTRLines;
			}
			set
			{
				this._TrnDTRLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstShiftCode", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstShiftCodes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstShiftCodes.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstShiftCode1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstShiftCodes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstShiftCodes1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = null;
		}
		
		private void attach_MstEmployeeShiftCodes(MstEmployeeShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = this;
		}
		
		private void detach_MstEmployeeShiftCodes(MstEmployeeShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = null;
		}
		
		private void attach_MstShiftCodeDays(MstShiftCodeDay entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = this;
		}
		
		private void detach_MstShiftCodeDays(MstShiftCodeDay entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = null;
		}
		
		private void attach_TrnChangeShiftLines(TrnChangeShiftLine entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = this;
		}
		
		private void detach_TrnChangeShiftLines(TrnChangeShiftLine entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = null;
		}
		
		private void attach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = this;
		}
		
		private void detach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.MstShiftCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstShiftCodeDay")]
	public partial class MstShiftCodeDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ShiftCodeId;
		
		private bool _RestDay;
		
		private string _Day;
		
		private System.Nullable<System.DateTime> _TimeIn1;
		
		private System.Nullable<System.DateTime> _TimeOut1;
		
		private System.Nullable<System.DateTime> _TimeIn2;
		
		private System.Nullable<System.DateTime> _TimeOut2;
		
		private decimal _NumberOfHours;
		
		private decimal _LateFlexibility;
		
		private decimal _LateGraceMinute;
		
		private decimal _NightHours;
		
		private EntityRef<MstShiftCode> _MstShiftCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    partial void OnRestDayChanging(bool value);
    partial void OnRestDayChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnTimeIn1Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeIn1Changed();
    partial void OnTimeOut1Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeOut1Changed();
    partial void OnTimeIn2Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeIn2Changed();
    partial void OnTimeOut2Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeOut2Changed();
    partial void OnNumberOfHoursChanging(decimal value);
    partial void OnNumberOfHoursChanged();
    partial void OnLateFlexibilityChanging(decimal value);
    partial void OnLateFlexibilityChanged();
    partial void OnLateGraceMinuteChanging(decimal value);
    partial void OnLateGraceMinuteChanged();
    partial void OnNightHoursChanging(decimal value);
    partial void OnNightHoursChanged();
    #endregion
		
		public MstShiftCodeDay()
		{
			this._MstShiftCode = default(EntityRef<MstShiftCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					if (this._MstShiftCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestDay", DbType="Bit NOT NULL")]
		public bool RestDay
		{
			get
			{
				return this._RestDay;
			}
			set
			{
				if ((this._RestDay != value))
				{
					this.OnRestDayChanging(value);
					this.SendPropertyChanging();
					this._RestDay = value;
					this.SendPropertyChanged("RestDay");
					this.OnRestDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn1", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeIn1
		{
			get
			{
				return this._TimeIn1;
			}
			set
			{
				if ((this._TimeIn1 != value))
				{
					this.OnTimeIn1Changing(value);
					this.SendPropertyChanging();
					this._TimeIn1 = value;
					this.SendPropertyChanged("TimeIn1");
					this.OnTimeIn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut1", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOut1
		{
			get
			{
				return this._TimeOut1;
			}
			set
			{
				if ((this._TimeOut1 != value))
				{
					this.OnTimeOut1Changing(value);
					this.SendPropertyChanging();
					this._TimeOut1 = value;
					this.SendPropertyChanged("TimeOut1");
					this.OnTimeOut1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn2", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeIn2
		{
			get
			{
				return this._TimeIn2;
			}
			set
			{
				if ((this._TimeIn2 != value))
				{
					this.OnTimeIn2Changing(value);
					this.SendPropertyChanging();
					this._TimeIn2 = value;
					this.SendPropertyChanged("TimeIn2");
					this.OnTimeIn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut2", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOut2
		{
			get
			{
				return this._TimeOut2;
			}
			set
			{
				if ((this._TimeOut2 != value))
				{
					this.OnTimeOut2Changing(value);
					this.SendPropertyChanging();
					this._TimeOut2 = value;
					this.SendPropertyChanged("TimeOut2");
					this.OnTimeOut2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHours", DbType="Decimal(18,4) NOT NULL")]
		public decimal NumberOfHours
		{
			get
			{
				return this._NumberOfHours;
			}
			set
			{
				if ((this._NumberOfHours != value))
				{
					this.OnNumberOfHoursChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHours = value;
					this.SendPropertyChanged("NumberOfHours");
					this.OnNumberOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateFlexibility", DbType="Decimal(18,4) NOT NULL")]
		public decimal LateFlexibility
		{
			get
			{
				return this._LateFlexibility;
			}
			set
			{
				if ((this._LateFlexibility != value))
				{
					this.OnLateFlexibilityChanging(value);
					this.SendPropertyChanging();
					this._LateFlexibility = value;
					this.SendPropertyChanged("LateFlexibility");
					this.OnLateFlexibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateGraceMinute", DbType="Decimal(18,4) NOT NULL")]
		public decimal LateGraceMinute
		{
			get
			{
				return this._LateGraceMinute;
			}
			set
			{
				if ((this._LateGraceMinute != value))
				{
					this.OnLateGraceMinuteChanging(value);
					this.SendPropertyChanging();
					this._LateGraceMinute = value;
					this.SendPropertyChanged("LateGraceMinute");
					this.OnLateGraceMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightHours", DbType="Decimal(18,4) NOT NULL")]
		public decimal NightHours
		{
			get
			{
				return this._NightHours;
			}
			set
			{
				if ((this._NightHours != value))
				{
					this.OnNightHoursChanging(value);
					this.SendPropertyChanging();
					this._NightHours = value;
					this.SendPropertyChanged("NightHours");
					this.OnNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_MstShiftCodeDay", Storage="_MstShiftCode", ThisKey="ShiftCodeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstShiftCode MstShiftCode
		{
			get
			{
				return this._MstShiftCode.Entity;
			}
			set
			{
				MstShiftCode previousValue = this._MstShiftCode.Entity;
				if (((previousValue != value) 
							|| (this._MstShiftCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstShiftCode.Entity = null;
						previousValue.MstShiftCodeDays.Remove(this);
					}
					this._MstShiftCode.Entity = value;
					if ((value != null))
					{
						value.MstShiftCodeDays.Add(this);
						this._ShiftCodeId = value.Id;
					}
					else
					{
						this._ShiftCodeId = default(int);
					}
					this.SendPropertyChanged("MstShiftCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTableHDMF")]
	public partial class MstTableHDMF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _AmountStart;
		
		private decimal _AmountEnd;
		
		private decimal _EmployerPercentage;
		
		private decimal _EmployeePercentage;
		
		private System.Nullable<decimal> _EmployerValue;
		
		private System.Nullable<decimal> _EmployeeValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAmountStartChanging(decimal value);
    partial void OnAmountStartChanged();
    partial void OnAmountEndChanging(decimal value);
    partial void OnAmountEndChanged();
    partial void OnEmployerPercentageChanging(decimal value);
    partial void OnEmployerPercentageChanged();
    partial void OnEmployeePercentageChanging(decimal value);
    partial void OnEmployeePercentageChanged();
    partial void OnEmployerValueChanging(System.Nullable<decimal> value);
    partial void OnEmployerValueChanged();
    partial void OnEmployeeValueChanging(System.Nullable<decimal> value);
    partial void OnEmployeeValueChanged();
    #endregion
		
		public MstTableHDMF()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountStart", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountStart
		{
			get
			{
				return this._AmountStart;
			}
			set
			{
				if ((this._AmountStart != value))
				{
					this.OnAmountStartChanging(value);
					this.SendPropertyChanging();
					this._AmountStart = value;
					this.SendPropertyChanged("AmountStart");
					this.OnAmountStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEnd", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountEnd
		{
			get
			{
				return this._AmountEnd;
			}
			set
			{
				if ((this._AmountEnd != value))
				{
					this.OnAmountEndChanging(value);
					this.SendPropertyChanging();
					this._AmountEnd = value;
					this.SendPropertyChanged("AmountEnd");
					this.OnAmountEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerPercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployerPercentage
		{
			get
			{
				return this._EmployerPercentage;
			}
			set
			{
				if ((this._EmployerPercentage != value))
				{
					this.OnEmployerPercentageChanging(value);
					this.SendPropertyChanging();
					this._EmployerPercentage = value;
					this.SendPropertyChanged("EmployerPercentage");
					this.OnEmployerPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeePercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployeePercentage
		{
			get
			{
				return this._EmployeePercentage;
			}
			set
			{
				if ((this._EmployeePercentage != value))
				{
					this.OnEmployeePercentageChanging(value);
					this.SendPropertyChanging();
					this._EmployeePercentage = value;
					this.SendPropertyChanged("EmployeePercentage");
					this.OnEmployeePercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> EmployerValue
		{
			get
			{
				return this._EmployerValue;
			}
			set
			{
				if ((this._EmployerValue != value))
				{
					this.OnEmployerValueChanging(value);
					this.SendPropertyChanging();
					this._EmployerValue = value;
					this.SendPropertyChanged("EmployerValue");
					this.OnEmployerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> EmployeeValue
		{
			get
			{
				return this._EmployeeValue;
			}
			set
			{
				if ((this._EmployeeValue != value))
				{
					this.OnEmployeeValueChanging(value);
					this.SendPropertyChanging();
					this._EmployeeValue = value;
					this.SendPropertyChanged("EmployeeValue");
					this.OnEmployeeValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTablePHIC")]
	public partial class MstTablePHIC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _AmountStart;
		
		private decimal _AmountEnd;
		
		private int _SalaryBracket;
		
		private decimal _EmployerContribution;
		
		private decimal _EmployeeContribution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAmountStartChanging(decimal value);
    partial void OnAmountStartChanged();
    partial void OnAmountEndChanging(decimal value);
    partial void OnAmountEndChanged();
    partial void OnSalaryBracketChanging(int value);
    partial void OnSalaryBracketChanged();
    partial void OnEmployerContributionChanging(decimal value);
    partial void OnEmployerContributionChanged();
    partial void OnEmployeeContributionChanging(decimal value);
    partial void OnEmployeeContributionChanged();
    #endregion
		
		public MstTablePHIC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountStart", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountStart
		{
			get
			{
				return this._AmountStart;
			}
			set
			{
				if ((this._AmountStart != value))
				{
					this.OnAmountStartChanging(value);
					this.SendPropertyChanging();
					this._AmountStart = value;
					this.SendPropertyChanged("AmountStart");
					this.OnAmountStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEnd", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountEnd
		{
			get
			{
				return this._AmountEnd;
			}
			set
			{
				if ((this._AmountEnd != value))
				{
					this.OnAmountEndChanging(value);
					this.SendPropertyChanging();
					this._AmountEnd = value;
					this.SendPropertyChanged("AmountEnd");
					this.OnAmountEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBracket", DbType="Int NOT NULL")]
		public int SalaryBracket
		{
			get
			{
				return this._SalaryBracket;
			}
			set
			{
				if ((this._SalaryBracket != value))
				{
					this.OnSalaryBracketChanging(value);
					this.SendPropertyChanging();
					this._SalaryBracket = value;
					this.SendPropertyChanged("SalaryBracket");
					this.OnSalaryBracketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployerContribution
		{
			get
			{
				return this._EmployerContribution;
			}
			set
			{
				if ((this._EmployerContribution != value))
				{
					this.OnEmployerContributionChanging(value);
					this.SendPropertyChanging();
					this._EmployerContribution = value;
					this.SendPropertyChanged("EmployerContribution");
					this.OnEmployerContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployeeContribution
		{
			get
			{
				return this._EmployeeContribution;
			}
			set
			{
				if ((this._EmployeeContribution != value))
				{
					this.OnEmployeeContributionChanging(value);
					this.SendPropertyChanging();
					this._EmployeeContribution = value;
					this.SendPropertyChanged("EmployeeContribution");
					this.OnEmployeeContributionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTableSSS")]
	public partial class MstTableSSS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _AmountStart;
		
		private decimal _AmountEnd;
		
		private decimal _EmployerContribution;
		
		private decimal _EmployeeContribution;
		
		private decimal _EmployerEC;
		
		private decimal _EmployeeEC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAmountStartChanging(decimal value);
    partial void OnAmountStartChanged();
    partial void OnAmountEndChanging(decimal value);
    partial void OnAmountEndChanged();
    partial void OnEmployerContributionChanging(decimal value);
    partial void OnEmployerContributionChanged();
    partial void OnEmployeeContributionChanging(decimal value);
    partial void OnEmployeeContributionChanged();
    partial void OnEmployerECChanging(decimal value);
    partial void OnEmployerECChanged();
    partial void OnEmployeeECChanging(decimal value);
    partial void OnEmployeeECChanged();
    #endregion
		
		public MstTableSSS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountStart", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountStart
		{
			get
			{
				return this._AmountStart;
			}
			set
			{
				if ((this._AmountStart != value))
				{
					this.OnAmountStartChanging(value);
					this.SendPropertyChanging();
					this._AmountStart = value;
					this.SendPropertyChanged("AmountStart");
					this.OnAmountStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEnd", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountEnd
		{
			get
			{
				return this._AmountEnd;
			}
			set
			{
				if ((this._AmountEnd != value))
				{
					this.OnAmountEndChanging(value);
					this.SendPropertyChanging();
					this._AmountEnd = value;
					this.SendPropertyChanged("AmountEnd");
					this.OnAmountEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployerContribution
		{
			get
			{
				return this._EmployerContribution;
			}
			set
			{
				if ((this._EmployerContribution != value))
				{
					this.OnEmployerContributionChanging(value);
					this.SendPropertyChanging();
					this._EmployerContribution = value;
					this.SendPropertyChanged("EmployerContribution");
					this.OnEmployerContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployeeContribution
		{
			get
			{
				return this._EmployeeContribution;
			}
			set
			{
				if ((this._EmployeeContribution != value))
				{
					this.OnEmployeeContributionChanging(value);
					this.SendPropertyChanging();
					this._EmployeeContribution = value;
					this.SendPropertyChanged("EmployeeContribution");
					this.OnEmployeeContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerEC", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployerEC
		{
			get
			{
				return this._EmployerEC;
			}
			set
			{
				if ((this._EmployerEC != value))
				{
					this.OnEmployerECChanging(value);
					this.SendPropertyChanging();
					this._EmployerEC = value;
					this.SendPropertyChanged("EmployerEC");
					this.OnEmployerECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeEC", DbType="Decimal(18,5) NOT NULL")]
		public decimal EmployeeEC
		{
			get
			{
				return this._EmployeeEC;
			}
			set
			{
				if ((this._EmployeeEC != value))
				{
					this.OnEmployeeECChanging(value);
					this.SendPropertyChanging();
					this._EmployeeEC = value;
					this.SendPropertyChanged("EmployeeEC");
					this.OnEmployeeECChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTableWTaxMonthly")]
	public partial class MstTableWTaxMonthly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TaxCodeId;
		
		private decimal _TaxCodeValue;
		
		private decimal _Amount;
		
		private decimal _Tax;
		
		private decimal _Percentage;
		
		private EntityRef<MstTaxCode> _MstTaxCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxCodeIdChanging(int value);
    partial void OnTaxCodeIdChanged();
    partial void OnTaxCodeValueChanging(decimal value);
    partial void OnTaxCodeValueChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    #endregion
		
		public MstTableWTaxMonthly()
		{
			this._MstTaxCode = default(EntityRef<MstTaxCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeId", DbType="Int NOT NULL")]
		public int TaxCodeId
		{
			get
			{
				return this._TaxCodeId;
			}
			set
			{
				if ((this._TaxCodeId != value))
				{
					if (this._MstTaxCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeId = value;
					this.SendPropertyChanged("TaxCodeId");
					this.OnTaxCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeValue", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxCodeValue
		{
			get
			{
				return this._TaxCodeValue;
			}
			set
			{
				if ((this._TaxCodeValue != value))
				{
					this.OnTaxCodeValueChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeValue = value;
					this.SendPropertyChanged("TaxCodeValue");
					this.OnTaxCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,5) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_MstTableWTaxMonthly", Storage="_MstTaxCode", ThisKey="TaxCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxCode MstTaxCode
		{
			get
			{
				return this._MstTaxCode.Entity;
			}
			set
			{
				MstTaxCode previousValue = this._MstTaxCode.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxCode.Entity = null;
						previousValue.MstTableWTaxMonthlies.Remove(this);
					}
					this._MstTaxCode.Entity = value;
					if ((value != null))
					{
						value.MstTableWTaxMonthlies.Add(this);
						this._TaxCodeId = value.Id;
					}
					else
					{
						this._TaxCodeId = default(int);
					}
					this.SendPropertyChanged("MstTaxCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTableWTaxSemiMonthly")]
	public partial class MstTableWTaxSemiMonthly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TaxCodeID;
		
		private decimal _TaxCodeValue;
		
		private decimal _Amount;
		
		private decimal _Tax;
		
		private decimal _Percentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxCodeIDChanging(int value);
    partial void OnTaxCodeIDChanged();
    partial void OnTaxCodeValueChanging(decimal value);
    partial void OnTaxCodeValueChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    #endregion
		
		public MstTableWTaxSemiMonthly()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeID", DbType="Int NOT NULL")]
		public int TaxCodeID
		{
			get
			{
				return this._TaxCodeID;
			}
			set
			{
				if ((this._TaxCodeID != value))
				{
					this.OnTaxCodeIDChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeID = value;
					this.SendPropertyChanged("TaxCodeID");
					this.OnTaxCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeValue", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxCodeValue
		{
			get
			{
				return this._TaxCodeValue;
			}
			set
			{
				if ((this._TaxCodeValue != value))
				{
					this.OnTaxCodeValueChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeValue = value;
					this.SendPropertyChanged("TaxCodeValue");
					this.OnTaxCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,5) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTableWTaxYearly")]
	public partial class MstTableWTaxYearly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _AmountStart;
		
		private decimal _AmountEnd;
		
		private decimal _Percentage;
		
		private decimal _AdditionalAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAmountStartChanging(decimal value);
    partial void OnAmountStartChanged();
    partial void OnAmountEndChanging(decimal value);
    partial void OnAmountEndChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    partial void OnAdditionalAmountChanging(decimal value);
    partial void OnAdditionalAmountChanged();
    #endregion
		
		public MstTableWTaxYearly()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountStart", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountStart
		{
			get
			{
				return this._AmountStart;
			}
			set
			{
				if ((this._AmountStart != value))
				{
					this.OnAmountStartChanging(value);
					this.SendPropertyChanging();
					this._AmountStart = value;
					this.SendPropertyChanged("AmountStart");
					this.OnAmountStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEnd", DbType="Decimal(18,5) NOT NULL")]
		public decimal AmountEnd
		{
			get
			{
				return this._AmountEnd;
			}
			set
			{
				if ((this._AmountEnd != value))
				{
					this.OnAmountEndChanging(value);
					this.SendPropertyChanging();
					this._AmountEnd = value;
					this.SendPropertyChanged("AmountEnd");
					this.OnAmountEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdditionalAmount
		{
			get
			{
				return this._AdditionalAmount;
			}
			set
			{
				if ((this._AdditionalAmount != value))
				{
					this.OnAdditionalAmountChanging(value);
					this.SendPropertyChanging();
					this._AdditionalAmount = value;
					this.SendPropertyChanged("AdditionalAmount");
					this.OnAdditionalAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTaxCode")]
	public partial class MstTaxCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaxCode;
		
		private decimal _ExemptionAmount;
		
		private decimal _DependentAmount;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<MstTableWTaxMonthly> _MstTableWTaxMonthlies;
		
		private EntitySet<TrnLastWithholdingTaxLine> _TrnLastWithholdingTaxLines;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnExemptionAmountChanging(decimal value);
    partial void OnExemptionAmountChanged();
    partial void OnDependentAmountChanging(decimal value);
    partial void OnDependentAmountChanged();
    #endregion
		
		public MstTaxCode()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstTableWTaxMonthlies = new EntitySet<MstTableWTaxMonthly>(new Action<MstTableWTaxMonthly>(this.attach_MstTableWTaxMonthlies), new Action<MstTableWTaxMonthly>(this.detach_MstTableWTaxMonthlies));
			this._TrnLastWithholdingTaxLines = new EntitySet<TrnLastWithholdingTaxLine>(new Action<TrnLastWithholdingTaxLine>(this.attach_TrnLastWithholdingTaxLines), new Action<TrnLastWithholdingTaxLine>(this.detach_TrnLastWithholdingTaxLines));
			this._TrnLeaveApplications = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExemptionAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ExemptionAmount
		{
			get
			{
				return this._ExemptionAmount;
			}
			set
			{
				if ((this._ExemptionAmount != value))
				{
					this.OnExemptionAmountChanging(value);
					this.SendPropertyChanging();
					this._ExemptionAmount = value;
					this.SendPropertyChanged("ExemptionAmount");
					this.OnExemptionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DependentAmount
		{
			get
			{
				return this._DependentAmount;
			}
			set
			{
				if ((this._DependentAmount != value))
				{
					this.OnDependentAmountChanging(value);
					this.SendPropertyChanging();
					this._DependentAmount = value;
					this.SendPropertyChanged("DependentAmount");
					this.OnDependentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="TaxCodeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_MstTableWTaxMonthly", Storage="_MstTableWTaxMonthlies", ThisKey="Id", OtherKey="TaxCodeId")]
		public EntitySet<MstTableWTaxMonthly> MstTableWTaxMonthlies
		{
			get
			{
				return this._MstTableWTaxMonthlies;
			}
			set
			{
				this._MstTableWTaxMonthlies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_TrnLastWithholdingTaxLine", Storage="_TrnLastWithholdingTaxLines", ThisKey="Id", OtherKey="TaxCodeId")]
		public EntitySet<TrnLastWithholdingTaxLine> TrnLastWithholdingTaxLines
		{
			get
			{
				return this._TrnLastWithholdingTaxLines;
			}
			set
			{
				this._TrnLastWithholdingTaxLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_TrnLeaveApplication", Storage="_TrnLeaveApplications", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications
		{
			get
			{
				return this._TrnLeaveApplications;
			}
			set
			{
				this._TrnLeaveApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = null;
		}
		
		private void attach_MstTableWTaxMonthlies(MstTableWTaxMonthly entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = this;
		}
		
		private void detach_MstTableWTaxMonthlies(MstTableWTaxMonthly entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = null;
		}
		
		private void attach_TrnLastWithholdingTaxLines(TrnLastWithholdingTaxLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = this;
		}
		
		private void detach_TrnLastWithholdingTaxLines(TrnLastWithholdingTaxLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = null;
		}
		
		private void attach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = this;
		}
		
		private void detach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FullName;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstEmployeeLoan> _MstEmployeeLoans;
		
		private EntitySet<MstEmployeeLoan> _MstEmployeeLoans1;
		
		private EntitySet<MstShiftCode> _MstShiftCodes;
		
		private EntitySet<MstShiftCode> _MstShiftCodes1;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
		private EntitySet<MstUserPayrollGroup> _MstUserPayrollGroups;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts1;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts2;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts3;
		
		private EntitySet<TrnChangeShift> _TrnChangeShifts4;
		
		private EntitySet<TrnDTR> _TrnDTRs;
		
		private EntitySet<TrnDTR> _TrnDTRs1;
		
		private EntitySet<TrnDTR> _TrnDTRs2;
		
		private EntitySet<TrnDTR> _TrnDTRs3;
		
		private EntitySet<TrnDTR> _TrnDTRs4;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes1;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes2;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes3;
		
		private EntitySet<TrnLastWithholdingTax> _TrnLastWithholdingTaxes4;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications1;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications2;
		
		private EntitySet<TrnLeaveApplication> _TrnLeaveApplications3;
		
		private EntitySet<TrnOverTime> _TrnOverTimes;
		
		private EntitySet<TrnOverTime> _TrnOverTimes1;
		
		private EntitySet<TrnOverTime> _TrnOverTimes2;
		
		private EntitySet<TrnOverTime> _TrnOverTimes3;
		
		private EntitySet<TrnOverTime> _TrnOverTimes4;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
		private EntitySet<TrnPayroll> _TrnPayrolls1;
		
		private EntitySet<TrnPayroll> _TrnPayrolls2;
		
		private EntitySet<TrnPayroll> _TrnPayrolls3;
		
		private EntitySet<TrnPayroll> _TrnPayrolls4;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions1;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions2;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions3;
		
		private EntitySet<TrnPayrollOtherDeduction> _TrnPayrollOtherDeductions4;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes1;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes2;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes3;
		
		private EntitySet<TrnPayrollOtherIncome> _TrnPayrollOtherIncomes4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstUser()
		{
			this._MstEmployeeLoans = new EntitySet<MstEmployeeLoan>(new Action<MstEmployeeLoan>(this.attach_MstEmployeeLoans), new Action<MstEmployeeLoan>(this.detach_MstEmployeeLoans));
			this._MstEmployeeLoans1 = new EntitySet<MstEmployeeLoan>(new Action<MstEmployeeLoan>(this.attach_MstEmployeeLoans1), new Action<MstEmployeeLoan>(this.detach_MstEmployeeLoans1));
			this._MstShiftCodes = new EntitySet<MstShiftCode>(new Action<MstShiftCode>(this.attach_MstShiftCodes), new Action<MstShiftCode>(this.detach_MstShiftCodes));
			this._MstShiftCodes1 = new EntitySet<MstShiftCode>(new Action<MstShiftCode>(this.attach_MstShiftCodes1), new Action<MstShiftCode>(this.detach_MstShiftCodes1));
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			this._MstUserPayrollGroups = new EntitySet<MstUserPayrollGroup>(new Action<MstUserPayrollGroup>(this.attach_MstUserPayrollGroups), new Action<MstUserPayrollGroup>(this.detach_MstUserPayrollGroups));
			this._TrnChangeShifts = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts), new Action<TrnChangeShift>(this.detach_TrnChangeShifts));
			this._TrnChangeShifts1 = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts1), new Action<TrnChangeShift>(this.detach_TrnChangeShifts1));
			this._TrnChangeShifts2 = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts2), new Action<TrnChangeShift>(this.detach_TrnChangeShifts2));
			this._TrnChangeShifts3 = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts3), new Action<TrnChangeShift>(this.detach_TrnChangeShifts3));
			this._TrnChangeShifts4 = new EntitySet<TrnChangeShift>(new Action<TrnChangeShift>(this.attach_TrnChangeShifts4), new Action<TrnChangeShift>(this.detach_TrnChangeShifts4));
			this._TrnDTRs = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs), new Action<TrnDTR>(this.detach_TrnDTRs));
			this._TrnDTRs1 = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs1), new Action<TrnDTR>(this.detach_TrnDTRs1));
			this._TrnDTRs2 = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs2), new Action<TrnDTR>(this.detach_TrnDTRs2));
			this._TrnDTRs3 = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs3), new Action<TrnDTR>(this.detach_TrnDTRs3));
			this._TrnDTRs4 = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs4), new Action<TrnDTR>(this.detach_TrnDTRs4));
			this._TrnLastWithholdingTaxes = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes));
			this._TrnLastWithholdingTaxes1 = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes1), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes1));
			this._TrnLastWithholdingTaxes2 = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes2), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes2));
			this._TrnLastWithholdingTaxes3 = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes3), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes3));
			this._TrnLastWithholdingTaxes4 = new EntitySet<TrnLastWithholdingTax>(new Action<TrnLastWithholdingTax>(this.attach_TrnLastWithholdingTaxes4), new Action<TrnLastWithholdingTax>(this.detach_TrnLastWithholdingTaxes4));
			this._TrnLeaveApplications = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications));
			this._TrnLeaveApplications1 = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications1), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications1));
			this._TrnLeaveApplications2 = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications2), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications2));
			this._TrnLeaveApplications3 = new EntitySet<TrnLeaveApplication>(new Action<TrnLeaveApplication>(this.attach_TrnLeaveApplications3), new Action<TrnLeaveApplication>(this.detach_TrnLeaveApplications3));
			this._TrnOverTimes = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes), new Action<TrnOverTime>(this.detach_TrnOverTimes));
			this._TrnOverTimes1 = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes1), new Action<TrnOverTime>(this.detach_TrnOverTimes1));
			this._TrnOverTimes2 = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes2), new Action<TrnOverTime>(this.detach_TrnOverTimes2));
			this._TrnOverTimes3 = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes3), new Action<TrnOverTime>(this.detach_TrnOverTimes3));
			this._TrnOverTimes4 = new EntitySet<TrnOverTime>(new Action<TrnOverTime>(this.attach_TrnOverTimes4), new Action<TrnOverTime>(this.detach_TrnOverTimes4));
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			this._TrnPayrolls1 = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls1), new Action<TrnPayroll>(this.detach_TrnPayrolls1));
			this._TrnPayrolls2 = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls2), new Action<TrnPayroll>(this.detach_TrnPayrolls2));
			this._TrnPayrolls3 = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls3), new Action<TrnPayroll>(this.detach_TrnPayrolls3));
			this._TrnPayrolls4 = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls4), new Action<TrnPayroll>(this.detach_TrnPayrolls4));
			this._TrnPayrollOtherDeductions = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions));
			this._TrnPayrollOtherDeductions1 = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions1), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions1));
			this._TrnPayrollOtherDeductions2 = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions2), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions2));
			this._TrnPayrollOtherDeductions3 = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions3), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions3));
			this._TrnPayrollOtherDeductions4 = new EntitySet<TrnPayrollOtherDeduction>(new Action<TrnPayrollOtherDeduction>(this.attach_TrnPayrollOtherDeductions4), new Action<TrnPayrollOtherDeduction>(this.detach_TrnPayrollOtherDeductions4));
			this._TrnPayrollOtherIncomes = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes));
			this._TrnPayrollOtherIncomes1 = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes1), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes1));
			this._TrnPayrollOtherIncomes2 = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes2), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes2));
			this._TrnPayrollOtherIncomes3 = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes3), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes3));
			this._TrnPayrollOtherIncomes4 = new EntitySet<TrnPayrollOtherIncome>(new Action<TrnPayrollOtherIncome>(this.attach_TrnPayrollOtherIncomes4), new Action<TrnPayrollOtherIncome>(this.detach_TrnPayrollOtherIncomes4));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstEmployeeLoan", Storage="_MstEmployeeLoans", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<MstEmployeeLoan> MstEmployeeLoans
		{
			get
			{
				return this._MstEmployeeLoans;
			}
			set
			{
				this._MstEmployeeLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstEmployeeLoan1", Storage="_MstEmployeeLoans1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<MstEmployeeLoan> MstEmployeeLoans1
		{
			get
			{
				return this._MstEmployeeLoans1;
			}
			set
			{
				this._MstEmployeeLoans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstShiftCode", Storage="_MstShiftCodes", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<MstShiftCode> MstShiftCodes
		{
			get
			{
				return this._MstShiftCodes;
			}
			set
			{
				this._MstShiftCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstShiftCode1", Storage="_MstShiftCodes1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<MstShiftCode> MstShiftCodes1
		{
			get
			{
				return this._MstShiftCodes1;
			}
			set
			{
				this._MstShiftCodes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserPayrollGroup", Storage="_MstUserPayrollGroups", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserPayrollGroup> MstUserPayrollGroups
		{
			get
			{
				return this._MstUserPayrollGroups;
			}
			set
			{
				this._MstUserPayrollGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift", Storage="_TrnChangeShifts", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnChangeShift> TrnChangeShifts
		{
			get
			{
				return this._TrnChangeShifts;
			}
			set
			{
				this._TrnChangeShifts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift1", Storage="_TrnChangeShifts1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnChangeShift> TrnChangeShifts1
		{
			get
			{
				return this._TrnChangeShifts1;
			}
			set
			{
				this._TrnChangeShifts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift2", Storage="_TrnChangeShifts2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnChangeShift> TrnChangeShifts2
		{
			get
			{
				return this._TrnChangeShifts2;
			}
			set
			{
				this._TrnChangeShifts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift3", Storage="_TrnChangeShifts3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnChangeShift> TrnChangeShifts3
		{
			get
			{
				return this._TrnChangeShifts3;
			}
			set
			{
				this._TrnChangeShifts3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift4", Storage="_TrnChangeShifts4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnChangeShift> TrnChangeShifts4
		{
			get
			{
				return this._TrnChangeShifts4;
			}
			set
			{
				this._TrnChangeShifts4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR", Storage="_TrnDTRs", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnDTR> TrnDTRs
		{
			get
			{
				return this._TrnDTRs;
			}
			set
			{
				this._TrnDTRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR1", Storage="_TrnDTRs1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnDTR> TrnDTRs1
		{
			get
			{
				return this._TrnDTRs1;
			}
			set
			{
				this._TrnDTRs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR2", Storage="_TrnDTRs2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnDTR> TrnDTRs2
		{
			get
			{
				return this._TrnDTRs2;
			}
			set
			{
				this._TrnDTRs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR3", Storage="_TrnDTRs3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnDTR> TrnDTRs3
		{
			get
			{
				return this._TrnDTRs3;
			}
			set
			{
				this._TrnDTRs3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR4", Storage="_TrnDTRs4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnDTR> TrnDTRs4
		{
			get
			{
				return this._TrnDTRs4;
			}
			set
			{
				this._TrnDTRs4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax", Storage="_TrnLastWithholdingTaxes", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes
		{
			get
			{
				return this._TrnLastWithholdingTaxes;
			}
			set
			{
				this._TrnLastWithholdingTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax1", Storage="_TrnLastWithholdingTaxes1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes1
		{
			get
			{
				return this._TrnLastWithholdingTaxes1;
			}
			set
			{
				this._TrnLastWithholdingTaxes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax2", Storage="_TrnLastWithholdingTaxes2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes2
		{
			get
			{
				return this._TrnLastWithholdingTaxes2;
			}
			set
			{
				this._TrnLastWithholdingTaxes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax3", Storage="_TrnLastWithholdingTaxes3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes3
		{
			get
			{
				return this._TrnLastWithholdingTaxes3;
			}
			set
			{
				this._TrnLastWithholdingTaxes3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax4", Storage="_TrnLastWithholdingTaxes4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnLastWithholdingTax> TrnLastWithholdingTaxes4
		{
			get
			{
				return this._TrnLastWithholdingTaxes4;
			}
			set
			{
				this._TrnLastWithholdingTaxes4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication", Storage="_TrnLeaveApplications", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications
		{
			get
			{
				return this._TrnLeaveApplications;
			}
			set
			{
				this._TrnLeaveApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication1", Storage="_TrnLeaveApplications1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications1
		{
			get
			{
				return this._TrnLeaveApplications1;
			}
			set
			{
				this._TrnLeaveApplications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication2", Storage="_TrnLeaveApplications2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications2
		{
			get
			{
				return this._TrnLeaveApplications2;
			}
			set
			{
				this._TrnLeaveApplications2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication3", Storage="_TrnLeaveApplications3", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnLeaveApplication> TrnLeaveApplications3
		{
			get
			{
				return this._TrnLeaveApplications3;
			}
			set
			{
				this._TrnLeaveApplications3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime", Storage="_TrnOverTimes", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnOverTime> TrnOverTimes
		{
			get
			{
				return this._TrnOverTimes;
			}
			set
			{
				this._TrnOverTimes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime1", Storage="_TrnOverTimes1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnOverTime> TrnOverTimes1
		{
			get
			{
				return this._TrnOverTimes1;
			}
			set
			{
				this._TrnOverTimes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime2", Storage="_TrnOverTimes2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnOverTime> TrnOverTimes2
		{
			get
			{
				return this._TrnOverTimes2;
			}
			set
			{
				this._TrnOverTimes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime3", Storage="_TrnOverTimes3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnOverTime> TrnOverTimes3
		{
			get
			{
				return this._TrnOverTimes3;
			}
			set
			{
				this._TrnOverTimes3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime4", Storage="_TrnOverTimes4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnOverTime> TrnOverTimes4
		{
			get
			{
				return this._TrnOverTimes4;
			}
			set
			{
				this._TrnOverTimes4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll1", Storage="_TrnPayrolls1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnPayroll> TrnPayrolls1
		{
			get
			{
				return this._TrnPayrolls1;
			}
			set
			{
				this._TrnPayrolls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll2", Storage="_TrnPayrolls2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnPayroll> TrnPayrolls2
		{
			get
			{
				return this._TrnPayrolls2;
			}
			set
			{
				this._TrnPayrolls2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll3", Storage="_TrnPayrolls3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnPayroll> TrnPayrolls3
		{
			get
			{
				return this._TrnPayrolls3;
			}
			set
			{
				this._TrnPayrolls3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll4", Storage="_TrnPayrolls4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnPayroll> TrnPayrolls4
		{
			get
			{
				return this._TrnPayrolls4;
			}
			set
			{
				this._TrnPayrolls4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction", Storage="_TrnPayrollOtherDeductions", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions
		{
			get
			{
				return this._TrnPayrollOtherDeductions;
			}
			set
			{
				this._TrnPayrollOtherDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction1", Storage="_TrnPayrollOtherDeductions1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions1
		{
			get
			{
				return this._TrnPayrollOtherDeductions1;
			}
			set
			{
				this._TrnPayrollOtherDeductions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction2", Storage="_TrnPayrollOtherDeductions2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions2
		{
			get
			{
				return this._TrnPayrollOtherDeductions2;
			}
			set
			{
				this._TrnPayrollOtherDeductions2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction3", Storage="_TrnPayrollOtherDeductions3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions3
		{
			get
			{
				return this._TrnPayrollOtherDeductions3;
			}
			set
			{
				this._TrnPayrollOtherDeductions3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction4", Storage="_TrnPayrollOtherDeductions4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnPayrollOtherDeduction> TrnPayrollOtherDeductions4
		{
			get
			{
				return this._TrnPayrollOtherDeductions4;
			}
			set
			{
				this._TrnPayrollOtherDeductions4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome", Storage="_TrnPayrollOtherIncomes", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes
		{
			get
			{
				return this._TrnPayrollOtherIncomes;
			}
			set
			{
				this._TrnPayrollOtherIncomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome1", Storage="_TrnPayrollOtherIncomes1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes1
		{
			get
			{
				return this._TrnPayrollOtherIncomes1;
			}
			set
			{
				this._TrnPayrollOtherIncomes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome2", Storage="_TrnPayrollOtherIncomes2", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes2
		{
			get
			{
				return this._TrnPayrollOtherIncomes2;
			}
			set
			{
				this._TrnPayrollOtherIncomes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome3", Storage="_TrnPayrollOtherIncomes3", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes3
		{
			get
			{
				return this._TrnPayrollOtherIncomes3;
			}
			set
			{
				this._TrnPayrollOtherIncomes3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome4", Storage="_TrnPayrollOtherIncomes4", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnPayrollOtherIncome> TrnPayrollOtherIncomes4
		{
			get
			{
				return this._TrnPayrollOtherIncomes4;
			}
			set
			{
				this._TrnPayrollOtherIncomes4.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstEmployeeLoans(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstEmployeeLoans1(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstEmployeeLoans1(MstEmployeeLoan entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstShiftCodes(MstShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstShiftCodes(MstShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstShiftCodes1(MstShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstShiftCodes1(MstShiftCode entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUserPayrollGroups(MstUserPayrollGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserPayrollGroups(MstUserPayrollGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnChangeShifts(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnChangeShifts(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnChangeShifts1(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnChangeShifts1(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnChangeShifts2(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnChangeShifts2(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnChangeShifts3(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnChangeShifts3(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnChangeShifts4(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnChangeShifts4(TrnChangeShift entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnDTRs1(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnDTRs1(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnDTRs2(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnDTRs2(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnDTRs3(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnDTRs3(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnDTRs4(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnDTRs4(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnLastWithholdingTaxes(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnLastWithholdingTaxes(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnLastWithholdingTaxes1(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnLastWithholdingTaxes1(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnLastWithholdingTaxes2(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnLastWithholdingTaxes2(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnLastWithholdingTaxes3(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnLastWithholdingTaxes3(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnLastWithholdingTaxes4(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnLastWithholdingTaxes4(TrnLastWithholdingTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnLeaveApplications(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnLeaveApplications1(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnLeaveApplications1(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnLeaveApplications2(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnLeaveApplications2(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnLeaveApplications3(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnLeaveApplications3(TrnLeaveApplication entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnOverTimes(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnOverTimes(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnOverTimes1(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnOverTimes1(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnOverTimes2(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnOverTimes2(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnOverTimes3(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnOverTimes3(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnOverTimes4(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnOverTimes4(TrnOverTime entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPayrolls1(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPayrolls1(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPayrolls2(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPayrolls2(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPayrolls3(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPayrolls3(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPayrolls4(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPayrolls4(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPayrollOtherDeductions(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPayrollOtherDeductions(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPayrollOtherDeductions1(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPayrollOtherDeductions1(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPayrollOtherDeductions2(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPayrollOtherDeductions2(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPayrollOtherDeductions3(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPayrollOtherDeductions3(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPayrollOtherDeductions4(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPayrollOtherDeductions4(TrnPayrollOtherDeduction entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPayrollOtherIncomes(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPayrollOtherIncomes(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPayrollOtherIncomes1(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPayrollOtherIncomes1(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPayrollOtherIncomes2(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPayrollOtherIncomes2(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPayrollOtherIncomes3(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPayrollOtherIncomes3(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPayrollOtherIncomes4(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPayrollOtherIncomes4(TrnPayrollOtherIncome entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserForm")]
	public partial class MstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _FormId;
		
		private bool _CanAdd;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanLock;
		
		private bool _CanUnlock;
		
		private bool _CanPreview;
		
		private bool _CanPrint;
		
		private bool _CanView;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<SysForm> _SysForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanLockChanging(bool value);
    partial void OnCanLockChanged();
    partial void OnCanUnlockChanging(bool value);
    partial void OnCanUnlockChanged();
    partial void OnCanPreviewChanging(bool value);
    partial void OnCanPreviewChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnCanViewChanging(bool value);
    partial void OnCanViewChanged();
    #endregion
		
		public MstUserForm()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._SysForm = default(EntityRef<SysForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					if (this._SysForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLock", DbType="Bit NOT NULL")]
		public bool CanLock
		{
			get
			{
				return this._CanLock;
			}
			set
			{
				if ((this._CanLock != value))
				{
					this.OnCanLockChanging(value);
					this.SendPropertyChanging();
					this._CanLock = value;
					this.SendPropertyChanged("CanLock");
					this.OnCanLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUnlock", DbType="Bit NOT NULL")]
		public bool CanUnlock
		{
			get
			{
				return this._CanUnlock;
			}
			set
			{
				if ((this._CanUnlock != value))
				{
					this.OnCanUnlockChanging(value);
					this.SendPropertyChanging();
					this._CanUnlock = value;
					this.SendPropertyChanged("CanUnlock");
					this.OnCanUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPreview", DbType="Bit NOT NULL")]
		public bool CanPreview
		{
			get
			{
				return this._CanPreview;
			}
			set
			{
				if ((this._CanPreview != value))
				{
					this.OnCanPreviewChanging(value);
					this.SendPropertyChanging();
					this._CanPreview = value;
					this.SendPropertyChanged("CanPreview");
					this.OnCanPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanView", DbType="Bit NOT NULL")]
		public bool CanView
		{
			get
			{
				return this._CanView;
			}
			set
			{
				if ((this._CanView != value))
				{
					this.OnCanViewChanging(value);
					this.SendPropertyChanging();
					this._CanView = value;
					this.SendPropertyChanged("CanView");
					this.OnCanViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_SysForm", ThisKey="FormId", OtherKey="Id", IsForeignKey=true)]
		public SysForm SysForm
		{
			get
			{
				return this._SysForm.Entity;
			}
			set
			{
				SysForm previousValue = this._SysForm.Entity;
				if (((previousValue != value) 
							|| (this._SysForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysForm.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._SysForm.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._FormId = value.Id;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("SysForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserPayrollGroup")]
	public partial class MstUserPayrollGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _PayrollGroupId;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    #endregion
		
		public MstUserPayrollGroup()
		{
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_MstUserPayrollGroup", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.MstUserPayrollGroups.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.MstUserPayrollGroups.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserPayrollGroup", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserPayrollGroups.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserPayrollGroups.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstZipCode")]
	public partial class MstZipCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ZipCode;
		
		private string _Location;
		
		private string _Area;
		
		private EntitySet<MstEmployee> _MstEmployees;
		
		private EntitySet<MstEmployee> _MstEmployees1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    #endregion
		
		public MstZipCode()
		{
			this._MstEmployees = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees), new Action<MstEmployee>(this.detach_MstEmployees));
			this._MstEmployees1 = new EntitySet<MstEmployee>(new Action<MstEmployee>(this.attach_MstEmployees1), new Action<MstEmployee>(this.detach_MstEmployees1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee", Storage="_MstEmployees", ThisKey="Id", OtherKey="ZipCodeId")]
		public EntitySet<MstEmployee> MstEmployees
		{
			get
			{
				return this._MstEmployees;
			}
			set
			{
				this._MstEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstZipCode_MstEmployee1", Storage="_MstEmployees1", ThisKey="Id", OtherKey="PlaceOfBirthZipCodeId")]
		public EntitySet<MstEmployee> MstEmployees1
		{
			get
			{
				return this._MstEmployees1;
			}
			set
			{
				this._MstEmployees1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode = this;
		}
		
		private void detach_MstEmployees(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode = null;
		}
		
		private void attach_MstEmployees1(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode1 = this;
		}
		
		private void detach_MstEmployees1(MstEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MstZipCode1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysForm")]
	public partial class SysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FormName;
		
		private string _Remarks;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public SysForm()
		{
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="FormId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnChangeShift")]
	public partial class TrnChangeShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _CSNumber;
		
		private System.DateTime _CSDate;
		
		private int _PayrollGroupId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnChangeShiftLine> _TrnChangeShiftLines;
		
		private EntitySet<TrnDTR> _TrnDTRs;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnCSNumberChanging(string value);
    partial void OnCSNumberChanged();
    partial void OnCSDateChanging(System.DateTime value);
    partial void OnCSDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnChangeShift()
		{
			this._TrnChangeShiftLines = new EntitySet<TrnChangeShiftLine>(new Action<TrnChangeShiftLine>(this.attach_TrnChangeShiftLines), new Action<TrnChangeShiftLine>(this.detach_TrnChangeShiftLines));
			this._TrnDTRs = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs), new Action<TrnDTR>(this.detach_TrnDTRs));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CSNumber
		{
			get
			{
				return this._CSNumber;
			}
			set
			{
				if ((this._CSNumber != value))
				{
					this.OnCSNumberChanging(value);
					this.SendPropertyChanging();
					this._CSNumber = value;
					this.SendPropertyChanged("CSNumber");
					this.OnCSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSDate", DbType="DateTime NOT NULL")]
		public System.DateTime CSDate
		{
			get
			{
				return this._CSDate;
			}
			set
			{
				if ((this._CSDate != value))
				{
					this.OnCSDateChanging(value);
					this.SendPropertyChanging();
					this._CSDate = value;
					this.SendPropertyChanged("CSDate");
					this.OnCSDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnChangeShift_TrnChangeShiftLine", Storage="_TrnChangeShiftLines", ThisKey="Id", OtherKey="ChangeShiftId")]
		public EntitySet<TrnChangeShiftLine> TrnChangeShiftLines
		{
			get
			{
				return this._TrnChangeShiftLines;
			}
			set
			{
				this._TrnChangeShiftLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnChangeShift_TrnDTR", Storage="_TrnDTRs", ThisKey="Id", OtherKey="ChangeShiftId")]
		public EntitySet<TrnDTR> TrnDTRs
		{
			get
			{
				return this._TrnDTRs;
			}
			set
			{
				this._TrnDTRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnChangeShift", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnChangeShifts.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnChangeShift", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnChangeShifts.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnChangeShifts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnChangeShifts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnChangeShifts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnChangeShifts3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnChangeShift4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnChangeShifts4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShifts4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnChangeShiftLines(TrnChangeShiftLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnChangeShift = this;
		}
		
		private void detach_TrnChangeShiftLines(TrnChangeShiftLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnChangeShift = null;
		}
		
		private void attach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.TrnChangeShift = this;
		}
		
		private void detach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.TrnChangeShift = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnChangeShiftDraft")]
	public partial class TrnChangeShiftDraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DocRefNumber;
		
		private string _EmployeeIdNumber;
		
		private System.DateTime _Date;
		
		private string _ShiftCode;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDocRefNumberChanging(string value);
    partial void OnDocRefNumberChanged();
    partial void OnEmployeeIdNumberChanging(string value);
    partial void OnEmployeeIdNumberChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnShiftCodeChanging(string value);
    partial void OnShiftCodeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnChangeShiftDraft()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocRefNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocRefNumber
		{
			get
			{
				return this._DocRefNumber;
			}
			set
			{
				if ((this._DocRefNumber != value))
				{
					this.OnDocRefNumberChanging(value);
					this.SendPropertyChanging();
					this._DocRefNumber = value;
					this.SendPropertyChanged("DocRefNumber");
					this.OnDocRefNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIdNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployeeIdNumber
		{
			get
			{
				return this._EmployeeIdNumber;
			}
			set
			{
				if ((this._EmployeeIdNumber != value))
				{
					this.OnEmployeeIdNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIdNumber = value;
					this.SendPropertyChanged("EmployeeIdNumber");
					this.OnEmployeeIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this.OnShiftCodeChanging(value);
					this.SendPropertyChanging();
					this._ShiftCode = value;
					this.SendPropertyChanged("ShiftCode");
					this.OnShiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnChangeShiftLine")]
	public partial class TrnChangeShiftLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ChangeShiftId;
		
		private int _EmployeeId;
		
		private System.DateTime _Date;
		
		private int _ShiftCodeId;
		
		private string _Remarks;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstShiftCode> _MstShiftCode;
		
		private EntityRef<TrnChangeShift> _TrnChangeShift;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChangeShiftIdChanging(int value);
    partial void OnChangeShiftIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnChangeShiftLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstShiftCode = default(EntityRef<MstShiftCode>);
			this._TrnChangeShift = default(EntityRef<TrnChangeShift>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeShiftId", DbType="Int NOT NULL")]
		public int ChangeShiftId
		{
			get
			{
				return this._ChangeShiftId;
			}
			set
			{
				if ((this._ChangeShiftId != value))
				{
					if (this._TrnChangeShift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeShiftId = value;
					this.SendPropertyChanged("ChangeShiftId");
					this.OnChangeShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					if (this._MstShiftCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnChangeShiftLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnChangeShiftLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShiftLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_TrnChangeShiftLine", Storage="_MstShiftCode", ThisKey="ShiftCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstShiftCode MstShiftCode
		{
			get
			{
				return this._MstShiftCode.Entity;
			}
			set
			{
				MstShiftCode previousValue = this._MstShiftCode.Entity;
				if (((previousValue != value) 
							|| (this._MstShiftCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstShiftCode.Entity = null;
						previousValue.TrnChangeShiftLines.Remove(this);
					}
					this._MstShiftCode.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShiftLines.Add(this);
						this._ShiftCodeId = value.Id;
					}
					else
					{
						this._ShiftCodeId = default(int);
					}
					this.SendPropertyChanged("MstShiftCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnChangeShift_TrnChangeShiftLine", Storage="_TrnChangeShift", ThisKey="ChangeShiftId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnChangeShift TrnChangeShift
		{
			get
			{
				return this._TrnChangeShift.Entity;
			}
			set
			{
				TrnChangeShift previousValue = this._TrnChangeShift.Entity;
				if (((previousValue != value) 
							|| (this._TrnChangeShift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnChangeShift.Entity = null;
						previousValue.TrnChangeShiftLines.Remove(this);
					}
					this._TrnChangeShift.Entity = value;
					if ((value != null))
					{
						value.TrnChangeShiftLines.Add(this);
						this._ChangeShiftId = value.Id;
					}
					else
					{
						this._ChangeShiftId = default(int);
					}
					this.SendPropertyChanged("TrnChangeShift");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDTR")]
	public partial class TrnDTR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _DTRNumber;
		
		private System.DateTime _DTRDate;
		
		private int _PayrollGroupId;
		
		private System.DateTime _DateStart;
		
		private System.DateTime _DateEnd;
		
		private System.Nullable<int> _OvertTimeId;
		
		private System.Nullable<int> _LeaveApplicationId;
		
		private System.Nullable<int> _ChangeShiftId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnDTRLine> _TrnDTRLines;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnChangeShift> _TrnChangeShift;
		
		private EntityRef<TrnLeaveApplication> _TrnLeaveApplication;
		
		private EntityRef<TrnOverTime> _TrnOverTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnDTRNumberChanging(string value);
    partial void OnDTRNumberChanged();
    partial void OnDTRDateChanging(System.DateTime value);
    partial void OnDTRDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnOvertTimeIdChanging(System.Nullable<int> value);
    partial void OnOvertTimeIdChanged();
    partial void OnLeaveApplicationIdChanging(System.Nullable<int> value);
    partial void OnLeaveApplicationIdChanged();
    partial void OnChangeShiftIdChanging(System.Nullable<int> value);
    partial void OnChangeShiftIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnDTR()
		{
			this._TrnDTRLines = new EntitySet<TrnDTRLine>(new Action<TrnDTRLine>(this.attach_TrnDTRLines), new Action<TrnDTRLine>(this.detach_TrnDTRLines));
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnChangeShift = default(EntityRef<TrnChangeShift>);
			this._TrnLeaveApplication = default(EntityRef<TrnLeaveApplication>);
			this._TrnOverTime = default(EntityRef<TrnOverTime>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTRNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DTRNumber
		{
			get
			{
				return this._DTRNumber;
			}
			set
			{
				if ((this._DTRNumber != value))
				{
					this.OnDTRNumberChanging(value);
					this.SendPropertyChanging();
					this._DTRNumber = value;
					this.SendPropertyChanged("DTRNumber");
					this.OnDTRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTRDate", DbType="DateTime NOT NULL")]
		public System.DateTime DTRDate
		{
			get
			{
				return this._DTRDate;
			}
			set
			{
				if ((this._DTRDate != value))
				{
					this.OnDTRDateChanging(value);
					this.SendPropertyChanging();
					this._DTRDate = value;
					this.SendPropertyChanged("DTRDate");
					this.OnDTRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertTimeId", DbType="Int")]
		public System.Nullable<int> OvertTimeId
		{
			get
			{
				return this._OvertTimeId;
			}
			set
			{
				if ((this._OvertTimeId != value))
				{
					if (this._TrnOverTime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOvertTimeIdChanging(value);
					this.SendPropertyChanging();
					this._OvertTimeId = value;
					this.SendPropertyChanged("OvertTimeId");
					this.OnOvertTimeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApplicationId", DbType="Int")]
		public System.Nullable<int> LeaveApplicationId
		{
			get
			{
				return this._LeaveApplicationId;
			}
			set
			{
				if ((this._LeaveApplicationId != value))
				{
					if (this._TrnLeaveApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveApplicationId = value;
					this.SendPropertyChanged("LeaveApplicationId");
					this.OnLeaveApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeShiftId", DbType="Int")]
		public System.Nullable<int> ChangeShiftId
		{
			get
			{
				return this._ChangeShiftId;
			}
			set
			{
				if ((this._ChangeShiftId != value))
				{
					if (this._TrnChangeShift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeShiftId = value;
					this.SendPropertyChanged("ChangeShiftId");
					this.OnChangeShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDTR_TrnDTRLine", Storage="_TrnDTRLines", ThisKey="Id", OtherKey="DTRId")]
		public EntitySet<TrnDTRLine> TrnDTRLines
		{
			get
			{
				return this._TrnDTRLines;
			}
			set
			{
				this._TrnDTRLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDTR_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="DTRId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnDTR", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnDTRs.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDTR", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnDTRs.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnDTRs.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnDTRs1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnDTRs2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnDTRs3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDTR4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnDTRs4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnChangeShift_TrnDTR", Storage="_TrnChangeShift", ThisKey="ChangeShiftId", OtherKey="Id", IsForeignKey=true)]
		public TrnChangeShift TrnChangeShift
		{
			get
			{
				return this._TrnChangeShift.Entity;
			}
			set
			{
				TrnChangeShift previousValue = this._TrnChangeShift.Entity;
				if (((previousValue != value) 
							|| (this._TrnChangeShift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnChangeShift.Entity = null;
						previousValue.TrnDTRs.Remove(this);
					}
					this._TrnChangeShift.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs.Add(this);
						this._ChangeShiftId = value.Id;
					}
					else
					{
						this._ChangeShiftId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnChangeShift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLeaveApplication_TrnDTR", Storage="_TrnLeaveApplication", ThisKey="LeaveApplicationId", OtherKey="Id", IsForeignKey=true)]
		public TrnLeaveApplication TrnLeaveApplication
		{
			get
			{
				return this._TrnLeaveApplication.Entity;
			}
			set
			{
				TrnLeaveApplication previousValue = this._TrnLeaveApplication.Entity;
				if (((previousValue != value) 
							|| (this._TrnLeaveApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnLeaveApplication.Entity = null;
						previousValue.TrnDTRs.Remove(this);
					}
					this._TrnLeaveApplication.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs.Add(this);
						this._LeaveApplicationId = value.Id;
					}
					else
					{
						this._LeaveApplicationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnLeaveApplication");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnOverTime_TrnDTR", Storage="_TrnOverTime", ThisKey="OvertTimeId", OtherKey="Id", IsForeignKey=true)]
		public TrnOverTime TrnOverTime
		{
			get
			{
				return this._TrnOverTime.Entity;
			}
			set
			{
				TrnOverTime previousValue = this._TrnOverTime.Entity;
				if (((previousValue != value) 
							|| (this._TrnOverTime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnOverTime.Entity = null;
						previousValue.TrnDTRs.Remove(this);
					}
					this._TrnOverTime.Entity = value;
					if ((value != null))
					{
						value.TrnDTRs.Add(this);
						this._OvertTimeId = value.Id;
					}
					else
					{
						this._OvertTimeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnOverTime");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDTR = this;
		}
		
		private void detach_TrnDTRLines(TrnDTRLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDTR = null;
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.TrnDTR = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.TrnDTR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDTRLine")]
	public partial class TrnDTRLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DTRId;
		
		private int _EmployeeId;
		
		private int _ShiftCodeId;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.DateTime> _TimeIn1;
		
		private System.Nullable<System.DateTime> _TimeOut1;
		
		private System.Nullable<System.DateTime> _TimeIn2;
		
		private System.Nullable<System.DateTime> _TimeOut2;
		
		private bool _OfficialBusiness;
		
		private bool _OnLeave;
		
		private bool _Absent;
		
		private bool _HalfdayAbsent;
		
		private decimal _RegularHours;
		
		private decimal _NightHours;
		
		private decimal _OvertimeHours;
		
		private decimal _OvertimeNightHours;
		
		private decimal _GrossTotalHours;
		
		private decimal _TardyLateHours;
		
		private decimal _TardyUndertimeHours;
		
		private decimal _NetTotalHours;
		
		private int _DayTypeId;
		
		private bool _RestDay;
		
		private decimal _DayMultiplier;
		
		private decimal _RatePerHour;
		
		private decimal _RatePerNightHour;
		
		private decimal _RatePerOvertimeHour;
		
		private decimal _RatePerOvertimeNightHour;
		
		private decimal _RegularAmount;
		
		private decimal _NightAmount;
		
		private decimal _OvertimeAmount;
		
		private decimal _OvertimeNightAmount;
		
		private decimal _TotalAmount;
		
		private decimal _RatePerHourTardy;
		
		private decimal _RatePerAbsentDay;
		
		private decimal _TardyAmount;
		
		private decimal _AbsentAmount;
		
		private decimal _NetAmount;
		
		private EntityRef<MstDayType> _MstDayType;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstShiftCode> _MstShiftCode;
		
		private EntityRef<TrnDTR> _TrnDTR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDTRIdChanging(int value);
    partial void OnDTRIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnShiftCodeIdChanging(int value);
    partial void OnShiftCodeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTimeIn1Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeIn1Changed();
    partial void OnTimeOut1Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeOut1Changed();
    partial void OnTimeIn2Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeIn2Changed();
    partial void OnTimeOut2Changing(System.Nullable<System.DateTime> value);
    partial void OnTimeOut2Changed();
    partial void OnOfficialBusinessChanging(bool value);
    partial void OnOfficialBusinessChanged();
    partial void OnOnLeaveChanging(bool value);
    partial void OnOnLeaveChanged();
    partial void OnAbsentChanging(bool value);
    partial void OnAbsentChanged();
    partial void OnHalfdayAbsentChanging(bool value);
    partial void OnHalfdayAbsentChanged();
    partial void OnRegularHoursChanging(decimal value);
    partial void OnRegularHoursChanged();
    partial void OnNightHoursChanging(decimal value);
    partial void OnNightHoursChanged();
    partial void OnOvertimeHoursChanging(decimal value);
    partial void OnOvertimeHoursChanged();
    partial void OnOvertimeNightHoursChanging(decimal value);
    partial void OnOvertimeNightHoursChanged();
    partial void OnGrossTotalHoursChanging(decimal value);
    partial void OnGrossTotalHoursChanged();
    partial void OnTardyLateHoursChanging(decimal value);
    partial void OnTardyLateHoursChanged();
    partial void OnTardyUndertimeHoursChanging(decimal value);
    partial void OnTardyUndertimeHoursChanged();
    partial void OnNetTotalHoursChanging(decimal value);
    partial void OnNetTotalHoursChanged();
    partial void OnDayTypeIdChanging(int value);
    partial void OnDayTypeIdChanged();
    partial void OnRestDayChanging(bool value);
    partial void OnRestDayChanged();
    partial void OnDayMultiplierChanging(decimal value);
    partial void OnDayMultiplierChanged();
    partial void OnRatePerHourChanging(decimal value);
    partial void OnRatePerHourChanged();
    partial void OnRatePerNightHourChanging(decimal value);
    partial void OnRatePerNightHourChanged();
    partial void OnRatePerOvertimeHourChanging(decimal value);
    partial void OnRatePerOvertimeHourChanged();
    partial void OnRatePerOvertimeNightHourChanging(decimal value);
    partial void OnRatePerOvertimeNightHourChanged();
    partial void OnRegularAmountChanging(decimal value);
    partial void OnRegularAmountChanged();
    partial void OnNightAmountChanging(decimal value);
    partial void OnNightAmountChanged();
    partial void OnOvertimeAmountChanging(decimal value);
    partial void OnOvertimeAmountChanged();
    partial void OnOvertimeNightAmountChanging(decimal value);
    partial void OnOvertimeNightAmountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnRatePerHourTardyChanging(decimal value);
    partial void OnRatePerHourTardyChanged();
    partial void OnRatePerAbsentDayChanging(decimal value);
    partial void OnRatePerAbsentDayChanged();
    partial void OnTardyAmountChanging(decimal value);
    partial void OnTardyAmountChanged();
    partial void OnAbsentAmountChanging(decimal value);
    partial void OnAbsentAmountChanged();
    partial void OnNetAmountChanging(decimal value);
    partial void OnNetAmountChanged();
    #endregion
		
		public TrnDTRLine()
		{
			this._MstDayType = default(EntityRef<MstDayType>);
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstShiftCode = default(EntityRef<MstShiftCode>);
			this._TrnDTR = default(EntityRef<TrnDTR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTRId", DbType="Int NOT NULL")]
		public int DTRId
		{
			get
			{
				return this._DTRId;
			}
			set
			{
				if ((this._DTRId != value))
				{
					if (this._TrnDTR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTRIdChanging(value);
					this.SendPropertyChanging();
					this._DTRId = value;
					this.SendPropertyChanged("DTRId");
					this.OnDTRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCodeId", DbType="Int NOT NULL")]
		public int ShiftCodeId
		{
			get
			{
				return this._ShiftCodeId;
			}
			set
			{
				if ((this._ShiftCodeId != value))
				{
					if (this._MstShiftCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftCodeId = value;
					this.SendPropertyChanged("ShiftCodeId");
					this.OnShiftCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn1", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeIn1
		{
			get
			{
				return this._TimeIn1;
			}
			set
			{
				if ((this._TimeIn1 != value))
				{
					this.OnTimeIn1Changing(value);
					this.SendPropertyChanging();
					this._TimeIn1 = value;
					this.SendPropertyChanged("TimeIn1");
					this.OnTimeIn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut1", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOut1
		{
			get
			{
				return this._TimeOut1;
			}
			set
			{
				if ((this._TimeOut1 != value))
				{
					this.OnTimeOut1Changing(value);
					this.SendPropertyChanging();
					this._TimeOut1 = value;
					this.SendPropertyChanged("TimeOut1");
					this.OnTimeOut1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn2", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeIn2
		{
			get
			{
				return this._TimeIn2;
			}
			set
			{
				if ((this._TimeIn2 != value))
				{
					this.OnTimeIn2Changing(value);
					this.SendPropertyChanging();
					this._TimeIn2 = value;
					this.SendPropertyChanged("TimeIn2");
					this.OnTimeIn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut2", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOut2
		{
			get
			{
				return this._TimeOut2;
			}
			set
			{
				if ((this._TimeOut2 != value))
				{
					this.OnTimeOut2Changing(value);
					this.SendPropertyChanging();
					this._TimeOut2 = value;
					this.SendPropertyChanged("TimeOut2");
					this.OnTimeOut2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficialBusiness", DbType="Bit NOT NULL")]
		public bool OfficialBusiness
		{
			get
			{
				return this._OfficialBusiness;
			}
			set
			{
				if ((this._OfficialBusiness != value))
				{
					this.OnOfficialBusinessChanging(value);
					this.SendPropertyChanging();
					this._OfficialBusiness = value;
					this.SendPropertyChanged("OfficialBusiness");
					this.OnOfficialBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnLeave", DbType="Bit NOT NULL")]
		public bool OnLeave
		{
			get
			{
				return this._OnLeave;
			}
			set
			{
				if ((this._OnLeave != value))
				{
					this.OnOnLeaveChanging(value);
					this.SendPropertyChanging();
					this._OnLeave = value;
					this.SendPropertyChanged("OnLeave");
					this.OnOnLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Absent", DbType="Bit NOT NULL")]
		public bool Absent
		{
			get
			{
				return this._Absent;
			}
			set
			{
				if ((this._Absent != value))
				{
					this.OnAbsentChanging(value);
					this.SendPropertyChanging();
					this._Absent = value;
					this.SendPropertyChanged("Absent");
					this.OnAbsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfdayAbsent", DbType="Bit NOT NULL")]
		public bool HalfdayAbsent
		{
			get
			{
				return this._HalfdayAbsent;
			}
			set
			{
				if ((this._HalfdayAbsent != value))
				{
					this.OnHalfdayAbsentChanging(value);
					this.SendPropertyChanging();
					this._HalfdayAbsent = value;
					this.SendPropertyChanged("HalfdayAbsent");
					this.OnHalfdayAbsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal RegularHours
		{
			get
			{
				return this._RegularHours;
			}
			set
			{
				if ((this._RegularHours != value))
				{
					this.OnRegularHoursChanging(value);
					this.SendPropertyChanging();
					this._RegularHours = value;
					this.SendPropertyChanged("RegularHours");
					this.OnRegularHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal NightHours
		{
			get
			{
				return this._NightHours;
			}
			set
			{
				if ((this._NightHours != value))
				{
					this.OnNightHoursChanging(value);
					this.SendPropertyChanging();
					this._NightHours = value;
					this.SendPropertyChanged("NightHours");
					this.OnNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeHours
		{
			get
			{
				return this._OvertimeHours;
			}
			set
			{
				if ((this._OvertimeHours != value))
				{
					this.OnOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeHours = value;
					this.SendPropertyChanged("OvertimeHours");
					this.OnOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeNightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeNightHours
		{
			get
			{
				return this._OvertimeNightHours;
			}
			set
			{
				if ((this._OvertimeNightHours != value))
				{
					this.OnOvertimeNightHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeNightHours = value;
					this.SendPropertyChanged("OvertimeNightHours");
					this.OnOvertimeNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossTotalHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal GrossTotalHours
		{
			get
			{
				return this._GrossTotalHours;
			}
			set
			{
				if ((this._GrossTotalHours != value))
				{
					this.OnGrossTotalHoursChanging(value);
					this.SendPropertyChanging();
					this._GrossTotalHours = value;
					this.SendPropertyChanged("GrossTotalHours");
					this.OnGrossTotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TardyLateHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TardyLateHours
		{
			get
			{
				return this._TardyLateHours;
			}
			set
			{
				if ((this._TardyLateHours != value))
				{
					this.OnTardyLateHoursChanging(value);
					this.SendPropertyChanging();
					this._TardyLateHours = value;
					this.SendPropertyChanged("TardyLateHours");
					this.OnTardyLateHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TardyUndertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TardyUndertimeHours
		{
			get
			{
				return this._TardyUndertimeHours;
			}
			set
			{
				if ((this._TardyUndertimeHours != value))
				{
					this.OnTardyUndertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TardyUndertimeHours = value;
					this.SendPropertyChanged("TardyUndertimeHours");
					this.OnTardyUndertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetTotalHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetTotalHours
		{
			get
			{
				return this._NetTotalHours;
			}
			set
			{
				if ((this._NetTotalHours != value))
				{
					this.OnNetTotalHoursChanging(value);
					this.SendPropertyChanging();
					this._NetTotalHours = value;
					this.SendPropertyChanged("NetTotalHours");
					this.OnNetTotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayTypeId", DbType="Int NOT NULL")]
		public int DayTypeId
		{
			get
			{
				return this._DayTypeId;
			}
			set
			{
				if ((this._DayTypeId != value))
				{
					if (this._MstDayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DayTypeId = value;
					this.SendPropertyChanged("DayTypeId");
					this.OnDayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestDay", DbType="Bit NOT NULL")]
		public bool RestDay
		{
			get
			{
				return this._RestDay;
			}
			set
			{
				if ((this._RestDay != value))
				{
					this.OnRestDayChanging(value);
					this.SendPropertyChanging();
					this._RestDay = value;
					this.SendPropertyChanged("RestDay");
					this.OnRestDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayMultiplier", DbType="Decimal(18,5) NOT NULL")]
		public decimal DayMultiplier
		{
			get
			{
				return this._DayMultiplier;
			}
			set
			{
				if ((this._DayMultiplier != value))
				{
					this.OnDayMultiplierChanging(value);
					this.SendPropertyChanging();
					this._DayMultiplier = value;
					this.SendPropertyChanged("DayMultiplier");
					this.OnDayMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerHour", DbType="Decimal(18,5) NOT NULL")]
		public decimal RatePerHour
		{
			get
			{
				return this._RatePerHour;
			}
			set
			{
				if ((this._RatePerHour != value))
				{
					this.OnRatePerHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerHour = value;
					this.SendPropertyChanged("RatePerHour");
					this.OnRatePerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerNightHour", DbType="Decimal(18,5) NOT NULL")]
		public decimal RatePerNightHour
		{
			get
			{
				return this._RatePerNightHour;
			}
			set
			{
				if ((this._RatePerNightHour != value))
				{
					this.OnRatePerNightHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerNightHour = value;
					this.SendPropertyChanged("RatePerNightHour");
					this.OnRatePerNightHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerOvertimeHour", DbType="Decimal(18,5) NOT NULL")]
		public decimal RatePerOvertimeHour
		{
			get
			{
				return this._RatePerOvertimeHour;
			}
			set
			{
				if ((this._RatePerOvertimeHour != value))
				{
					this.OnRatePerOvertimeHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerOvertimeHour = value;
					this.SendPropertyChanged("RatePerOvertimeHour");
					this.OnRatePerOvertimeHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerOvertimeNightHour", DbType="Decimal(18,5) NOT NULL")]
		public decimal RatePerOvertimeNightHour
		{
			get
			{
				return this._RatePerOvertimeNightHour;
			}
			set
			{
				if ((this._RatePerOvertimeNightHour != value))
				{
					this.OnRatePerOvertimeNightHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerOvertimeNightHour = value;
					this.SendPropertyChanged("RatePerOvertimeNightHour");
					this.OnRatePerOvertimeNightHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal RegularAmount
		{
			get
			{
				return this._RegularAmount;
			}
			set
			{
				if ((this._RegularAmount != value))
				{
					this.OnRegularAmountChanging(value);
					this.SendPropertyChanging();
					this._RegularAmount = value;
					this.SendPropertyChanged("RegularAmount");
					this.OnRegularAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal NightAmount
		{
			get
			{
				return this._NightAmount;
			}
			set
			{
				if ((this._NightAmount != value))
				{
					this.OnNightAmountChanging(value);
					this.SendPropertyChanging();
					this._NightAmount = value;
					this.SendPropertyChanged("NightAmount");
					this.OnNightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeAmount
		{
			get
			{
				return this._OvertimeAmount;
			}
			set
			{
				if ((this._OvertimeAmount != value))
				{
					this.OnOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._OvertimeAmount = value;
					this.SendPropertyChanged("OvertimeAmount");
					this.OnOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeNightAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeNightAmount
		{
			get
			{
				return this._OvertimeNightAmount;
			}
			set
			{
				if ((this._OvertimeNightAmount != value))
				{
					this.OnOvertimeNightAmountChanging(value);
					this.SendPropertyChanging();
					this._OvertimeNightAmount = value;
					this.SendPropertyChanged("OvertimeNightAmount");
					this.OnOvertimeNightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerHourTardy", DbType="Decimal(18,5) NOT NULL")]
		public decimal RatePerHourTardy
		{
			get
			{
				return this._RatePerHourTardy;
			}
			set
			{
				if ((this._RatePerHourTardy != value))
				{
					this.OnRatePerHourTardyChanging(value);
					this.SendPropertyChanging();
					this._RatePerHourTardy = value;
					this.SendPropertyChanged("RatePerHourTardy");
					this.OnRatePerHourTardyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerAbsentDay", DbType="Decimal(18,5) NOT NULL")]
		public decimal RatePerAbsentDay
		{
			get
			{
				return this._RatePerAbsentDay;
			}
			set
			{
				if ((this._RatePerAbsentDay != value))
				{
					this.OnRatePerAbsentDayChanging(value);
					this.SendPropertyChanging();
					this._RatePerAbsentDay = value;
					this.SendPropertyChanged("RatePerAbsentDay");
					this.OnRatePerAbsentDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TardyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TardyAmount
		{
			get
			{
				return this._TardyAmount;
			}
			set
			{
				if ((this._TardyAmount != value))
				{
					this.OnTardyAmountChanging(value);
					this.SendPropertyChanging();
					this._TardyAmount = value;
					this.SendPropertyChanged("TardyAmount");
					this.OnTardyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal AbsentAmount
		{
			get
			{
				return this._AbsentAmount;
			}
			set
			{
				if ((this._AbsentAmount != value))
				{
					this.OnAbsentAmountChanging(value);
					this.SendPropertyChanging();
					this._AbsentAmount = value;
					this.SendPropertyChanged("AbsentAmount");
					this.OnAbsentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetAmount
		{
			get
			{
				return this._NetAmount;
			}
			set
			{
				if ((this._NetAmount != value))
				{
					this.OnNetAmountChanging(value);
					this.SendPropertyChanging();
					this._NetAmount = value;
					this.SendPropertyChanged("NetAmount");
					this.OnNetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDayType_TrnDTRLine", Storage="_MstDayType", ThisKey="DayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstDayType MstDayType
		{
			get
			{
				return this._MstDayType.Entity;
			}
			set
			{
				MstDayType previousValue = this._MstDayType.Entity;
				if (((previousValue != value) 
							|| (this._MstDayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDayType.Entity = null;
						previousValue.TrnDTRLines.Remove(this);
					}
					this._MstDayType.Entity = value;
					if ((value != null))
					{
						value.TrnDTRLines.Add(this);
						this._DayTypeId = value.Id;
					}
					else
					{
						this._DayTypeId = default(int);
					}
					this.SendPropertyChanged("MstDayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnDTRLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnDTRLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnDTRLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstShiftCode_TrnDTRLine", Storage="_MstShiftCode", ThisKey="ShiftCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstShiftCode MstShiftCode
		{
			get
			{
				return this._MstShiftCode.Entity;
			}
			set
			{
				MstShiftCode previousValue = this._MstShiftCode.Entity;
				if (((previousValue != value) 
							|| (this._MstShiftCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstShiftCode.Entity = null;
						previousValue.TrnDTRLines.Remove(this);
					}
					this._MstShiftCode.Entity = value;
					if ((value != null))
					{
						value.TrnDTRLines.Add(this);
						this._ShiftCodeId = value.Id;
					}
					else
					{
						this._ShiftCodeId = default(int);
					}
					this.SendPropertyChanged("MstShiftCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDTR_TrnDTRLine", Storage="_TrnDTR", ThisKey="DTRId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnDTR TrnDTR
		{
			get
			{
				return this._TrnDTR.Entity;
			}
			set
			{
				TrnDTR previousValue = this._TrnDTR.Entity;
				if (((previousValue != value) 
							|| (this._TrnDTR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDTR.Entity = null;
						previousValue.TrnDTRLines.Remove(this);
					}
					this._TrnDTR.Entity = value;
					if ((value != null))
					{
						value.TrnDTRLines.Add(this);
						this._DTRId = value.Id;
					}
					else
					{
						this._DTRId = default(int);
					}
					this.SendPropertyChanged("TrnDTR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDTRLog")]
	public partial class TrnDTRLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private System.DateTime _Date;
		
		private string _LogType;
		
		private System.DateTime _Time;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public TrnDTRLog()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnDTRLog", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnDTRLogs.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnDTRLogs.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLastWithholdingTax")]
	public partial class TrnLastWithholdingTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _LWTNumber;
		
		private System.DateTime _LWTDate;
		
		private int _PayrollGroupId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnLastWithholdingTaxLine> _TrnLastWithholdingTaxLines;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnLWTNumberChanging(string value);
    partial void OnLWTNumberChanged();
    partial void OnLWTDateChanging(System.DateTime value);
    partial void OnLWTDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnLastWithholdingTax()
		{
			this._TrnLastWithholdingTaxLines = new EntitySet<TrnLastWithholdingTaxLine>(new Action<TrnLastWithholdingTaxLine>(this.attach_TrnLastWithholdingTaxLines), new Action<TrnLastWithholdingTaxLine>(this.detach_TrnLastWithholdingTaxLines));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LWTNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LWTNumber
		{
			get
			{
				return this._LWTNumber;
			}
			set
			{
				if ((this._LWTNumber != value))
				{
					this.OnLWTNumberChanging(value);
					this.SendPropertyChanging();
					this._LWTNumber = value;
					this.SendPropertyChanged("LWTNumber");
					this.OnLWTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LWTDate", DbType="DateTime NOT NULL")]
		public System.DateTime LWTDate
		{
			get
			{
				return this._LWTDate;
			}
			set
			{
				if ((this._LWTDate != value))
				{
					this.OnLWTDateChanging(value);
					this.SendPropertyChanging();
					this._LWTDate = value;
					this.SendPropertyChanged("LWTDate");
					this.OnLWTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLastWithholdingTax_TrnLastWithholdingTaxLine", Storage="_TrnLastWithholdingTaxLines", ThisKey="Id", OtherKey="LastWithholdingTaxId")]
		public EntitySet<TrnLastWithholdingTaxLine> TrnLastWithholdingTaxLines
		{
			get
			{
				return this._TrnLastWithholdingTaxLines;
			}
			set
			{
				this._TrnLastWithholdingTaxLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnLastWithholdingTax", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnLastWithholdingTaxes.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnLastWithholdingTax", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnLastWithholdingTaxes.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnLastWithholdingTaxes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnLastWithholdingTaxes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnLastWithholdingTaxes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnLastWithholdingTaxes3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLastWithholdingTax4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnLastWithholdingTaxes4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxes4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnLastWithholdingTaxLines(TrnLastWithholdingTaxLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnLastWithholdingTax = this;
		}
		
		private void detach_TrnLastWithholdingTaxLines(TrnLastWithholdingTaxLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnLastWithholdingTax = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLastWithholdingTaxLine")]
	public partial class TrnLastWithholdingTaxLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LastWithholdingTaxId;
		
		private int _EmployeeId;
		
		private int _TaxCodeId;
		
		private decimal _TotalNetSalaryAmount;
		
		private decimal _TotalOtherIncomeTaxable;
		
		private decimal _TotalSSSContribution;
		
		private decimal _TotalSSSECContribution;
		
		private decimal _TotalPHICContribution;
		
		private decimal _TotalHDMFContribution;
		
		private decimal _TotalOtherDeductionTaxable;
		
		private decimal _Exemption;
		
		private decimal _Tax;
		
		private decimal _TaxWithheld;
		
		private decimal _LastTax;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstTaxCode> _MstTaxCode;
		
		private EntityRef<TrnLastWithholdingTax> _TrnLastWithholdingTax;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLastWithholdingTaxIdChanging(int value);
    partial void OnLastWithholdingTaxIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnTaxCodeIdChanging(int value);
    partial void OnTaxCodeIdChanged();
    partial void OnTotalNetSalaryAmountChanging(decimal value);
    partial void OnTotalNetSalaryAmountChanged();
    partial void OnTotalOtherIncomeTaxableChanging(decimal value);
    partial void OnTotalOtherIncomeTaxableChanged();
    partial void OnTotalSSSContributionChanging(decimal value);
    partial void OnTotalSSSContributionChanged();
    partial void OnTotalSSSECContributionChanging(decimal value);
    partial void OnTotalSSSECContributionChanged();
    partial void OnTotalPHICContributionChanging(decimal value);
    partial void OnTotalPHICContributionChanged();
    partial void OnTotalHDMFContributionChanging(decimal value);
    partial void OnTotalHDMFContributionChanged();
    partial void OnTotalOtherDeductionTaxableChanging(decimal value);
    partial void OnTotalOtherDeductionTaxableChanged();
    partial void OnExemptionChanging(decimal value);
    partial void OnExemptionChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnTaxWithheldChanging(decimal value);
    partial void OnTaxWithheldChanged();
    partial void OnLastTaxChanging(decimal value);
    partial void OnLastTaxChanged();
    #endregion
		
		public TrnLastWithholdingTaxLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstTaxCode = default(EntityRef<MstTaxCode>);
			this._TrnLastWithholdingTax = default(EntityRef<TrnLastWithholdingTax>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWithholdingTaxId", DbType="Int NOT NULL")]
		public int LastWithholdingTaxId
		{
			get
			{
				return this._LastWithholdingTaxId;
			}
			set
			{
				if ((this._LastWithholdingTaxId != value))
				{
					if (this._TrnLastWithholdingTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastWithholdingTaxIdChanging(value);
					this.SendPropertyChanging();
					this._LastWithholdingTaxId = value;
					this.SendPropertyChanged("LastWithholdingTaxId");
					this.OnLastWithholdingTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeId", DbType="Int NOT NULL")]
		public int TaxCodeId
		{
			get
			{
				return this._TaxCodeId;
			}
			set
			{
				if ((this._TaxCodeId != value))
				{
					if (this._MstTaxCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeId = value;
					this.SendPropertyChanged("TaxCodeId");
					this.OnTaxCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetSalaryAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalNetSalaryAmount
		{
			get
			{
				return this._TotalNetSalaryAmount;
			}
			set
			{
				if ((this._TotalNetSalaryAmount != value))
				{
					this.OnTotalNetSalaryAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalNetSalaryAmount = value;
					this.SendPropertyChanged("TotalNetSalaryAmount");
					this.OnTotalNetSalaryAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOtherIncomeTaxable", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalOtherIncomeTaxable
		{
			get
			{
				return this._TotalOtherIncomeTaxable;
			}
			set
			{
				if ((this._TotalOtherIncomeTaxable != value))
				{
					this.OnTotalOtherIncomeTaxableChanging(value);
					this.SendPropertyChanging();
					this._TotalOtherIncomeTaxable = value;
					this.SendPropertyChanged("TotalOtherIncomeTaxable");
					this.OnTotalOtherIncomeTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSSSContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSSSContribution
		{
			get
			{
				return this._TotalSSSContribution;
			}
			set
			{
				if ((this._TotalSSSContribution != value))
				{
					this.OnTotalSSSContributionChanging(value);
					this.SendPropertyChanging();
					this._TotalSSSContribution = value;
					this.SendPropertyChanged("TotalSSSContribution");
					this.OnTotalSSSContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSSSECContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSSSECContribution
		{
			get
			{
				return this._TotalSSSECContribution;
			}
			set
			{
				if ((this._TotalSSSECContribution != value))
				{
					this.OnTotalSSSECContributionChanging(value);
					this.SendPropertyChanging();
					this._TotalSSSECContribution = value;
					this.SendPropertyChanged("TotalSSSECContribution");
					this.OnTotalSSSECContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPHICContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPHICContribution
		{
			get
			{
				return this._TotalPHICContribution;
			}
			set
			{
				if ((this._TotalPHICContribution != value))
				{
					this.OnTotalPHICContributionChanging(value);
					this.SendPropertyChanging();
					this._TotalPHICContribution = value;
					this.SendPropertyChanged("TotalPHICContribution");
					this.OnTotalPHICContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHDMFContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalHDMFContribution
		{
			get
			{
				return this._TotalHDMFContribution;
			}
			set
			{
				if ((this._TotalHDMFContribution != value))
				{
					this.OnTotalHDMFContributionChanging(value);
					this.SendPropertyChanging();
					this._TotalHDMFContribution = value;
					this.SendPropertyChanged("TotalHDMFContribution");
					this.OnTotalHDMFContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOtherDeductionTaxable", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalOtherDeductionTaxable
		{
			get
			{
				return this._TotalOtherDeductionTaxable;
			}
			set
			{
				if ((this._TotalOtherDeductionTaxable != value))
				{
					this.OnTotalOtherDeductionTaxableChanging(value);
					this.SendPropertyChanging();
					this._TotalOtherDeductionTaxable = value;
					this.SendPropertyChanged("TotalOtherDeductionTaxable");
					this.OnTotalOtherDeductionTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exemption", DbType="Decimal(18,5) NOT NULL")]
		public decimal Exemption
		{
			get
			{
				return this._Exemption;
			}
			set
			{
				if ((this._Exemption != value))
				{
					this.OnExemptionChanging(value);
					this.SendPropertyChanging();
					this._Exemption = value;
					this.SendPropertyChanged("Exemption");
					this.OnExemptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,5) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxWithheld", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxWithheld
		{
			get
			{
				return this._TaxWithheld;
			}
			set
			{
				if ((this._TaxWithheld != value))
				{
					this.OnTaxWithheldChanging(value);
					this.SendPropertyChanging();
					this._TaxWithheld = value;
					this.SendPropertyChanged("TaxWithheld");
					this.OnTaxWithheldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTax", DbType="Decimal(18,5) NOT NULL")]
		public decimal LastTax
		{
			get
			{
				return this._LastTax;
			}
			set
			{
				if ((this._LastTax != value))
				{
					this.OnLastTaxChanging(value);
					this.SendPropertyChanging();
					this._LastTax = value;
					this.SendPropertyChanged("LastTax");
					this.OnLastTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnLastWithholdingTaxLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnLastWithholdingTaxLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_TrnLastWithholdingTaxLine", Storage="_MstTaxCode", ThisKey="TaxCodeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxCode MstTaxCode
		{
			get
			{
				return this._MstTaxCode.Entity;
			}
			set
			{
				MstTaxCode previousValue = this._MstTaxCode.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxCode.Entity = null;
						previousValue.TrnLastWithholdingTaxLines.Remove(this);
					}
					this._MstTaxCode.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxLines.Add(this);
						this._TaxCodeId = value.Id;
					}
					else
					{
						this._TaxCodeId = default(int);
					}
					this.SendPropertyChanged("MstTaxCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLastWithholdingTax_TrnLastWithholdingTaxLine", Storage="_TrnLastWithholdingTax", ThisKey="LastWithholdingTaxId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnLastWithholdingTax TrnLastWithholdingTax
		{
			get
			{
				return this._TrnLastWithholdingTax.Entity;
			}
			set
			{
				TrnLastWithholdingTax previousValue = this._TrnLastWithholdingTax.Entity;
				if (((previousValue != value) 
							|| (this._TrnLastWithholdingTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnLastWithholdingTax.Entity = null;
						previousValue.TrnLastWithholdingTaxLines.Remove(this);
					}
					this._TrnLastWithholdingTax.Entity = value;
					if ((value != null))
					{
						value.TrnLastWithholdingTaxLines.Add(this);
						this._LastWithholdingTaxId = value.Id;
					}
					else
					{
						this._LastWithholdingTaxId = default(int);
					}
					this.SendPropertyChanged("TrnLastWithholdingTax");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLeaveApplication")]
	public partial class TrnLeaveApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _LANumber;
		
		private System.DateTime _LADate;
		
		private int _PayrollGroupId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private System.Nullable<int> _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnDTR> _TrnDTRs;
		
		private EntitySet<TrnLeaveApplicationLine> _TrnLeaveApplicationLines;
		
		private EntitySet<TrnLeaveLedger> _TrnLeaveLedgers;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstTaxCode> _MstTaxCode;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnLANumberChanging(string value);
    partial void OnLANumberChanged();
    partial void OnLADateChanging(System.DateTime value);
    partial void OnLADateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(System.Nullable<int> value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnLeaveApplication()
		{
			this._TrnDTRs = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs), new Action<TrnDTR>(this.detach_TrnDTRs));
			this._TrnLeaveApplicationLines = new EntitySet<TrnLeaveApplicationLine>(new Action<TrnLeaveApplicationLine>(this.attach_TrnLeaveApplicationLines), new Action<TrnLeaveApplicationLine>(this.detach_TrnLeaveApplicationLines));
			this._TrnLeaveLedgers = new EntitySet<TrnLeaveLedger>(new Action<TrnLeaveLedger>(this.attach_TrnLeaveLedgers), new Action<TrnLeaveLedger>(this.detach_TrnLeaveLedgers));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstTaxCode = default(EntityRef<MstTaxCode>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LANumber
		{
			get
			{
				return this._LANumber;
			}
			set
			{
				if ((this._LANumber != value))
				{
					this.OnLANumberChanging(value);
					this.SendPropertyChanging();
					this._LANumber = value;
					this.SendPropertyChanged("LANumber");
					this.OnLANumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LADate", DbType="DateTime NOT NULL")]
		public System.DateTime LADate
		{
			get
			{
				return this._LADate;
			}
			set
			{
				if ((this._LADate != value))
				{
					this.OnLADateChanging(value);
					this.SendPropertyChanging();
					this._LADate = value;
					this.SendPropertyChanged("LADate");
					this.OnLADateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstTaxCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int")]
		public System.Nullable<int> EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLeaveApplication_TrnDTR", Storage="_TrnDTRs", ThisKey="Id", OtherKey="LeaveApplicationId")]
		public EntitySet<TrnDTR> TrnDTRs
		{
			get
			{
				return this._TrnDTRs;
			}
			set
			{
				this._TrnDTRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLeaveApplication_TrnLeaveApplicationLine", Storage="_TrnLeaveApplicationLines", ThisKey="Id", OtherKey="LeaveApplicationId")]
		public EntitySet<TrnLeaveApplicationLine> TrnLeaveApplicationLines
		{
			get
			{
				return this._TrnLeaveApplicationLines;
			}
			set
			{
				this._TrnLeaveApplicationLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLeaveApplication_TrnLeaveLedger", Storage="_TrnLeaveLedgers", ThisKey="Id", OtherKey="LeaveApplicationId")]
		public EntitySet<TrnLeaveLedger> TrnLeaveLedgers
		{
			get
			{
				return this._TrnLeaveLedgers;
			}
			set
			{
				this._TrnLeaveLedgers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnLeaveApplication", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnLeaveApplications.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnLeaveApplication", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnLeaveApplications.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnLeaveApplications.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnLeaveApplications1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxCode_TrnLeaveApplication", Storage="_MstTaxCode", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstTaxCode MstTaxCode
		{
			get
			{
				return this._MstTaxCode.Entity;
			}
			set
			{
				MstTaxCode previousValue = this._MstTaxCode.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxCode.Entity = null;
						previousValue.TrnLeaveApplications.Remove(this);
					}
					this._MstTaxCode.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstTaxCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnLeaveApplications2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnLeaveApplication3", Storage="_MstUser3", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnLeaveApplications3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplications3.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.TrnLeaveApplication = this;
		}
		
		private void detach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.TrnLeaveApplication = null;
		}
		
		private void attach_TrnLeaveApplicationLines(TrnLeaveApplicationLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnLeaveApplication = this;
		}
		
		private void detach_TrnLeaveApplicationLines(TrnLeaveApplicationLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnLeaveApplication = null;
		}
		
		private void attach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.TrnLeaveApplication = this;
		}
		
		private void detach_TrnLeaveLedgers(TrnLeaveLedger entity)
		{
			this.SendPropertyChanging();
			entity.TrnLeaveApplication = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLeaveApplicationDraft")]
	public partial class TrnLeaveApplicationDraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DocRefNumber;
		
		private string _EmployeeIdNumber;
		
		private string _LeaveCode;
		
		private System.DateTime _Date;
		
		private decimal _NumberOfHours;
		
		private bool _WithPay;
		
		private bool _DebitToLedger;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDocRefNumberChanging(string value);
    partial void OnDocRefNumberChanged();
    partial void OnEmployeeIdNumberChanging(string value);
    partial void OnEmployeeIdNumberChanged();
    partial void OnLeaveCodeChanging(string value);
    partial void OnLeaveCodeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNumberOfHoursChanging(decimal value);
    partial void OnNumberOfHoursChanged();
    partial void OnWithPayChanging(bool value);
    partial void OnWithPayChanged();
    partial void OnDebitToLedgerChanging(bool value);
    partial void OnDebitToLedgerChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnLeaveApplicationDraft()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocRefNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocRefNumber
		{
			get
			{
				return this._DocRefNumber;
			}
			set
			{
				if ((this._DocRefNumber != value))
				{
					this.OnDocRefNumberChanging(value);
					this.SendPropertyChanging();
					this._DocRefNumber = value;
					this.SendPropertyChanged("DocRefNumber");
					this.OnDocRefNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIdNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployeeIdNumber
		{
			get
			{
				return this._EmployeeIdNumber;
			}
			set
			{
				if ((this._EmployeeIdNumber != value))
				{
					this.OnEmployeeIdNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIdNumber = value;
					this.SendPropertyChanged("EmployeeIdNumber");
					this.OnEmployeeIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LeaveCode
		{
			get
			{
				return this._LeaveCode;
			}
			set
			{
				if ((this._LeaveCode != value))
				{
					this.OnLeaveCodeChanging(value);
					this.SendPropertyChanging();
					this._LeaveCode = value;
					this.SendPropertyChanged("LeaveCode");
					this.OnLeaveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfHours
		{
			get
			{
				return this._NumberOfHours;
			}
			set
			{
				if ((this._NumberOfHours != value))
				{
					this.OnNumberOfHoursChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHours = value;
					this.SendPropertyChanged("NumberOfHours");
					this.OnNumberOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithPay", DbType="Bit NOT NULL")]
		public bool WithPay
		{
			get
			{
				return this._WithPay;
			}
			set
			{
				if ((this._WithPay != value))
				{
					this.OnWithPayChanging(value);
					this.SendPropertyChanging();
					this._WithPay = value;
					this.SendPropertyChanged("WithPay");
					this.OnWithPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitToLedger", DbType="Bit NOT NULL")]
		public bool DebitToLedger
		{
			get
			{
				return this._DebitToLedger;
			}
			set
			{
				if ((this._DebitToLedger != value))
				{
					this.OnDebitToLedgerChanging(value);
					this.SendPropertyChanging();
					this._DebitToLedger = value;
					this.SendPropertyChanged("DebitToLedger");
					this.OnDebitToLedgerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLeaveApplicationLine")]
	public partial class TrnLeaveApplicationLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LeaveApplicationId;
		
		private int _EmployeeId;
		
		private int _LeaveId;
		
		private System.DateTime _Date;
		
		private decimal _NumberOfHours;
		
		private bool _WithPay;
		
		private bool _DebitToLedger;
		
		private string _Remarks;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstLeave> _MstLeave;
		
		private EntityRef<TrnLeaveApplication> _TrnLeaveApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLeaveApplicationIdChanging(int value);
    partial void OnLeaveApplicationIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnLeaveIdChanging(int value);
    partial void OnLeaveIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNumberOfHoursChanging(decimal value);
    partial void OnNumberOfHoursChanged();
    partial void OnWithPayChanging(bool value);
    partial void OnWithPayChanged();
    partial void OnDebitToLedgerChanging(bool value);
    partial void OnDebitToLedgerChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnLeaveApplicationLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstLeave = default(EntityRef<MstLeave>);
			this._TrnLeaveApplication = default(EntityRef<TrnLeaveApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApplicationId", DbType="Int NOT NULL")]
		public int LeaveApplicationId
		{
			get
			{
				return this._LeaveApplicationId;
			}
			set
			{
				if ((this._LeaveApplicationId != value))
				{
					if (this._TrnLeaveApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveApplicationId = value;
					this.SendPropertyChanged("LeaveApplicationId");
					this.OnLeaveApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveId", DbType="Int NOT NULL")]
		public int LeaveId
		{
			get
			{
				return this._LeaveId;
			}
			set
			{
				if ((this._LeaveId != value))
				{
					if (this._MstLeave.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveId = value;
					this.SendPropertyChanged("LeaveId");
					this.OnLeaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfHours
		{
			get
			{
				return this._NumberOfHours;
			}
			set
			{
				if ((this._NumberOfHours != value))
				{
					this.OnNumberOfHoursChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHours = value;
					this.SendPropertyChanged("NumberOfHours");
					this.OnNumberOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithPay", DbType="Bit NOT NULL")]
		public bool WithPay
		{
			get
			{
				return this._WithPay;
			}
			set
			{
				if ((this._WithPay != value))
				{
					this.OnWithPayChanging(value);
					this.SendPropertyChanging();
					this._WithPay = value;
					this.SendPropertyChanged("WithPay");
					this.OnWithPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitToLedger", DbType="Bit NOT NULL")]
		public bool DebitToLedger
		{
			get
			{
				return this._DebitToLedger;
			}
			set
			{
				if ((this._DebitToLedger != value))
				{
					this.OnDebitToLedgerChanging(value);
					this.SendPropertyChanging();
					this._DebitToLedger = value;
					this.SendPropertyChanged("DebitToLedger");
					this.OnDebitToLedgerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnLeaveApplicationLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnLeaveApplicationLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplicationLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstLeave_TrnLeaveApplicationLine", Storage="_MstLeave", ThisKey="LeaveId", OtherKey="Id", IsForeignKey=true)]
		public MstLeave MstLeave
		{
			get
			{
				return this._MstLeave.Entity;
			}
			set
			{
				MstLeave previousValue = this._MstLeave.Entity;
				if (((previousValue != value) 
							|| (this._MstLeave.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstLeave.Entity = null;
						previousValue.TrnLeaveApplicationLines.Remove(this);
					}
					this._MstLeave.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplicationLines.Add(this);
						this._LeaveId = value.Id;
					}
					else
					{
						this._LeaveId = default(int);
					}
					this.SendPropertyChanged("MstLeave");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLeaveApplication_TrnLeaveApplicationLine", Storage="_TrnLeaveApplication", ThisKey="LeaveApplicationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnLeaveApplication TrnLeaveApplication
		{
			get
			{
				return this._TrnLeaveApplication.Entity;
			}
			set
			{
				TrnLeaveApplication previousValue = this._TrnLeaveApplication.Entity;
				if (((previousValue != value) 
							|| (this._TrnLeaveApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnLeaveApplication.Entity = null;
						previousValue.TrnLeaveApplicationLines.Remove(this);
					}
					this._TrnLeaveApplication.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveApplicationLines.Add(this);
						this._LeaveApplicationId = value.Id;
					}
					else
					{
						this._LeaveApplicationId = default(int);
					}
					this.SendPropertyChanged("TrnLeaveApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLeaveLedger")]
	public partial class TrnLeaveLedger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private int _EmployeeId;
		
		private System.DateTime _Date;
		
		private int _LeaveId;
		
		private string _LeaveType;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private int _LeaveApplicationId;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstLeave> _MstLeave;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<TrnLeaveApplication> _TrnLeaveApplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnLeaveIdChanging(int value);
    partial void OnLeaveIdChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnLeaveApplicationIdChanging(int value);
    partial void OnLeaveApplicationIdChanged();
    #endregion
		
		public TrnLeaveLedger()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstLeave = default(EntityRef<MstLeave>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._TrnLeaveApplication = default(EntityRef<TrnLeaveApplication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveId", DbType="Int NOT NULL")]
		public int LeaveId
		{
			get
			{
				return this._LeaveId;
			}
			set
			{
				if ((this._LeaveId != value))
				{
					if (this._MstLeave.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveId = value;
					this.SendPropertyChanged("LeaveId");
					this.OnLeaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Decimal(18,4) NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Decimal(18,4) NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApplicationId", DbType="Int NOT NULL")]
		public int LeaveApplicationId
		{
			get
			{
				return this._LeaveApplicationId;
			}
			set
			{
				if ((this._LeaveApplicationId != value))
				{
					if (this._TrnLeaveApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveApplicationId = value;
					this.SendPropertyChanged("LeaveApplicationId");
					this.OnLeaveApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnLeaveLedger", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnLeaveLedgers.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveLedgers.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstLeave_TrnLeaveLedger", Storage="_MstLeave", ThisKey="LeaveId", OtherKey="Id", IsForeignKey=true)]
		public MstLeave MstLeave
		{
			get
			{
				return this._MstLeave.Entity;
			}
			set
			{
				MstLeave previousValue = this._MstLeave.Entity;
				if (((previousValue != value) 
							|| (this._MstLeave.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstLeave.Entity = null;
						previousValue.TrnLeaveLedgers.Remove(this);
					}
					this._MstLeave.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveLedgers.Add(this);
						this._LeaveId = value.Id;
					}
					else
					{
						this._LeaveId = default(int);
					}
					this.SendPropertyChanged("MstLeave");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnLeaveLedger", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnLeaveLedgers.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveLedgers.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnLeaveApplication_TrnLeaveLedger", Storage="_TrnLeaveApplication", ThisKey="LeaveApplicationId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnLeaveApplication TrnLeaveApplication
		{
			get
			{
				return this._TrnLeaveApplication.Entity;
			}
			set
			{
				TrnLeaveApplication previousValue = this._TrnLeaveApplication.Entity;
				if (((previousValue != value) 
							|| (this._TrnLeaveApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnLeaveApplication.Entity = null;
						previousValue.TrnLeaveLedgers.Remove(this);
					}
					this._TrnLeaveApplication.Entity = value;
					if ((value != null))
					{
						value.TrnLeaveLedgers.Add(this);
						this._LeaveApplicationId = value.Id;
					}
					else
					{
						this._LeaveApplicationId = default(int);
					}
					this.SendPropertyChanged("TrnLeaveApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnLoanLedger")]
	public partial class TrnLoanLedger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private int _EmployeeId;
		
		private System.DateTime _Date;
		
		private int _EmployeeLoanId;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private System.Nullable<int> _PayrollOtherDeductionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnEmployeeLoanIdChanging(int value);
    partial void OnEmployeeLoanIdChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnPayrollOtherDeductionIdChanging(System.Nullable<int> value);
    partial void OnPayrollOtherDeductionIdChanged();
    #endregion
		
		public TrnLoanLedger()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLoanId", DbType="Int NOT NULL")]
		public int EmployeeLoanId
		{
			get
			{
				return this._EmployeeLoanId;
			}
			set
			{
				if ((this._EmployeeLoanId != value))
				{
					this.OnEmployeeLoanIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLoanId = value;
					this.SendPropertyChanged("EmployeeLoanId");
					this.OnEmployeeLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Decimal(18,5) NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Decimal(18,5) NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollOtherDeductionId", DbType="Int")]
		public System.Nullable<int> PayrollOtherDeductionId
		{
			get
			{
				return this._PayrollOtherDeductionId;
			}
			set
			{
				if ((this._PayrollOtherDeductionId != value))
				{
					this.OnPayrollOtherDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollOtherDeductionId = value;
					this.SendPropertyChanged("PayrollOtherDeductionId");
					this.OnPayrollOtherDeductionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnOverTime")]
	public partial class TrnOverTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _OTNumber;
		
		private System.DateTime _OTDate;
		
		private int _PayrollGroupId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnDTR> _TrnDTRs;
		
		private EntitySet<TrnOverTimeLine> _TrnOverTimeLines;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnOTNumberChanging(string value);
    partial void OnOTNumberChanged();
    partial void OnOTDateChanging(System.DateTime value);
    partial void OnOTDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnOverTime()
		{
			this._TrnDTRs = new EntitySet<TrnDTR>(new Action<TrnDTR>(this.attach_TrnDTRs), new Action<TrnDTR>(this.detach_TrnDTRs));
			this._TrnOverTimeLines = new EntitySet<TrnOverTimeLine>(new Action<TrnOverTimeLine>(this.attach_TrnOverTimeLines), new Action<TrnOverTimeLine>(this.detach_TrnOverTimeLines));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OTNumber
		{
			get
			{
				return this._OTNumber;
			}
			set
			{
				if ((this._OTNumber != value))
				{
					this.OnOTNumberChanging(value);
					this.SendPropertyChanging();
					this._OTNumber = value;
					this.SendPropertyChanged("OTNumber");
					this.OnOTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTDate", DbType="DateTime NOT NULL")]
		public System.DateTime OTDate
		{
			get
			{
				return this._OTDate;
			}
			set
			{
				if ((this._OTDate != value))
				{
					this.OnOTDateChanging(value);
					this.SendPropertyChanging();
					this._OTDate = value;
					this.SendPropertyChanged("OTDate");
					this.OnOTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnOverTime_TrnDTR", Storage="_TrnDTRs", ThisKey="Id", OtherKey="OvertTimeId")]
		public EntitySet<TrnDTR> TrnDTRs
		{
			get
			{
				return this._TrnDTRs;
			}
			set
			{
				this._TrnDTRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnOverTime_TrnOverTimeLine", Storage="_TrnOverTimeLines", ThisKey="Id", OtherKey="OverTimeId")]
		public EntitySet<TrnOverTimeLine> TrnOverTimeLines
		{
			get
			{
				return this._TrnOverTimeLines;
			}
			set
			{
				this._TrnOverTimeLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnOverTime", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnOverTimes.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnOverTime", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnOverTimes.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnOverTimes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnOverTimes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnOverTimes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnOverTimes3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnOverTime4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnOverTimes4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimes4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.TrnOverTime = this;
		}
		
		private void detach_TrnDTRs(TrnDTR entity)
		{
			this.SendPropertyChanging();
			entity.TrnOverTime = null;
		}
		
		private void attach_TrnOverTimeLines(TrnOverTimeLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnOverTime = this;
		}
		
		private void detach_TrnOverTimeLines(TrnOverTimeLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnOverTime = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnOverTimeDraft")]
	public partial class TrnOverTimeDraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DocRefNumber;
		
		private string _EmployeeIdNumber;
		
		private System.DateTime _Date;
		
		private decimal _OvertimeHours;
		
		private decimal _OvertimeNightHours;
		
		private decimal _OvertimeLimitHours;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDocRefNumberChanging(string value);
    partial void OnDocRefNumberChanged();
    partial void OnEmployeeIdNumberChanging(string value);
    partial void OnEmployeeIdNumberChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOvertimeHoursChanging(decimal value);
    partial void OnOvertimeHoursChanged();
    partial void OnOvertimeNightHoursChanging(decimal value);
    partial void OnOvertimeNightHoursChanged();
    partial void OnOvertimeLimitHoursChanging(decimal value);
    partial void OnOvertimeLimitHoursChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnOverTimeDraft()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocRefNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocRefNumber
		{
			get
			{
				return this._DocRefNumber;
			}
			set
			{
				if ((this._DocRefNumber != value))
				{
					this.OnDocRefNumberChanging(value);
					this.SendPropertyChanging();
					this._DocRefNumber = value;
					this.SendPropertyChanged("DocRefNumber");
					this.OnDocRefNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIdNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmployeeIdNumber
		{
			get
			{
				return this._EmployeeIdNumber;
			}
			set
			{
				if ((this._EmployeeIdNumber != value))
				{
					this.OnEmployeeIdNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIdNumber = value;
					this.SendPropertyChanged("EmployeeIdNumber");
					this.OnEmployeeIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeHours
		{
			get
			{
				return this._OvertimeHours;
			}
			set
			{
				if ((this._OvertimeHours != value))
				{
					this.OnOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeHours = value;
					this.SendPropertyChanged("OvertimeHours");
					this.OnOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeNightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeNightHours
		{
			get
			{
				return this._OvertimeNightHours;
			}
			set
			{
				if ((this._OvertimeNightHours != value))
				{
					this.OnOvertimeNightHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeNightHours = value;
					this.SendPropertyChanged("OvertimeNightHours");
					this.OnOvertimeNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeLimitHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeLimitHours
		{
			get
			{
				return this._OvertimeLimitHours;
			}
			set
			{
				if ((this._OvertimeLimitHours != value))
				{
					this.OnOvertimeLimitHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeLimitHours = value;
					this.SendPropertyChanged("OvertimeLimitHours");
					this.OnOvertimeLimitHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnOverTimeLine")]
	public partial class TrnOverTimeLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OverTimeId;
		
		private int _EmployeeId;
		
		private System.DateTime _Date;
		
		private decimal _OvertimeHours;
		
		private decimal _OvertimeNightHours;
		
		private decimal _OvertimeLimitHours;
		
		private string _Remarks;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<TrnOverTime> _TrnOverTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOverTimeIdChanging(int value);
    partial void OnOverTimeIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOvertimeHoursChanging(decimal value);
    partial void OnOvertimeHoursChanged();
    partial void OnOvertimeNightHoursChanging(decimal value);
    partial void OnOvertimeNightHoursChanged();
    partial void OnOvertimeLimitHoursChanging(decimal value);
    partial void OnOvertimeLimitHoursChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public TrnOverTimeLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._TrnOverTime = default(EntityRef<TrnOverTime>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverTimeId", DbType="Int NOT NULL")]
		public int OverTimeId
		{
			get
			{
				return this._OverTimeId;
			}
			set
			{
				if ((this._OverTimeId != value))
				{
					if (this._TrnOverTime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOverTimeIdChanging(value);
					this.SendPropertyChanging();
					this._OverTimeId = value;
					this.SendPropertyChanged("OverTimeId");
					this.OnOverTimeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeHours
		{
			get
			{
				return this._OvertimeHours;
			}
			set
			{
				if ((this._OvertimeHours != value))
				{
					this.OnOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeHours = value;
					this.SendPropertyChanged("OvertimeHours");
					this.OnOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeNightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeNightHours
		{
			get
			{
				return this._OvertimeNightHours;
			}
			set
			{
				if ((this._OvertimeNightHours != value))
				{
					this.OnOvertimeNightHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeNightHours = value;
					this.SendPropertyChanged("OvertimeNightHours");
					this.OnOvertimeNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeLimitHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal OvertimeLimitHours
		{
			get
			{
				return this._OvertimeLimitHours;
			}
			set
			{
				if ((this._OvertimeLimitHours != value))
				{
					this.OnOvertimeLimitHoursChanging(value);
					this.SendPropertyChanging();
					this._OvertimeLimitHours = value;
					this.SendPropertyChanged("OvertimeLimitHours");
					this.OnOvertimeLimitHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnOverTimeLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnOverTimeLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimeLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnOverTime_TrnOverTimeLine", Storage="_TrnOverTime", ThisKey="OverTimeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnOverTime TrnOverTime
		{
			get
			{
				return this._TrnOverTime.Entity;
			}
			set
			{
				TrnOverTime previousValue = this._TrnOverTime.Entity;
				if (((previousValue != value) 
							|| (this._TrnOverTime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnOverTime.Entity = null;
						previousValue.TrnOverTimeLines.Remove(this);
					}
					this._TrnOverTime.Entity = value;
					if ((value != null))
					{
						value.TrnOverTimeLines.Add(this);
						this._OverTimeId = value.Id;
					}
					else
					{
						this._OverTimeId = default(int);
					}
					this.SendPropertyChanged("TrnOverTime");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPayroll")]
	public partial class TrnPayroll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private int _MonthId;
		
		private string _PayrollNumber;
		
		private System.DateTime _PayrollDate;
		
		private int _PayrollGroupId;
		
		private System.Nullable<int> _DTRId;
		
		private System.Nullable<int> _PayrollOtherIncomeId;
		
		private System.Nullable<int> _PayrollOtherDeductionId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private System.Nullable<int> _LastWithholdingTaxId;
		
		private EntitySet<TrnPayrollLine> _TrnPayrollLines;
		
		private EntityRef<MstMonth> _MstMonth;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnDTR> _TrnDTR;
		
		private EntityRef<TrnPayrollOtherDeduction> _TrnPayrollOtherDeduction;
		
		private EntityRef<TrnPayrollOtherIncome> _TrnPayrollOtherIncome;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnMonthIdChanging(int value);
    partial void OnMonthIdChanged();
    partial void OnPayrollNumberChanging(string value);
    partial void OnPayrollNumberChanged();
    partial void OnPayrollDateChanging(System.DateTime value);
    partial void OnPayrollDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnDTRIdChanging(System.Nullable<int> value);
    partial void OnDTRIdChanged();
    partial void OnPayrollOtherIncomeIdChanging(System.Nullable<int> value);
    partial void OnPayrollOtherIncomeIdChanged();
    partial void OnPayrollOtherDeductionIdChanging(System.Nullable<int> value);
    partial void OnPayrollOtherDeductionIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnLastWithholdingTaxIdChanging(System.Nullable<int> value);
    partial void OnLastWithholdingTaxIdChanged();
    #endregion
		
		public TrnPayroll()
		{
			this._TrnPayrollLines = new EntitySet<TrnPayrollLine>(new Action<TrnPayrollLine>(this.attach_TrnPayrollLines), new Action<TrnPayrollLine>(this.detach_TrnPayrollLines));
			this._MstMonth = default(EntityRef<MstMonth>);
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnDTR = default(EntityRef<TrnDTR>);
			this._TrnPayrollOtherDeduction = default(EntityRef<TrnPayrollOtherDeduction>);
			this._TrnPayrollOtherIncome = default(EntityRef<TrnPayrollOtherIncome>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="Int NOT NULL")]
		public int MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					if (this._MstMonth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayrollNumber
		{
			get
			{
				return this._PayrollNumber;
			}
			set
			{
				if ((this._PayrollNumber != value))
				{
					this.OnPayrollNumberChanging(value);
					this.SendPropertyChanging();
					this._PayrollNumber = value;
					this.SendPropertyChanged("PayrollNumber");
					this.OnPayrollNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollDate", DbType="DateTime NOT NULL")]
		public System.DateTime PayrollDate
		{
			get
			{
				return this._PayrollDate;
			}
			set
			{
				if ((this._PayrollDate != value))
				{
					this.OnPayrollDateChanging(value);
					this.SendPropertyChanging();
					this._PayrollDate = value;
					this.SendPropertyChanged("PayrollDate");
					this.OnPayrollDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTRId", DbType="Int")]
		public System.Nullable<int> DTRId
		{
			get
			{
				return this._DTRId;
			}
			set
			{
				if ((this._DTRId != value))
				{
					if (this._TrnDTR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDTRIdChanging(value);
					this.SendPropertyChanging();
					this._DTRId = value;
					this.SendPropertyChanged("DTRId");
					this.OnDTRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollOtherIncomeId", DbType="Int")]
		public System.Nullable<int> PayrollOtherIncomeId
		{
			get
			{
				return this._PayrollOtherIncomeId;
			}
			set
			{
				if ((this._PayrollOtherIncomeId != value))
				{
					if (this._TrnPayrollOtherIncome.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollOtherIncomeIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollOtherIncomeId = value;
					this.SendPropertyChanged("PayrollOtherIncomeId");
					this.OnPayrollOtherIncomeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollOtherDeductionId", DbType="Int")]
		public System.Nullable<int> PayrollOtherDeductionId
		{
			get
			{
				return this._PayrollOtherDeductionId;
			}
			set
			{
				if ((this._PayrollOtherDeductionId != value))
				{
					if (this._TrnPayrollOtherDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollOtherDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollOtherDeductionId = value;
					this.SendPropertyChanged("PayrollOtherDeductionId");
					this.OnPayrollOtherDeductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWithholdingTaxId", DbType="Int")]
		public System.Nullable<int> LastWithholdingTaxId
		{
			get
			{
				return this._LastWithholdingTaxId;
			}
			set
			{
				if ((this._LastWithholdingTaxId != value))
				{
					this.OnLastWithholdingTaxIdChanging(value);
					this.SendPropertyChanging();
					this._LastWithholdingTaxId = value;
					this.SendPropertyChanged("LastWithholdingTaxId");
					this.OnLastWithholdingTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayroll_TrnPayrollLine", Storage="_TrnPayrollLines", ThisKey="Id", OtherKey="PayrollId")]
		public EntitySet<TrnPayrollLine> TrnPayrollLines
		{
			get
			{
				return this._TrnPayrollLines;
			}
			set
			{
				this._TrnPayrollLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstMonth_TrnPayroll", Storage="_MstMonth", ThisKey="MonthId", OtherKey="Id", IsForeignKey=true)]
		public MstMonth MstMonth
		{
			get
			{
				return this._MstMonth.Entity;
			}
			set
			{
				MstMonth previousValue = this._MstMonth.Entity;
				if (((previousValue != value) 
							|| (this._MstMonth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstMonth.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._MstMonth.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._MonthId = value.Id;
					}
					else
					{
						this._MonthId = default(int);
					}
					this.SendPropertyChanged("MstMonth");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnPayroll", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPayroll", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPayrolls1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPayrolls2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPayrolls3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayroll4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPayrolls4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDTR_TrnPayroll", Storage="_TrnDTR", ThisKey="DTRId", OtherKey="Id", IsForeignKey=true)]
		public TrnDTR TrnDTR
		{
			get
			{
				return this._TrnDTR.Entity;
			}
			set
			{
				TrnDTR previousValue = this._TrnDTR.Entity;
				if (((previousValue != value) 
							|| (this._TrnDTR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDTR.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._TrnDTR.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._DTRId = value.Id;
					}
					else
					{
						this._DTRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnDTR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherDeduction_TrnPayroll", Storage="_TrnPayrollOtherDeduction", ThisKey="PayrollOtherDeductionId", OtherKey="Id", IsForeignKey=true)]
		public TrnPayrollOtherDeduction TrnPayrollOtherDeduction
		{
			get
			{
				return this._TrnPayrollOtherDeduction.Entity;
			}
			set
			{
				TrnPayrollOtherDeduction previousValue = this._TrnPayrollOtherDeduction.Entity;
				if (((previousValue != value) 
							|| (this._TrnPayrollOtherDeduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPayrollOtherDeduction.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._TrnPayrollOtherDeduction.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._PayrollOtherDeductionId = value.Id;
					}
					else
					{
						this._PayrollOtherDeductionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnPayrollOtherDeduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherIncome_TrnPayroll", Storage="_TrnPayrollOtherIncome", ThisKey="PayrollOtherIncomeId", OtherKey="Id", IsForeignKey=true)]
		public TrnPayrollOtherIncome TrnPayrollOtherIncome
		{
			get
			{
				return this._TrnPayrollOtherIncome.Entity;
			}
			set
			{
				TrnPayrollOtherIncome previousValue = this._TrnPayrollOtherIncome.Entity;
				if (((previousValue != value) 
							|| (this._TrnPayrollOtherIncome.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPayrollOtherIncome.Entity = null;
						previousValue.TrnPayrolls.Remove(this);
					}
					this._TrnPayrollOtherIncome.Entity = value;
					if ((value != null))
					{
						value.TrnPayrolls.Add(this);
						this._PayrollOtherIncomeId = value.Id;
					}
					else
					{
						this._PayrollOtherIncomeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnPayrollOtherIncome");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrollLines(TrnPayrollLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayroll = this;
		}
		
		private void detach_TrnPayrollLines(TrnPayrollLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayroll = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPayrollLine")]
	public partial class TrnPayrollLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PayrollId;
		
		private int _EmployeeId;
		
		private int _PayrollTypeId;
		
		private int _TaxCodeId;
		
		private decimal _TotalRegularWorkingHours;
		
		private decimal _TotalLegalHolidayWorkingHours;
		
		private decimal _TotalSpecialHolidayWorkingHours;
		
		private decimal _TotalRegularRestdayHours;
		
		private decimal _TotalLegalHolidayRestdayHours;
		
		private decimal _TotalSpecialHolidayRestdayHours;
		
		private decimal _TotalRegularOvertimeHours;
		
		private decimal _TotalLegalHolidayOvertimeHours;
		
		private decimal _TotalSpecialHolidayOvertimeHours;
		
		private decimal _TotalRegularNightHours;
		
		private decimal _TotalLegalHolidayNightHours;
		
		private decimal _TotalSpecialHolidayNightHours;
		
		private decimal _TotalRegularNightOvertimeHours;
		
		private decimal _TotalLegalHolidayNightOvertimeHours;
		
		private decimal _TotalSpecialHolidayNighOvertimetHours;
		
		private decimal _TotalTardyLateHours;
		
		private decimal _TotalTardyUndertimeHours;
		
		private decimal _TotalRegularWorkingAmount;
		
		private decimal _TotalLegalHolidayWorkingAmount;
		
		private decimal _TotalSpecialHolidayWorkingAmount;
		
		private decimal _TotalRegularRestdayAmount;
		
		private decimal _TotalLegalHolidayRestdayAmount;
		
		private decimal _TotalSpecialHolidayRestdayAmount;
		
		private decimal _TotalRegularOvertimeAmount;
		
		private decimal _TotalLegalHolidayOvertimeAmount;
		
		private decimal _TotalSpecialHolidayOvertimeAmount;
		
		private decimal _TotalRegularNightAmount;
		
		private decimal _TotalLegalHolidayNightAmount;
		
		private decimal _TotalSpecialHolidayNightAmount;
		
		private decimal _TotalRegularNightOvertimeAmount;
		
		private decimal _TotalLegalHolidayNightOvertimeAmount;
		
		private decimal _TotalSpecialHolidayNightOvertimeAmount;
		
		private decimal _TotalSalaryAmount;
		
		private decimal _TotalTardyAmount;
		
		private decimal _TotalAbsentAmount;
		
		private decimal _TotalNetSalaryAmount;
		
		private decimal _TotalOtherIncomeTaxable;
		
		private decimal _GrossIncome;
		
		private decimal _TotalOtherIncomeNonTaxable;
		
		private decimal _GrossIncomeWithNonTaxable;
		
		private decimal _SSSContribution;
		
		private decimal _SSSECContribution;
		
		private decimal _PHICContribution;
		
		private decimal _HDMFContribution;
		
		private decimal _Tax;
		
		private decimal _TotalOtherDeduction;
		
		private decimal _NetIncome;
		
		private decimal _SSSContributionEmployer;
		
		private decimal _SSSECContributionEmployer;
		
		private decimal _PHICContributionEmployer;
		
		private decimal _HDMFContributionEmployer;
		
		private System.Nullable<int> _AccountId;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstPayrollType> _MstPayrollType;
		
		private EntityRef<TrnPayroll> _TrnPayroll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollIdChanging(int value);
    partial void OnPayrollIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnPayrollTypeIdChanging(int value);
    partial void OnPayrollTypeIdChanged();
    partial void OnTaxCodeIdChanging(int value);
    partial void OnTaxCodeIdChanged();
    partial void OnTotalRegularWorkingHoursChanging(decimal value);
    partial void OnTotalRegularWorkingHoursChanged();
    partial void OnTotalLegalHolidayWorkingHoursChanging(decimal value);
    partial void OnTotalLegalHolidayWorkingHoursChanged();
    partial void OnTotalSpecialHolidayWorkingHoursChanging(decimal value);
    partial void OnTotalSpecialHolidayWorkingHoursChanged();
    partial void OnTotalRegularRestdayHoursChanging(decimal value);
    partial void OnTotalRegularRestdayHoursChanged();
    partial void OnTotalLegalHolidayRestdayHoursChanging(decimal value);
    partial void OnTotalLegalHolidayRestdayHoursChanged();
    partial void OnTotalSpecialHolidayRestdayHoursChanging(decimal value);
    partial void OnTotalSpecialHolidayRestdayHoursChanged();
    partial void OnTotalRegularOvertimeHoursChanging(decimal value);
    partial void OnTotalRegularOvertimeHoursChanged();
    partial void OnTotalLegalHolidayOvertimeHoursChanging(decimal value);
    partial void OnTotalLegalHolidayOvertimeHoursChanged();
    partial void OnTotalSpecialHolidayOvertimeHoursChanging(decimal value);
    partial void OnTotalSpecialHolidayOvertimeHoursChanged();
    partial void OnTotalRegularNightHoursChanging(decimal value);
    partial void OnTotalRegularNightHoursChanged();
    partial void OnTotalLegalHolidayNightHoursChanging(decimal value);
    partial void OnTotalLegalHolidayNightHoursChanged();
    partial void OnTotalSpecialHolidayNightHoursChanging(decimal value);
    partial void OnTotalSpecialHolidayNightHoursChanged();
    partial void OnTotalRegularNightOvertimeHoursChanging(decimal value);
    partial void OnTotalRegularNightOvertimeHoursChanged();
    partial void OnTotalLegalHolidayNightOvertimeHoursChanging(decimal value);
    partial void OnTotalLegalHolidayNightOvertimeHoursChanged();
    partial void OnTotalSpecialHolidayNighOvertimetHoursChanging(decimal value);
    partial void OnTotalSpecialHolidayNighOvertimetHoursChanged();
    partial void OnTotalTardyLateHoursChanging(decimal value);
    partial void OnTotalTardyLateHoursChanged();
    partial void OnTotalTardyUndertimeHoursChanging(decimal value);
    partial void OnTotalTardyUndertimeHoursChanged();
    partial void OnTotalRegularWorkingAmountChanging(decimal value);
    partial void OnTotalRegularWorkingAmountChanged();
    partial void OnTotalLegalHolidayWorkingAmountChanging(decimal value);
    partial void OnTotalLegalHolidayWorkingAmountChanged();
    partial void OnTotalSpecialHolidayWorkingAmountChanging(decimal value);
    partial void OnTotalSpecialHolidayWorkingAmountChanged();
    partial void OnTotalRegularRestdayAmountChanging(decimal value);
    partial void OnTotalRegularRestdayAmountChanged();
    partial void OnTotalLegalHolidayRestdayAmountChanging(decimal value);
    partial void OnTotalLegalHolidayRestdayAmountChanged();
    partial void OnTotalSpecialHolidayRestdayAmountChanging(decimal value);
    partial void OnTotalSpecialHolidayRestdayAmountChanged();
    partial void OnTotalRegularOvertimeAmountChanging(decimal value);
    partial void OnTotalRegularOvertimeAmountChanged();
    partial void OnTotalLegalHolidayOvertimeAmountChanging(decimal value);
    partial void OnTotalLegalHolidayOvertimeAmountChanged();
    partial void OnTotalSpecialHolidayOvertimeAmountChanging(decimal value);
    partial void OnTotalSpecialHolidayOvertimeAmountChanged();
    partial void OnTotalRegularNightAmountChanging(decimal value);
    partial void OnTotalRegularNightAmountChanged();
    partial void OnTotalLegalHolidayNightAmountChanging(decimal value);
    partial void OnTotalLegalHolidayNightAmountChanged();
    partial void OnTotalSpecialHolidayNightAmountChanging(decimal value);
    partial void OnTotalSpecialHolidayNightAmountChanged();
    partial void OnTotalRegularNightOvertimeAmountChanging(decimal value);
    partial void OnTotalRegularNightOvertimeAmountChanged();
    partial void OnTotalLegalHolidayNightOvertimeAmountChanging(decimal value);
    partial void OnTotalLegalHolidayNightOvertimeAmountChanged();
    partial void OnTotalSpecialHolidayNightOvertimeAmountChanging(decimal value);
    partial void OnTotalSpecialHolidayNightOvertimeAmountChanged();
    partial void OnTotalSalaryAmountChanging(decimal value);
    partial void OnTotalSalaryAmountChanged();
    partial void OnTotalTardyAmountChanging(decimal value);
    partial void OnTotalTardyAmountChanged();
    partial void OnTotalAbsentAmountChanging(decimal value);
    partial void OnTotalAbsentAmountChanged();
    partial void OnTotalNetSalaryAmountChanging(decimal value);
    partial void OnTotalNetSalaryAmountChanged();
    partial void OnTotalOtherIncomeTaxableChanging(decimal value);
    partial void OnTotalOtherIncomeTaxableChanged();
    partial void OnGrossIncomeChanging(decimal value);
    partial void OnGrossIncomeChanged();
    partial void OnTotalOtherIncomeNonTaxableChanging(decimal value);
    partial void OnTotalOtherIncomeNonTaxableChanged();
    partial void OnGrossIncomeWithNonTaxableChanging(decimal value);
    partial void OnGrossIncomeWithNonTaxableChanged();
    partial void OnSSSContributionChanging(decimal value);
    partial void OnSSSContributionChanged();
    partial void OnSSSECContributionChanging(decimal value);
    partial void OnSSSECContributionChanged();
    partial void OnPHICContributionChanging(decimal value);
    partial void OnPHICContributionChanged();
    partial void OnHDMFContributionChanging(decimal value);
    partial void OnHDMFContributionChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnTotalOtherDeductionChanging(decimal value);
    partial void OnTotalOtherDeductionChanged();
    partial void OnNetIncomeChanging(decimal value);
    partial void OnNetIncomeChanged();
    partial void OnSSSContributionEmployerChanging(decimal value);
    partial void OnSSSContributionEmployerChanged();
    partial void OnSSSECContributionEmployerChanging(decimal value);
    partial void OnSSSECContributionEmployerChanged();
    partial void OnPHICContributionEmployerChanging(decimal value);
    partial void OnPHICContributionEmployerChanged();
    partial void OnHDMFContributionEmployerChanging(decimal value);
    partial void OnHDMFContributionEmployerChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    #endregion
		
		public TrnPayrollLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstPayrollType = default(EntityRef<MstPayrollType>);
			this._TrnPayroll = default(EntityRef<TrnPayroll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollId", DbType="Int NOT NULL")]
		public int PayrollId
		{
			get
			{
				return this._PayrollId;
			}
			set
			{
				if ((this._PayrollId != value))
				{
					if (this._TrnPayroll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollId = value;
					this.SendPropertyChanged("PayrollId");
					this.OnPayrollIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollTypeId", DbType="Int NOT NULL")]
		public int PayrollTypeId
		{
			get
			{
				return this._PayrollTypeId;
			}
			set
			{
				if ((this._PayrollTypeId != value))
				{
					if (this._MstPayrollType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollTypeId = value;
					this.SendPropertyChanged("PayrollTypeId");
					this.OnPayrollTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCodeId", DbType="Int NOT NULL")]
		public int TaxCodeId
		{
			get
			{
				return this._TaxCodeId;
			}
			set
			{
				if ((this._TaxCodeId != value))
				{
					this.OnTaxCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxCodeId = value;
					this.SendPropertyChanged("TaxCodeId");
					this.OnTaxCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularWorkingHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularWorkingHours
		{
			get
			{
				return this._TotalRegularWorkingHours;
			}
			set
			{
				if ((this._TotalRegularWorkingHours != value))
				{
					this.OnTotalRegularWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularWorkingHours = value;
					this.SendPropertyChanged("TotalRegularWorkingHours");
					this.OnTotalRegularWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayWorkingHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayWorkingHours
		{
			get
			{
				return this._TotalLegalHolidayWorkingHours;
			}
			set
			{
				if ((this._TotalLegalHolidayWorkingHours != value))
				{
					this.OnTotalLegalHolidayWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayWorkingHours = value;
					this.SendPropertyChanged("TotalLegalHolidayWorkingHours");
					this.OnTotalLegalHolidayWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayWorkingHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayWorkingHours
		{
			get
			{
				return this._TotalSpecialHolidayWorkingHours;
			}
			set
			{
				if ((this._TotalSpecialHolidayWorkingHours != value))
				{
					this.OnTotalSpecialHolidayWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayWorkingHours = value;
					this.SendPropertyChanged("TotalSpecialHolidayWorkingHours");
					this.OnTotalSpecialHolidayWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularRestdayHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularRestdayHours
		{
			get
			{
				return this._TotalRegularRestdayHours;
			}
			set
			{
				if ((this._TotalRegularRestdayHours != value))
				{
					this.OnTotalRegularRestdayHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularRestdayHours = value;
					this.SendPropertyChanged("TotalRegularRestdayHours");
					this.OnTotalRegularRestdayHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayRestdayHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayRestdayHours
		{
			get
			{
				return this._TotalLegalHolidayRestdayHours;
			}
			set
			{
				if ((this._TotalLegalHolidayRestdayHours != value))
				{
					this.OnTotalLegalHolidayRestdayHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayRestdayHours = value;
					this.SendPropertyChanged("TotalLegalHolidayRestdayHours");
					this.OnTotalLegalHolidayRestdayHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayRestdayHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayRestdayHours
		{
			get
			{
				return this._TotalSpecialHolidayRestdayHours;
			}
			set
			{
				if ((this._TotalSpecialHolidayRestdayHours != value))
				{
					this.OnTotalSpecialHolidayRestdayHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayRestdayHours = value;
					this.SendPropertyChanged("TotalSpecialHolidayRestdayHours");
					this.OnTotalSpecialHolidayRestdayHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularOvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularOvertimeHours
		{
			get
			{
				return this._TotalRegularOvertimeHours;
			}
			set
			{
				if ((this._TotalRegularOvertimeHours != value))
				{
					this.OnTotalRegularOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularOvertimeHours = value;
					this.SendPropertyChanged("TotalRegularOvertimeHours");
					this.OnTotalRegularOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayOvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayOvertimeHours
		{
			get
			{
				return this._TotalLegalHolidayOvertimeHours;
			}
			set
			{
				if ((this._TotalLegalHolidayOvertimeHours != value))
				{
					this.OnTotalLegalHolidayOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayOvertimeHours = value;
					this.SendPropertyChanged("TotalLegalHolidayOvertimeHours");
					this.OnTotalLegalHolidayOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayOvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayOvertimeHours
		{
			get
			{
				return this._TotalSpecialHolidayOvertimeHours;
			}
			set
			{
				if ((this._TotalSpecialHolidayOvertimeHours != value))
				{
					this.OnTotalSpecialHolidayOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayOvertimeHours = value;
					this.SendPropertyChanged("TotalSpecialHolidayOvertimeHours");
					this.OnTotalSpecialHolidayOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularNightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularNightHours
		{
			get
			{
				return this._TotalRegularNightHours;
			}
			set
			{
				if ((this._TotalRegularNightHours != value))
				{
					this.OnTotalRegularNightHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularNightHours = value;
					this.SendPropertyChanged("TotalRegularNightHours");
					this.OnTotalRegularNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayNightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayNightHours
		{
			get
			{
				return this._TotalLegalHolidayNightHours;
			}
			set
			{
				if ((this._TotalLegalHolidayNightHours != value))
				{
					this.OnTotalLegalHolidayNightHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayNightHours = value;
					this.SendPropertyChanged("TotalLegalHolidayNightHours");
					this.OnTotalLegalHolidayNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayNightHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayNightHours
		{
			get
			{
				return this._TotalSpecialHolidayNightHours;
			}
			set
			{
				if ((this._TotalSpecialHolidayNightHours != value))
				{
					this.OnTotalSpecialHolidayNightHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayNightHours = value;
					this.SendPropertyChanged("TotalSpecialHolidayNightHours");
					this.OnTotalSpecialHolidayNightHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularNightOvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularNightOvertimeHours
		{
			get
			{
				return this._TotalRegularNightOvertimeHours;
			}
			set
			{
				if ((this._TotalRegularNightOvertimeHours != value))
				{
					this.OnTotalRegularNightOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularNightOvertimeHours = value;
					this.SendPropertyChanged("TotalRegularNightOvertimeHours");
					this.OnTotalRegularNightOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayNightOvertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayNightOvertimeHours
		{
			get
			{
				return this._TotalLegalHolidayNightOvertimeHours;
			}
			set
			{
				if ((this._TotalLegalHolidayNightOvertimeHours != value))
				{
					this.OnTotalLegalHolidayNightOvertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayNightOvertimeHours = value;
					this.SendPropertyChanged("TotalLegalHolidayNightOvertimeHours");
					this.OnTotalLegalHolidayNightOvertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayNighOvertimetHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayNighOvertimetHours
		{
			get
			{
				return this._TotalSpecialHolidayNighOvertimetHours;
			}
			set
			{
				if ((this._TotalSpecialHolidayNighOvertimetHours != value))
				{
					this.OnTotalSpecialHolidayNighOvertimetHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayNighOvertimetHours = value;
					this.SendPropertyChanged("TotalSpecialHolidayNighOvertimetHours");
					this.OnTotalSpecialHolidayNighOvertimetHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTardyLateHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalTardyLateHours
		{
			get
			{
				return this._TotalTardyLateHours;
			}
			set
			{
				if ((this._TotalTardyLateHours != value))
				{
					this.OnTotalTardyLateHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalTardyLateHours = value;
					this.SendPropertyChanged("TotalTardyLateHours");
					this.OnTotalTardyLateHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTardyUndertimeHours", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalTardyUndertimeHours
		{
			get
			{
				return this._TotalTardyUndertimeHours;
			}
			set
			{
				if ((this._TotalTardyUndertimeHours != value))
				{
					this.OnTotalTardyUndertimeHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalTardyUndertimeHours = value;
					this.SendPropertyChanged("TotalTardyUndertimeHours");
					this.OnTotalTardyUndertimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularWorkingAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularWorkingAmount
		{
			get
			{
				return this._TotalRegularWorkingAmount;
			}
			set
			{
				if ((this._TotalRegularWorkingAmount != value))
				{
					this.OnTotalRegularWorkingAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularWorkingAmount = value;
					this.SendPropertyChanged("TotalRegularWorkingAmount");
					this.OnTotalRegularWorkingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayWorkingAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayWorkingAmount
		{
			get
			{
				return this._TotalLegalHolidayWorkingAmount;
			}
			set
			{
				if ((this._TotalLegalHolidayWorkingAmount != value))
				{
					this.OnTotalLegalHolidayWorkingAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayWorkingAmount = value;
					this.SendPropertyChanged("TotalLegalHolidayWorkingAmount");
					this.OnTotalLegalHolidayWorkingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayWorkingAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayWorkingAmount
		{
			get
			{
				return this._TotalSpecialHolidayWorkingAmount;
			}
			set
			{
				if ((this._TotalSpecialHolidayWorkingAmount != value))
				{
					this.OnTotalSpecialHolidayWorkingAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayWorkingAmount = value;
					this.SendPropertyChanged("TotalSpecialHolidayWorkingAmount");
					this.OnTotalSpecialHolidayWorkingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularRestdayAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularRestdayAmount
		{
			get
			{
				return this._TotalRegularRestdayAmount;
			}
			set
			{
				if ((this._TotalRegularRestdayAmount != value))
				{
					this.OnTotalRegularRestdayAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularRestdayAmount = value;
					this.SendPropertyChanged("TotalRegularRestdayAmount");
					this.OnTotalRegularRestdayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayRestdayAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayRestdayAmount
		{
			get
			{
				return this._TotalLegalHolidayRestdayAmount;
			}
			set
			{
				if ((this._TotalLegalHolidayRestdayAmount != value))
				{
					this.OnTotalLegalHolidayRestdayAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayRestdayAmount = value;
					this.SendPropertyChanged("TotalLegalHolidayRestdayAmount");
					this.OnTotalLegalHolidayRestdayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayRestdayAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayRestdayAmount
		{
			get
			{
				return this._TotalSpecialHolidayRestdayAmount;
			}
			set
			{
				if ((this._TotalSpecialHolidayRestdayAmount != value))
				{
					this.OnTotalSpecialHolidayRestdayAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayRestdayAmount = value;
					this.SendPropertyChanged("TotalSpecialHolidayRestdayAmount");
					this.OnTotalSpecialHolidayRestdayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularOvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularOvertimeAmount
		{
			get
			{
				return this._TotalRegularOvertimeAmount;
			}
			set
			{
				if ((this._TotalRegularOvertimeAmount != value))
				{
					this.OnTotalRegularOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularOvertimeAmount = value;
					this.SendPropertyChanged("TotalRegularOvertimeAmount");
					this.OnTotalRegularOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayOvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayOvertimeAmount
		{
			get
			{
				return this._TotalLegalHolidayOvertimeAmount;
			}
			set
			{
				if ((this._TotalLegalHolidayOvertimeAmount != value))
				{
					this.OnTotalLegalHolidayOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayOvertimeAmount = value;
					this.SendPropertyChanged("TotalLegalHolidayOvertimeAmount");
					this.OnTotalLegalHolidayOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayOvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayOvertimeAmount
		{
			get
			{
				return this._TotalSpecialHolidayOvertimeAmount;
			}
			set
			{
				if ((this._TotalSpecialHolidayOvertimeAmount != value))
				{
					this.OnTotalSpecialHolidayOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayOvertimeAmount = value;
					this.SendPropertyChanged("TotalSpecialHolidayOvertimeAmount");
					this.OnTotalSpecialHolidayOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularNightAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularNightAmount
		{
			get
			{
				return this._TotalRegularNightAmount;
			}
			set
			{
				if ((this._TotalRegularNightAmount != value))
				{
					this.OnTotalRegularNightAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularNightAmount = value;
					this.SendPropertyChanged("TotalRegularNightAmount");
					this.OnTotalRegularNightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayNightAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayNightAmount
		{
			get
			{
				return this._TotalLegalHolidayNightAmount;
			}
			set
			{
				if ((this._TotalLegalHolidayNightAmount != value))
				{
					this.OnTotalLegalHolidayNightAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayNightAmount = value;
					this.SendPropertyChanged("TotalLegalHolidayNightAmount");
					this.OnTotalLegalHolidayNightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayNightAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayNightAmount
		{
			get
			{
				return this._TotalSpecialHolidayNightAmount;
			}
			set
			{
				if ((this._TotalSpecialHolidayNightAmount != value))
				{
					this.OnTotalSpecialHolidayNightAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayNightAmount = value;
					this.SendPropertyChanged("TotalSpecialHolidayNightAmount");
					this.OnTotalSpecialHolidayNightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRegularNightOvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalRegularNightOvertimeAmount
		{
			get
			{
				return this._TotalRegularNightOvertimeAmount;
			}
			set
			{
				if ((this._TotalRegularNightOvertimeAmount != value))
				{
					this.OnTotalRegularNightOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalRegularNightOvertimeAmount = value;
					this.SendPropertyChanged("TotalRegularNightOvertimeAmount");
					this.OnTotalRegularNightOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLegalHolidayNightOvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalLegalHolidayNightOvertimeAmount
		{
			get
			{
				return this._TotalLegalHolidayNightOvertimeAmount;
			}
			set
			{
				if ((this._TotalLegalHolidayNightOvertimeAmount != value))
				{
					this.OnTotalLegalHolidayNightOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalLegalHolidayNightOvertimeAmount = value;
					this.SendPropertyChanged("TotalLegalHolidayNightOvertimeAmount");
					this.OnTotalLegalHolidayNightOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpecialHolidayNightOvertimeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSpecialHolidayNightOvertimeAmount
		{
			get
			{
				return this._TotalSpecialHolidayNightOvertimeAmount;
			}
			set
			{
				if ((this._TotalSpecialHolidayNightOvertimeAmount != value))
				{
					this.OnTotalSpecialHolidayNightOvertimeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSpecialHolidayNightOvertimeAmount = value;
					this.SendPropertyChanged("TotalSpecialHolidayNightOvertimeAmount");
					this.OnTotalSpecialHolidayNightOvertimeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSalaryAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalSalaryAmount
		{
			get
			{
				return this._TotalSalaryAmount;
			}
			set
			{
				if ((this._TotalSalaryAmount != value))
				{
					this.OnTotalSalaryAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalSalaryAmount = value;
					this.SendPropertyChanged("TotalSalaryAmount");
					this.OnTotalSalaryAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTardyAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalTardyAmount
		{
			get
			{
				return this._TotalTardyAmount;
			}
			set
			{
				if ((this._TotalTardyAmount != value))
				{
					this.OnTotalTardyAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalTardyAmount = value;
					this.SendPropertyChanged("TotalTardyAmount");
					this.OnTotalTardyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAbsentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalAbsentAmount
		{
			get
			{
				return this._TotalAbsentAmount;
			}
			set
			{
				if ((this._TotalAbsentAmount != value))
				{
					this.OnTotalAbsentAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAbsentAmount = value;
					this.SendPropertyChanged("TotalAbsentAmount");
					this.OnTotalAbsentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNetSalaryAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalNetSalaryAmount
		{
			get
			{
				return this._TotalNetSalaryAmount;
			}
			set
			{
				if ((this._TotalNetSalaryAmount != value))
				{
					this.OnTotalNetSalaryAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalNetSalaryAmount = value;
					this.SendPropertyChanged("TotalNetSalaryAmount");
					this.OnTotalNetSalaryAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOtherIncomeTaxable", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalOtherIncomeTaxable
		{
			get
			{
				return this._TotalOtherIncomeTaxable;
			}
			set
			{
				if ((this._TotalOtherIncomeTaxable != value))
				{
					this.OnTotalOtherIncomeTaxableChanging(value);
					this.SendPropertyChanging();
					this._TotalOtherIncomeTaxable = value;
					this.SendPropertyChanged("TotalOtherIncomeTaxable");
					this.OnTotalOtherIncomeTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossIncome", DbType="Decimal(18,5) NOT NULL")]
		public decimal GrossIncome
		{
			get
			{
				return this._GrossIncome;
			}
			set
			{
				if ((this._GrossIncome != value))
				{
					this.OnGrossIncomeChanging(value);
					this.SendPropertyChanging();
					this._GrossIncome = value;
					this.SendPropertyChanged("GrossIncome");
					this.OnGrossIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOtherIncomeNonTaxable", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalOtherIncomeNonTaxable
		{
			get
			{
				return this._TotalOtherIncomeNonTaxable;
			}
			set
			{
				if ((this._TotalOtherIncomeNonTaxable != value))
				{
					this.OnTotalOtherIncomeNonTaxableChanging(value);
					this.SendPropertyChanging();
					this._TotalOtherIncomeNonTaxable = value;
					this.SendPropertyChanged("TotalOtherIncomeNonTaxable");
					this.OnTotalOtherIncomeNonTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossIncomeWithNonTaxable", DbType="Decimal(18,5) NOT NULL")]
		public decimal GrossIncomeWithNonTaxable
		{
			get
			{
				return this._GrossIncomeWithNonTaxable;
			}
			set
			{
				if ((this._GrossIncomeWithNonTaxable != value))
				{
					this.OnGrossIncomeWithNonTaxableChanging(value);
					this.SendPropertyChanging();
					this._GrossIncomeWithNonTaxable = value;
					this.SendPropertyChanged("GrossIncomeWithNonTaxable");
					this.OnGrossIncomeWithNonTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal SSSContribution
		{
			get
			{
				return this._SSSContribution;
			}
			set
			{
				if ((this._SSSContribution != value))
				{
					this.OnSSSContributionChanging(value);
					this.SendPropertyChanging();
					this._SSSContribution = value;
					this.SendPropertyChanged("SSSContribution");
					this.OnSSSContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSECContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal SSSECContribution
		{
			get
			{
				return this._SSSECContribution;
			}
			set
			{
				if ((this._SSSECContribution != value))
				{
					this.OnSSSECContributionChanging(value);
					this.SendPropertyChanging();
					this._SSSECContribution = value;
					this.SendPropertyChanged("SSSECContribution");
					this.OnSSSECContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHICContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal PHICContribution
		{
			get
			{
				return this._PHICContribution;
			}
			set
			{
				if ((this._PHICContribution != value))
				{
					this.OnPHICContributionChanging(value);
					this.SendPropertyChanging();
					this._PHICContribution = value;
					this.SendPropertyChanged("PHICContribution");
					this.OnPHICContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFContribution", DbType="Decimal(18,5) NOT NULL")]
		public decimal HDMFContribution
		{
			get
			{
				return this._HDMFContribution;
			}
			set
			{
				if ((this._HDMFContribution != value))
				{
					this.OnHDMFContributionChanging(value);
					this.SendPropertyChanging();
					this._HDMFContribution = value;
					this.SendPropertyChanged("HDMFContribution");
					this.OnHDMFContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,5) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOtherDeduction", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalOtherDeduction
		{
			get
			{
				return this._TotalOtherDeduction;
			}
			set
			{
				if ((this._TotalOtherDeduction != value))
				{
					this.OnTotalOtherDeductionChanging(value);
					this.SendPropertyChanging();
					this._TotalOtherDeduction = value;
					this.SendPropertyChanged("TotalOtherDeduction");
					this.OnTotalOtherDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetIncome", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetIncome
		{
			get
			{
				return this._NetIncome;
			}
			set
			{
				if ((this._NetIncome != value))
				{
					this.OnNetIncomeChanging(value);
					this.SendPropertyChanging();
					this._NetIncome = value;
					this.SendPropertyChanged("NetIncome");
					this.OnNetIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSContributionEmployer", DbType="Decimal(18,5) NOT NULL")]
		public decimal SSSContributionEmployer
		{
			get
			{
				return this._SSSContributionEmployer;
			}
			set
			{
				if ((this._SSSContributionEmployer != value))
				{
					this.OnSSSContributionEmployerChanging(value);
					this.SendPropertyChanging();
					this._SSSContributionEmployer = value;
					this.SendPropertyChanged("SSSContributionEmployer");
					this.OnSSSContributionEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSSECContributionEmployer", DbType="Decimal(18,5) NOT NULL")]
		public decimal SSSECContributionEmployer
		{
			get
			{
				return this._SSSECContributionEmployer;
			}
			set
			{
				if ((this._SSSECContributionEmployer != value))
				{
					this.OnSSSECContributionEmployerChanging(value);
					this.SendPropertyChanging();
					this._SSSECContributionEmployer = value;
					this.SendPropertyChanged("SSSECContributionEmployer");
					this.OnSSSECContributionEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHICContributionEmployer", DbType="Decimal(18,5) NOT NULL")]
		public decimal PHICContributionEmployer
		{
			get
			{
				return this._PHICContributionEmployer;
			}
			set
			{
				if ((this._PHICContributionEmployer != value))
				{
					this.OnPHICContributionEmployerChanging(value);
					this.SendPropertyChanging();
					this._PHICContributionEmployer = value;
					this.SendPropertyChanged("PHICContributionEmployer");
					this.OnPHICContributionEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMFContributionEmployer", DbType="Decimal(18,5) NOT NULL")]
		public decimal HDMFContributionEmployer
		{
			get
			{
				return this._HDMFContributionEmployer;
			}
			set
			{
				if ((this._HDMFContributionEmployer != value))
				{
					this.OnHDMFContributionEmployerChanging(value);
					this.SendPropertyChanging();
					this._HDMFContributionEmployer = value;
					this.SendPropertyChanged("HDMFContributionEmployer");
					this.OnHDMFContributionEmployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnPayrollLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnPayrollLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollType_TrnPayrollLine", Storage="_MstPayrollType", ThisKey="PayrollTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollType MstPayrollType
		{
			get
			{
				return this._MstPayrollType.Entity;
			}
			set
			{
				MstPayrollType previousValue = this._MstPayrollType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollType.Entity = null;
						previousValue.TrnPayrollLines.Remove(this);
					}
					this._MstPayrollType.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollLines.Add(this);
						this._PayrollTypeId = value.Id;
					}
					else
					{
						this._PayrollTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayrollType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayroll_TrnPayrollLine", Storage="_TrnPayroll", ThisKey="PayrollId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPayroll TrnPayroll
		{
			get
			{
				return this._TrnPayroll.Entity;
			}
			set
			{
				TrnPayroll previousValue = this._TrnPayroll.Entity;
				if (((previousValue != value) 
							|| (this._TrnPayroll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPayroll.Entity = null;
						previousValue.TrnPayrollLines.Remove(this);
					}
					this._TrnPayroll.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollLines.Add(this);
						this._PayrollId = value.Id;
					}
					else
					{
						this._PayrollId = default(int);
					}
					this.SendPropertyChanged("TrnPayroll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPayrollOtherDeduction")]
	public partial class TrnPayrollOtherDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _PODNumber;
		
		private System.DateTime _PODDate;
		
		private int _PayrollGroupId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
		private EntitySet<TrnPayrollOtherDeductionLine> _TrnPayrollOtherDeductionLines;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnPODNumberChanging(string value);
    partial void OnPODNumberChanged();
    partial void OnPODDateChanging(System.DateTime value);
    partial void OnPODDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnPayrollOtherDeduction()
		{
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			this._TrnPayrollOtherDeductionLines = new EntitySet<TrnPayrollOtherDeductionLine>(new Action<TrnPayrollOtherDeductionLine>(this.attach_TrnPayrollOtherDeductionLines), new Action<TrnPayrollOtherDeductionLine>(this.detach_TrnPayrollOtherDeductionLines));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PODNumber
		{
			get
			{
				return this._PODNumber;
			}
			set
			{
				if ((this._PODNumber != value))
				{
					this.OnPODNumberChanging(value);
					this.SendPropertyChanging();
					this._PODNumber = value;
					this.SendPropertyChanged("PODNumber");
					this.OnPODNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODDate", DbType="DateTime NOT NULL")]
		public System.DateTime PODDate
		{
			get
			{
				return this._PODDate;
			}
			set
			{
				if ((this._PODDate != value))
				{
					this.OnPODDateChanging(value);
					this.SendPropertyChanging();
					this._PODDate = value;
					this.SendPropertyChanged("PODDate");
					this.OnPODDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherDeduction_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="PayrollOtherDeductionId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherDeduction_TrnPayrollOtherDeductionLine", Storage="_TrnPayrollOtherDeductionLines", ThisKey="Id", OtherKey="PayrollOtherDeductionId")]
		public EntitySet<TrnPayrollOtherDeductionLine> TrnPayrollOtherDeductionLines
		{
			get
			{
				return this._TrnPayrollOtherDeductionLines;
			}
			set
			{
				this._TrnPayrollOtherDeductionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnPayrollOtherDeduction", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnPayrollOtherDeductions.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPayrollOtherDeduction", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnPayrollOtherDeductions.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPayrollOtherDeductions.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPayrollOtherDeductions1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPayrollOtherDeductions2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPayrollOtherDeductions3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherDeduction4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPayrollOtherDeductions4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductions4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherDeduction = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherDeduction = null;
		}
		
		private void attach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherDeduction = this;
		}
		
		private void detach_TrnPayrollOtherDeductionLines(TrnPayrollOtherDeductionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherDeduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPayrollOtherDeductionLine")]
	public partial class TrnPayrollOtherDeductionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PayrollOtherDeductionId;
		
		private int _EmployeeId;
		
		private int _OtherDeductionId;
		
		private System.Nullable<int> _EmployeeLoanId;
		
		private decimal _Amount;
		
		private EntityRef<MstEmployee> _MstEmployee;
		
		private EntityRef<MstEmployeeLoan> _MstEmployeeLoan;
		
		private EntityRef<MstOtherDeduction> _MstOtherDeduction;
		
		private EntityRef<TrnPayrollOtherDeduction> _TrnPayrollOtherDeduction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrollOtherDeductionIdChanging(int value);
    partial void OnPayrollOtherDeductionIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnOtherDeductionIdChanging(int value);
    partial void OnOtherDeductionIdChanged();
    partial void OnEmployeeLoanIdChanging(System.Nullable<int> value);
    partial void OnEmployeeLoanIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnPayrollOtherDeductionLine()
		{
			this._MstEmployee = default(EntityRef<MstEmployee>);
			this._MstEmployeeLoan = default(EntityRef<MstEmployeeLoan>);
			this._MstOtherDeduction = default(EntityRef<MstOtherDeduction>);
			this._TrnPayrollOtherDeduction = default(EntityRef<TrnPayrollOtherDeduction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollOtherDeductionId", DbType="Int NOT NULL")]
		public int PayrollOtherDeductionId
		{
			get
			{
				return this._PayrollOtherDeductionId;
			}
			set
			{
				if ((this._PayrollOtherDeductionId != value))
				{
					if (this._TrnPayrollOtherDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollOtherDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollOtherDeductionId = value;
					this.SendPropertyChanged("PayrollOtherDeductionId");
					this.OnPayrollOtherDeductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._MstEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDeductionId", DbType="Int NOT NULL")]
		public int OtherDeductionId
		{
			get
			{
				return this._OtherDeductionId;
			}
			set
			{
				if ((this._OtherDeductionId != value))
				{
					if (this._MstOtherDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherDeductionIdChanging(value);
					this.SendPropertyChanging();
					this._OtherDeductionId = value;
					this.SendPropertyChanged("OtherDeductionId");
					this.OnOtherDeductionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeLoanId", DbType="Int")]
		public System.Nullable<int> EmployeeLoanId
		{
			get
			{
				return this._EmployeeLoanId;
			}
			set
			{
				if ((this._EmployeeLoanId != value))
				{
					if (this._MstEmployeeLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeLoanIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeLoanId = value;
					this.SendPropertyChanged("EmployeeLoanId");
					this.OnEmployeeLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployee_TrnPayrollOtherDeductionLine", Storage="_MstEmployee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployee MstEmployee
		{
			get
			{
				return this._MstEmployee.Entity;
			}
			set
			{
				MstEmployee previousValue = this._MstEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployee.Entity = null;
						previousValue.TrnPayrollOtherDeductionLines.Remove(this);
					}
					this._MstEmployee.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductionLines.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("MstEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstEmployeeLoan_TrnPayrollOtherDeductionLine", Storage="_MstEmployeeLoan", ThisKey="EmployeeLoanId", OtherKey="Id", IsForeignKey=true)]
		public MstEmployeeLoan MstEmployeeLoan
		{
			get
			{
				return this._MstEmployeeLoan.Entity;
			}
			set
			{
				MstEmployeeLoan previousValue = this._MstEmployeeLoan.Entity;
				if (((previousValue != value) 
							|| (this._MstEmployeeLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstEmployeeLoan.Entity = null;
						previousValue.TrnPayrollOtherDeductionLines.Remove(this);
					}
					this._MstEmployeeLoan.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductionLines.Add(this);
						this._EmployeeLoanId = value.Id;
					}
					else
					{
						this._EmployeeLoanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstEmployeeLoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstOtherDeduction_TrnPayrollOtherDeductionLine", Storage="_MstOtherDeduction", ThisKey="OtherDeductionId", OtherKey="Id", IsForeignKey=true)]
		public MstOtherDeduction MstOtherDeduction
		{
			get
			{
				return this._MstOtherDeduction.Entity;
			}
			set
			{
				MstOtherDeduction previousValue = this._MstOtherDeduction.Entity;
				if (((previousValue != value) 
							|| (this._MstOtherDeduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstOtherDeduction.Entity = null;
						previousValue.TrnPayrollOtherDeductionLines.Remove(this);
					}
					this._MstOtherDeduction.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductionLines.Add(this);
						this._OtherDeductionId = value.Id;
					}
					else
					{
						this._OtherDeductionId = default(int);
					}
					this.SendPropertyChanged("MstOtherDeduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherDeduction_TrnPayrollOtherDeductionLine", Storage="_TrnPayrollOtherDeduction", ThisKey="PayrollOtherDeductionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPayrollOtherDeduction TrnPayrollOtherDeduction
		{
			get
			{
				return this._TrnPayrollOtherDeduction.Entity;
			}
			set
			{
				TrnPayrollOtherDeduction previousValue = this._TrnPayrollOtherDeduction.Entity;
				if (((previousValue != value) 
							|| (this._TrnPayrollOtherDeduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPayrollOtherDeduction.Entity = null;
						previousValue.TrnPayrollOtherDeductionLines.Remove(this);
					}
					this._TrnPayrollOtherDeduction.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherDeductionLines.Add(this);
						this._PayrollOtherDeductionId = value.Id;
					}
					else
					{
						this._PayrollOtherDeductionId = default(int);
					}
					this.SendPropertyChanged("TrnPayrollOtherDeduction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPayrollOtherIncome")]
	public partial class TrnPayrollOtherIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _POINumber;
		
		private System.DateTime _POIDate;
		
		private int _PayrollGroupId;
		
		private string _Remarks;
		
		private System.Nullable<int> _PreparedBy;
		
		private System.Nullable<int> _CheckedBy;
		
		private System.Nullable<int> _ApprovedBy;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnPayrollOtherIncomeLine> _TrnPayrollOtherIncomeLines;
		
		private EntitySet<TrnPayroll> _TrnPayrolls;
		
		private EntityRef<MstPayrollGroup> _MstPayrollGroup;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnPOINumberChanging(string value);
    partial void OnPOINumberChanged();
    partial void OnPOIDateChanging(System.DateTime value);
    partial void OnPOIDateChanged();
    partial void OnPayrollGroupIdChanging(int value);
    partial void OnPayrollGroupIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(System.Nullable<int> value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(System.Nullable<int> value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnPayrollOtherIncome()
		{
			this._TrnPayrollOtherIncomeLines = new EntitySet<TrnPayrollOtherIncomeLine>(new Action<TrnPayrollOtherIncomeLine>(this.attach_TrnPayrollOtherIncomeLines), new Action<TrnPayrollOtherIncomeLine>(this.detach_TrnPayrollOtherIncomeLines));
			this._TrnPayrolls = new EntitySet<TrnPayroll>(new Action<TrnPayroll>(this.attach_TrnPayrolls), new Action<TrnPayroll>(this.detach_TrnPayrolls));
			this._MstPayrollGroup = default(EntityRef<MstPayrollGroup>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string POINumber
		{
			get
			{
				return this._POINumber;
			}
			set
			{
				if ((this._POINumber != value))
				{
					this.OnPOINumberChanging(value);
					this.SendPropertyChanging();
					this._POINumber = value;
					this.SendPropertyChanged("POINumber");
					this.OnPOINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POIDate", DbType="DateTime NOT NULL")]
		public System.DateTime POIDate
		{
			get
			{
				return this._POIDate;
			}
			set
			{
				if ((this._POIDate != value))
				{
					this.OnPOIDateChanging(value);
					this.SendPropertyChanging();
					this._POIDate = value;
					this.SendPropertyChanged("POIDate");
					this.OnPOIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollGroupId", DbType="Int NOT NULL")]
		public int PayrollGroupId
		{
			get
			{
				return this._PayrollGroupId;
			}
			set
			{
				if ((this._PayrollGroupId != value))
				{
					if (this._MstPayrollGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayrollGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PayrollGroupId = value;
					this.SendPropertyChanged("PayrollGroupId");
					this.OnPayrollGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int")]
		public System.Nullable<int> PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int")]
		public System.Nullable<int> CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherIncome_TrnPayrollOtherIncomeLine", Storage="_TrnPayrollOtherIncomeLines", ThisKey="Id", OtherKey="PayrollOtherIncomeId")]
		public EntitySet<TrnPayrollOtherIncomeLine> TrnPayrollOtherIncomeLines
		{
			get
			{
				return this._TrnPayrollOtherIncomeLines;
			}
			set
			{
				this._TrnPayrollOtherIncomeLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPayrollOtherIncome_TrnPayroll", Storage="_TrnPayrolls", ThisKey="Id", OtherKey="PayrollOtherIncomeId")]
		public EntitySet<TrnPayroll> TrnPayrolls
		{
			get
			{
				return this._TrnPayrolls;
			}
			set
			{
				this._TrnPayrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayrollGroup_TrnPayrollOtherIncome", Storage="_MstPayrollGroup", ThisKey="PayrollGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstPayrollGroup MstPayrollGroup
		{
			get
			{
				return this._MstPayrollGroup.Entity;
			}
			set
			{
				MstPayrollGroup previousValue = this._MstPayrollGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstPayrollGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayrollGroup.Entity = null;
						previousValue.TrnPayrollOtherIncomes.Remove(this);
					}
					this._MstPayrollGroup.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes.Add(this);
						this._PayrollGroupId = value.Id;
					}
					else
					{
						this._PayrollGroupId = default(int);
					}
					this.SendPropertyChanged("MstPayrollGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPayrollOtherIncome", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnPayrollOtherIncomes.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPayrollOtherIncomes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPayrollOtherIncomes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome2", Storage="_MstUser2", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPayrollOtherIncomes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes2.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome3", Storage="_MstUser3", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPayrollOtherIncomes3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes3.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPayrollOtherIncome4", Storage="_MstUser4", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPayrollOtherIncomes4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPayrollOtherIncomes4.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPayrollOtherIncomeLines(TrnPayrollOtherIncomeLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherIncome = this;
		}
		
		private void detach_TrnPayrollOtherIncomeLines(TrnPayrollOtherIncomeLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherIncome = null;
		}
		
		private void attach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherIncome = this;
		}
		
		private void detach_TrnPayrolls(TrnPayroll entity)
		{
			this.SendPropertyChanging();
			entity.TrnPayrollOtherIncome = null;
		}
	}
}
#pragma warning restore 1591
