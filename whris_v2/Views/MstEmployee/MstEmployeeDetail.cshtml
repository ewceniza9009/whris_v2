@model whris_v2.Models.MstEmployee

@{
    ViewBag.Title = "Employee Detail";
}

<style>
    .cmd-buttons {
        margin-left: 10px;
        width: 90px;
    }

    .row-padding {
        padding-top: 5px;
    }

    .input-width-sm {
        width: 100px;
    }

    .input-width-md {
        width: 180px;
    }

    .input-width-lg {
        width: 500px;
    }

    .ui-label {
        padding-top: 7px;
        padding-left: 0px;
    }
</style>

<div class="row" style="margin-bottom: 20px">
    <div class="col-md-6">
        <h5>Employee Detail</h5>
    </div>
    <div class="col-md-6">
        <button class="btn btn-danger cmd-buttons pull-right btn-labeled"
                type="button"
                onclick="Close_OnClick()">
            <span class="btn-label">
                <i class="fa fa-eject"></i>
            </span>Back
        </button>
        <button class="btn btn-outline-primary cmd-buttons pull-right btn-labeled"
                type="button">
            <span class="btn-label">
                <i class="fa fa-print"></i>
            </span>
            Print
        </button>
        <button class="btn btn-primary cmd-buttons pull-right btn-labeled"
                type="button">
            <span class="btn-label">
                <i class="fa fa-edit"></i>
            </span>
            Edit
        </button>
        <button class="btn btn-primary cmd-buttons pull-right btn-labeled"
                type="submit">
            <span class="btn-label">
                <i class="fa fa-save"></i>
            </span>
            Save
        </button>
    </div>
</div>

@using (Html.BeginForm("SaveEmployee", "MstEmployee", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="row">
        <div class="col-md-6">
            <div class="form-group row">
                @Html.LabelFor(model => model.IdNumber, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.IdNumber, new { @class = "form-control input-width-sm", id = "IdNumberMem", placeholder = "Id Number", type = "text", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.IdNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control input-width-md", id = "LastNameMem", placeholder = "Last Name", type = "text" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control input-width-md", id = "FirstNameMem", placeholder = "First Name", type = "text" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control input-width-md", id = "MiddleNameMem", placeholder = "Middle Name", type = "text" })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.ExtensionName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.ExtensionName, new { @class = "form-control input-width-sm", id = "ExtensionNameMem", placeholder = "Extension Name", type = "text" })
                    @Html.ValidationMessageFor(model => model.ExtensionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control input-width-lg", id = "FullNameMem", placeholder = "Full Name", type = "text", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group row">
                @Html.LabelFor(model => model.BiometricIdNumber, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.BiometricIdNumber, new { @class = "form-control input-width-sm", id = "BiometricIdNumberMem", placeholder = "BiometricId Number", type = "text", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.BiometricIdNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.DateHired, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DateHired, new { @class = "form-control input-width-md", id = "DateHiredMem", placeholder = "Date Hired" })
                    @Html.ValidationMessageFor(model => model.DateHired, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.DateResigned, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DateResigned, new { @class = "form-control input-width-md", id = "DateResignedMem", placeholder = "Date Resigned" })
                    @Html.ValidationMessageFor(model => model.DateResigned, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.IsLocked, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.CheckBoxFor(model => model.IsLocked, new { @class = "form-check-input", id = "IsLockedMem", disabled = "disabled", style = "margin-left: 5px; margin-top: 10px" })
                    @Html.ValidationMessageFor(model => model.IsLocked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <ul class="nav nav-pills" style="margin-top: 20px">
        <li class="nav-item"><a class="nav-link active" href="#tab_1" data-toggle="tab">General Information</a></li>
        <li class="nav-item"><a class="nav-link" href="#tab_2" data-toggle="tab">Payroll Information</a></li>
        <li class="nav-item"><a class="nav-link" href="#tab_3" data-toggle="tab">Memo</a></li>
        <li class="nav-item"><a class="nav-link" href="#tab_4" data-toggle="tab">Shift Code</a></li>
        <li class="nav-item pull-right"><a class="nav-link"><i class="fa fa-gear"></i></a></li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane active" id="tab_1">
            <div class="row" style="margin-top: 20px">
                <div class="col-md-6">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control input-width-lg", id = "AddressMem", placeholder = "Address", type = "text" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ZipCodeId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @(Html.Kendo().MultiColumnComboBox()
                               .Name("ZipCodeId")
                               .DataTextField("ZipCode")
                               .DataValueField("Id")
                               .Filter("contains")
                               .FilterFields(new string[] { "ZipCode", "Location" })
                               .Columns(col =>
                               {
                                   col.Add().Field("ZipCode").Title("ZipCode");
                                   col.Add().Field("Location").Title("Location");

                               })
                               .DropDownWidth(500)
                               .Height(400)
                               .DataSource(
                                   source =>
                                   {
                                       source.Read("CmbZipCode", "MstEmployee");
                                   }

                            ))
                            @Html.ValidationMessageFor(model => model.ZipCodeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control input-width-md", id = "PhoneNumberMem", placeholder = "Phone Number", type = "text" })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CellphoneNumber, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.CellphoneNumber, new { @class = "form-control input-width-md", id = "CellphoneNumberMem", placeholder = "Cel Number", type = "text" })
                            @Html.ValidationMessageFor(model => model.CellphoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control input-width-md", id = "EmailAddressMem", placeholder = "Email address" })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.DateOfBirth, new { @class = "form-control input-width-md", id = "DateOfBirthMem", placeholder = "Birth Date" })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PlaceOfBirth, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.PlaceOfBirth, new { @class = "form-control input-width", id = "PlaceOfBirthMem", placeholder = "Place of Birth", type = "text" })
                            @Html.ValidationMessageFor(model => model.PlaceOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PlaceOfBirthZipCodeId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @(Html.Kendo().MultiColumnComboBox()
                               .Name("PlaceOfBirthZipCodeId")
                               .DataTextField("ZipCode")
                               .DataValueField("Id")
                               .Placeholder("Place of Birth zip code")
                               .Filter("contains")
                               .FilterFields(new string[] { "ZipCode", "Location" })
                               .Columns(col =>
                               {
                                   col.Add().Field("ZipCode").Title("ZipCode");
                                   col.Add().Field("Location").Title("Location");

                               })
                               .DropDownWidth(500)
                               .Height(400)
                               .DataSource(
                                   source =>
                                   {
                                       source.Read("CmbPlaceOfBirthZipCode", "MstEmployee");
                                   }

                            ))
                            @Html.ValidationMessageFor(model => model.ZipCodeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @(Html.Kendo().ComboBoxFor(model => model.Sex)
                               .Name("SexMem")
                               .Placeholder("Sex")
                               .BindTo(new List<string>() {
                                   "Male",
                                   "Female"
                               })
                               .Suggest(true)
                            )
                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CivilStatus, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @(Html.Kendo().ComboBoxFor(model => model.CivilStatus)
                               .Name("CivilStatusMem")
                               .Placeholder("Civil Status")
                               .BindTo(new List<string>() {
                                   "Single",
                                   "Married",
                                   "Separated",
                                   "Window"
                               })
                               .Suggest(true)
                            )
                            @Html.ValidationMessageFor(model => model.CivilStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CitizenshipId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @(Html.Kendo().ComboBoxFor(model => model.CitizenshipId)
                               .Placeholder("Civil Status")
                               .DataTextField("Citizenship")
                               .DataValueField("Id")
                               .DataSource(source =>
                                       {
                                   source.Read(read =>
                                   {
                                       read.Action("CmbCitizenship", "MstEmployee");
                                   });
                               })
                            )
                            @Html.ValidationMessageFor(model => model.CitizenshipId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ReligionId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @(Html.Kendo().ComboBoxFor(model => model.ReligionId)
                               .Placeholder("Religion")
                               .DataTextField("Religion")
                               .DataValueField("Id")
                               .DataSource(source =>
                                       {
                                   source.Read(read =>
                                   {
                                       read.Action("CmbReligion", "MstEmployee");
                                   });
                               })
                            )
                            @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Height, new { @class = "form-control input-width-md", id = "HeightMem", placeholder = "Height", type = "number", step="0.01" })
                            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Weight, new { @class = "form-control input-width-md", id = "WeightMem", placeholder = "Weight", type = "number", step="0.01"})
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane" id="tab_2">

        </div>
        <div class="tab-pane" id="tab_3">

        </div>
        <div class="tab-pane" id="tab_4">

        </div>
    </div>
}

<script>
    function Close_OnClick() {
        location.href = "@Url.Action("Index","MstEmployee")";
    }

</script>
